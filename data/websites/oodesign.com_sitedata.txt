{"link":"oodesign.com","html":"<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>Design Patterns | Object Oriented Design</title>\n<meta name=\"title\" content=\"Design Patterns\">\n<meta name=\"author\" content=\"oodesign\">\n<meta name=\"description\" content=\"\">\n<meta name=\"keywords\" content=\"Design Patterns, Design Principles, Object Oriented Design, Java, C#, VB\">\n<meta name=\"Generator\" content=\"Joomla! - Copyright (C) 2005 - 2006 Open Source Matters. All rights reserved.\">\n<meta name=\"robots\" content=\"index, follow\">\n<base href=\"https://www.oodesign.com/\">\n<script type=\"text/javascript\" async=\"\" data-rocketsrc=\"https://apis.google.com/js/plusone.js\" data-rocketoptimized=\"true\"></script><script type=\"text/javascript\">\n//<![CDATA[\ntry{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:\"cf\",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:\"/cdn-cgi/nexp/dok3v=1613a3a185/\"},atok:\"6972b97bb7fbc62c7c588d0ad3066b9f\",petok:\"84b318dee318086d91ec36f4d55272c4f11d2eae-1492839836-1800\",zone:\"oodesign.com\",rocket:\"a\",apps:{}}];document.write('<script type=\"text/javascript\" src=\"//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=85b614c0f6/cloudflare.min.js\"><'+'\\/script>');}}catch(e){};\n//]]>\n</script><script type=\"text/javascript\" src=\"//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=85b614c0f6/cloudflare.min.js\"></script><style type=\"text/css\">.cf-hidden { display: none; } .cf-invisible { visibility: hidden; }</style><script data-module=\"cloudflare/rocket\" id=\"cfjs_block_12884f5f5fa\" onload=\"CloudFlare.__cfjs_block_12884f5f5fa_load()\" onerror=\"CloudFlare.__cfjs_block_12884f5f5fa_error()\" onreadystatechange=\"CloudFlare.__cfjs_block_12884f5f5fa_readystatechange()\" type=\"text/javascript\" src=\"https://www.oodesign.com/cdn-cgi/nexp/dok3v=1613a3a185/cloudflare/rocket.js\"></script>\n<link rel=\"shortcut icon\" href=\"https://www.oodesign.com/images/favicon.ico\">\n<link rel=\"stylesheet\" href=\"https://www.oodesign.com/templates/oodesign7/css/template_css.css\" type=\"text/css\">\n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n\t\tvar isMobi = (function(a){return(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)));})(navigator.userAgent||navigator.vendor||window.opera);\n</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://www.oodesign.com/templates/oodesign7/highslide/highslide.css\">\n \n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n\tfunction addEvent( obj, type, fn ) {\n\t\tif ( obj.attachEvent ) {\n\t\t\tobj['e'+type+fn] = fn;\n\t\t\tobj[type+fn] = function(){obj['e'+type+fn]( window.event );}\n\t\t\tobj.attachEvent( 'on'+type, obj[type+fn] );\n\t\t} else\n\t\t\tobj.addEventListener( type, fn, false );\n\t}\n\t\n\taddEvent(window, 'scroll', function(event) {\n\n\t\tvar scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n\n\t\tvar positionizer = function(ban){\n\t\t\tif (ban != null)\n\t\t\t{\n\t\t\t\tif (scrollPosition < 100)\n\t\t\t\t{\n\t\t\t\t\tban.style.position = \"absolute\";\n\t\t\t\t\tban.style.top = 0;\n\t\t\t\t\tban.style.paddingTop = \"100px\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tban.style.position = \"fixed\";\n\t\t\t\t\tban.style.top = 0;\n\t\t\t\t\tban.style.paddingTop = 0;\t\t\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\t\n\t\tpositionizer(document.getElementById(\"moduletablebanl\"));\n\t\tpositionizer(document.getElementById(\"moduletablebanr\"));\n\t\tvar elemClass = document.getElementsByClassName(\"moduletablebanr\");\n\t\tif (elemClass != null)\n\t\t\tpositionizer(elemClass[0]);\n\t});\n\n</script>\n<script type=\"text/javascript\" charset=\"utf-8\" async=\"\" data-rocketsrc=\"https://platform.twitter.com/js/button.c3b1210de6dcfc66af312e0fed7fdcd2.js\" data-rocketoptimized=\"true\"></script></head>\n<body leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\">\n<noindex>\n</noindex><noindex>\n</noindex><div style=\"display:none\">\n<a href=\"http://www.oodesign.com/\">1</a>\n<a href=\"http://www.oodesign.com/structural-patterns/\">2</a>\n<a href=\"http://www.oodesign.com/creational-patterns/\">3</a>\n<a href=\"http://www.oodesign.com/observer-pattern.html\">4</a>\n<a href=\"http://www.oodesign.com/prototype-pattern.html\">5</a>\n<a href=\"http://www.oodesign.com/iterator-pattern.html\">6</a>\n<a href=\"http://www.oodesign.com/adapter-pattern.html\">7</a>\n<a href=\"http://www.oodesign.com/composite-pattern.html\">8</a>\n<a href=\"http://www.oodesign.com/flyweight-pattern.html\">9</a>\n<a href=\"http://www.oodesign.com/interpreter-pattern.html\">10</a>\n<a href=\"http://www.oodesign.com/decorator-pattern.html\">11</a>\n<a href=\"http://www.oodesign.com/singleton-pattern.html\">12</a>\n<a href=\"http://www.oodesign.com/memento-pattern.html\">13</a>\n<a href=\"http://www.oodesign.com/command-pattern.html\">14</a>\n<a href=\"http://www.oodesign.com/design-principles.html\">15</a>\n<a href=\"http://www.oodesign.com/visitor-pattern.html\">16</a>\n<a href=\"http://www.oodesign.com/factory-pattern.html\">17</a>\n<a href=\"http://www.oodesign.com/strategy-pattern.html\">18</a>\n<a href=\"http://www.oodesign.com/mediator-pattern.html\">19</a>\n<a href=\"http://www.oodesign.com/builder-pattern.html\">20</a>\n<a href=\"http://www.oodesign.com/bridge-pattern.html\">21</a>\n<a href=\"http://www.oodesign.com/proxy-pattern.html\">22</a>\n<a href=\"http://www.oodesign.com/design-pattern-books/\">23</a>\n<a href=\"http://www.oodesign.com/factory-method-pattern.html\">24</a>\n<a href=\"http://www.oodesign.com/template-method-pattern.html\">25</a>\n<a href=\"http://www.oodesign.com/abstract-factory-pattern.html\">26</a>\n<a href=\"http://www.oodesign.com/single-responsibility-principle.html\">27</a>\n<a href=\"http://www.oodesign.com/interface-segregation-principle.html\">28</a>\n<a href=\"http://www.oodesign.com/dependency-inversion-principle.html\">29</a>\n<a href=\"http://www.oodesign.com/open-close-principle.html\">30</a>\n<a href=\"http://www.oodesign.com/object-pool-pattern.html\">31</a>\n<a href=\"http://www.oodesign.com/null-object-pattern.html\">32</a>\n<a href=\"http://www.oodesign.com/chain-of-responsibility-pattern.html\">33</a>\n<a href=\"http://www.oodesign.com/liskov-s-substitution-principle.html\">34</a>\n<a href=\"http://www.oodesign.com/o-reilly-headfirst-design-patterns.html\">35</a>\n<a href=\"http://www.oodesign.com/memento-pattern-calculator-example-java-sourcecode.html\">36</a>\n<a href=\"http://www.oodesign.com/decorator-pattern-gui-example-java-sourcecode.html\">37</a>\n<a href=\"http://www.oodesign.com/visitor-pattern-customers-report-java-sourcecode.html\">38</a>\n<a href=\"http://www.oodesign.com/flyweight-pattern-wargame-example-java-sourcecode.html\">39</a>\n<a href=\"http://www.oodesign.com/composite-pattern-shapes-example-java-sourcecode.html\">40</a>\n<a href=\"http://www.oodesign.com/bridge-pattern-object-persistence-api-example-java-sourcecode.html\">41</a>\n<a href=\"http://www.oodesign.com/index2.php?option=com_content&amp;do_pdf=1&amp;id=24\">42</a>\n<a href=\"http://www.oodesign.com/index2.php?option=com_content&amp;do_pdf=1&amp;id=43\">43</a>\n<a href=\"http://www.oodesign.com/index2.php?option=com_content&amp;do_pdf=1&amp;id=30\">44</a>\n<a href=\"http://www.oodesign.com/index2.php?option=com_content&amp;do_pdf=1&amp;id=7\">45</a>\n<a href=\"http://www.oodesign.com/index2.php?option=com_content&amp;do_pdf=1&amp;id=33\">46</a>\n</div><table border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tblmain\">\n<tbody><tr align=\"left\" valign=\"bottom\">\n<td colspan=\"3\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"tblheader\">\n<tbody><tr>\n<td align=\"left\" valign=\"bottom\" background=\"https://www.oodesign.com/templates/oodesign7/images/oo-design-header.jpg\">\n<img src=\"https://www.oodesign.com/templates/oodesign7/images/spacer_header.gif\" alt=\"header image\">\n</td>\n</tr>\n</tbody></table></td>\n</tr>\n<tr><td align=\"left\" valign=\"top\" id=\"sidebar-left\"> <table cellpadding=\"0\" cellspacing=\"0\" class=\"moduletable\">\n<tbody><tr>\n<td>\n<form action=\"index.php?option=com_search\" method=\"get\">\n<div class=\"search\">\n<input name=\"searchword\" id=\"mod_search_searchword\" maxlength=\"20\" alt=\"search\" class=\"inputbox\" type=\"text\" size=\"20\" value=\"search...\" onblur=\"if(this.value=='') this.value='search...';\" onfocus=\"if(this.value=='search...') this.value='';\"> </div>\n<input type=\"hidden\" name=\"option\" value=\"com_search\">\n<input type=\"hidden\" name=\"Itemid\" value=\"\">\n</form> </td>\n</tr>\n</tbody></table>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"moduletable\">\n<tbody><tr>\n<th valign=\"top\">\nMain Menu </th>\n</tr>\n<tr>\n<td>\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr align=\"left\"><td><a href=\"https://www.oodesign.com/\" class=\"mainlevel\" id=\"active_menu\">Home</a></td></tr>\n<tr align=\"left\"><td><a href=\"https://www.oodesign.com/design-principles.html\" class=\"mainlevel\">Design Principles</a>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/open-close-principle.html\" class=\"sublevel\">Open Close Principle</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/dependency-inversion-principle.html\" class=\"sublevel\">Dependency Inversion Principle</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/interface-segregation-principle.html\" class=\"sublevel\">Interface Segregation Principle</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/single-responsibility-principle.html\" class=\"sublevel\">Single Responsibility Principle</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/liskov-s-substitution-principle.html\" class=\"sublevel\">Liskov's Substitution Principle</a></div>\n</td></tr>\n<tr align=\"left\"><td><a href=\"https://www.oodesign.com/creational-patterns/\" class=\"mainlevel\">Creational Patterns</a>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/singleton-pattern.html\" class=\"sublevel\">Singleton</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/factory-pattern.html\" class=\"sublevel\">Factory</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/factory-method-pattern.html\" class=\"sublevel\">Factory Method</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/abstract-factory-pattern.html\" class=\"sublevel\">Abstract Factory</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/builder-pattern.html\" class=\"sublevel\">Builder</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/prototype-pattern.html\" class=\"sublevel\">Prototype</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/object-pool-pattern.html\" class=\"sublevel\">Object Pool</a></div>\n</td></tr>\n<tr align=\"left\"><td><a href=\"https://www.oodesign.com/behavioral-patterns/\" class=\"mainlevel\">Behavioral Patterns</a>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/chain-of-responsibility-pattern.html\" class=\"sublevel\">Chain of Responsibility</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/command-pattern.html\" class=\"sublevel\">Command</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/interpreter-pattern.html\" class=\"sublevel\">Interpreter</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/iterator-pattern.html\" class=\"sublevel\">Iterator</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/mediator-pattern.html\" class=\"sublevel\">Mediator</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/memento-pattern.html\" class=\"sublevel\">Memento</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/observer-pattern.html\" class=\"sublevel\">Observer</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/strategy-pattern.html\" class=\"sublevel\">Strategy</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/template-method-pattern.html\" class=\"sublevel\">Template Method</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/visitor-pattern.html\" class=\"sublevel\">Visitor</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/null-object-pattern.html\" class=\"sublevel\">Null Object</a></div>\n</td></tr>\n<tr align=\"left\"><td><a href=\"https://www.oodesign.com/structural-patterns/\" class=\"mainlevel\">Structural Patterns</a>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/adapter-pattern.html\" class=\"sublevel\">Adapter</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/bridge-pattern.html\" class=\"sublevel\">Bridge</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/composite-pattern.html\" class=\"sublevel\">Composite</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/decorator-pattern.html\" class=\"sublevel\">Decorator</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/flyweight-pattern.html\" class=\"sublevel\">Flyweight</a></div>\n<div style=\"padding-left: 4px\"><img src=\"https://www.oodesign.com/templates/oodesign7/images/indent1.png\" alt=\"\"><a href=\"https://www.oodesign.com/proxy-pattern.html\" class=\"sublevel\">Proxy</a></div>\n</td></tr>\n<tr align=\"left\"><td><a href=\"https://www.oodesign.com/design-pattern-books/\" class=\"mainlevel\">Design Pattern Books</a></td></tr>\n</tbody></table> </td>\n</tr>\n</tbody></table>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"moduletable\">\n<tbody><tr>\n<th valign=\"top\">\nForum </th>\n</tr>\n<tr>\n<td>\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr align=\"left\"><td><a href=\"http://forum.oodesign.com/?CategoryID=2\" class=\"mainlevel\">What Design Pattern To Choose?</a></td></tr>\n<tr align=\"left\"><td><a href=\"http://forum.oodesign.com/?CategoryID=3\" class=\"mainlevel\">Design Principles and Patterns</a></td></tr>\n<tr align=\"left\"><td><a href=\"http://forum.oodesign.com/?CategoryID=4\" class=\"mainlevel\">Enterprise Patterns</a></td></tr>\n<tr align=\"left\"><td><a href=\"http://forum.oodesign.com/?CategoryID=5\" class=\"mainlevel\">Books</a></td></tr>\n</tbody></table> </td>\n</tr>\n</tbody></table>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"moduletable\">\n<tbody><tr>\n<td>\n</td>\n</tr>\n</tbody></table>\n</td>\n<td width=\"100%\" align=\"center\" valign=\"top\">\n<table width=\"97%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tblpathway\">\n<tbody><tr>\n<td><span class=\"pathway\"><a href=\"https://www.oodesign.com/\" class=\"pathway\">Home</a> <img src=\"https://www.oodesign.com/templates/oodesign7/images/arrow.png\" border=\"0\" alt=\"arrow\"> Home </span> </td>\n<td>\n<div id=\"delicio\">\n<img src=\"https://www.oodesign.com/templates/oodesign7/images/delicious.small.gif\" height=\"10\" width=\"10\" alt=\"Delicious\">\n<a href=\"http://delicious.com/save\" onclick=\"window.open('http://delicious.com/save?v=5&amp;noui&amp;jump=close&amp;url='+encodeURIComponent(location.href)+'&amp;title='+encodeURIComponent(document.title), 'delicious','toolbar=no,width=550,height=550'); return false;\"> Bookmark this on Delicious</a>\n</div>\n</td>\n</tr>\n</tbody></table>\n<div id=\"bdd1b7801d9329b2f9d7313381627c70c\"></div><table width=\"97%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tblbody\" id=\"main-content-container\">\n<tbody><tr>\n<td>\n<table class=\"contentpaneopen\">\n<tbody><tr>\n<td valign=\"top\" colspan=\"2\">\n<div style=\"float:right;\" id=\"books\">\n<div style=\"float:right;\">\n<a href=\"http://www.amazon.com/gp/product/0596007124?ie=UTF8&amp;tag=wwwconsultguc-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596007124\">\n<img style=\"border: 1px solid black;\" alt=\"Headfirst Design Patterns\" src=\"images/books/headfirst-design-patterns-cover-pre.png\"></a>\n<a href=\"http://www.amazon.com/gp/product/0596008678?ie=UTF8&amp;tag=wwwconsultguc-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596008678\">\n<img style=\"border: 1px solid black;\" alt=\"Headfirst Object Oriented Analysis and Design\" src=\"images/books/headfirst-object-oriented-analysis-and-design-cover-pre.png\"></a>\n<a href=\"http://www.amazon.com/gp/product/0131177052?ie=UTF8&amp;tag=wwwconsultguc-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596008678\">\n<img style=\"border: 1px solid black;\" alt=\"Working Effectively with Legacy Code (Robert C. Martin Series)\" src=\"images/books/working-effectively-with-legacy-code-cover-pre.png\"></a>\n<a href=\"https://www.amazon.com/dp/0321112296?tag=wwwconsultguc-20&amp;camp=0&amp;creative=0&amp;linkCode=as1&amp;creativeASIN=0321112296&amp;adid=10SD8FG8VT1FY0CQS56N\">\n<img style=\"border: 1px solid black;\" alt=\"Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives\" src=\"images/books/refactoring-cover-pre.png\"></a>\n</div>\n<span style=\"color:black;\">Books We Recommend:</span>\n</div>\n<h1 style=\"padding-bottom:5px;margin-bottom:5px;\">Design Patterns</h1>\n<div style=\"width:275px;height:20px;padding-bottom:15px;margin-left:3px;\">\n<div style=\"width:80px;height:20px;float:left;margin-right:15px;\">\n<iframe src=\"http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Foodesign.com%2F&amp;layout=standard&amp;show_faces=false&amp;width=80&amp;action=like&amp;font&amp;colorscheme=light&amp;height=20&amp;layout=button_count\" scrolling=\"no\" frameborder=\"0\" style=\"border:none; overflow:hidden; width:80px; height:20px;\" allowtransparency=\"true\"></iframe>\n</div>\n<div style=\"width:80px;height:20px;float:left;\">\n \n<g:plusone size=\"medium\"></g:plusone>\n \n<script type=\"text/rocketscript\" data-rocketoptimized=\"true\">\n\t\t\t(function() { \n\t\t\t\tvar po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\n\t\t\t\tpo.src = 'https://apis.google.com/js/plusone.js';\n\t\t\t\tvar s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n\t\t\t})();\n\t\t</script>\n</div>\n<div style=\"float:left;width:100px;\"><a href=\"http://twitter.com/share\" class=\"twitter-share-button\" data-count=\"horizontal\" data-twitter-extracted-i1492839836614937458=\"true\">Tweet</a><script type=\"text/rocketscript\" data-rocketsrc=\"http://platform.twitter.com/widgets.js\" async=\"\" data-rocketoptimized=\"true\"></script></div>\n</div>\n\n<h2>Creational Design Patterns:</h2>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/singleton-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/singleton-pattern-preview.png\" alt=\"Singleton Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/singleton-pattern.html\">Singleton</a></strong> - <span class=\"intent\">Ensure that only one instance of a class is created</span> and <span class=\"intent\">Provide a global access point to the object.</span><br>\n</div>\n<span class=\"box\"><a class=\"head-a\" href=\"javascript:void(0)\"> When to Use </a></span>\n,\n<span class=\"box\"><a class=\"head-b\" href=\"javascript:void(0)\"> Common Usage </a></span>\n,\n<span class=\"box\">\n<span class=\"label\">Example: </span><span class=\"value\"><a href=\"http://www.oodesign.com/singleton-pattern.html#lazy-singleton\">Lazy Singleton in Java</a></span></span>,\n<span class=\"box\">\n<span class=\"label\">Example: </span><span class=\"value\"><a href=\"http://www.oodesign.com/singleton-pattern.html#early-singleton\">Early Singleton in Java</a></span></span>\n\n<div class=\"body-a\">\nSingleton pattern should be used when we must ensure that only one instance of a class is created and when the instance must be available through all the code. A special care should be taken in multi-threading environments when multiple threads must access the same resources through the same singleton object.\n</div>\n<div class=\"body-b\">\nThere are many common situations when singleton pattern is used:<br>\n- Logger Classes<br>\n- Configuration Classes<br>\n- Accesing resources in shared mode<br>\n- Other design patterns implemented as Singletons: Factories and Abstract Factories, Builder, Prototype<br>\n</div>\n<div class=\"clear\"></div>\n</div>\n\n \n\n\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/factory-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/factory-pattern-preview.png\" alt=\"Factory Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/factory-pattern.html\">Factory</a></strong>(Simplified version of Factory Method) - <span class=\"intent\">Creates objects without exposing the instantiation logic to the client</span> and <span class=\"intent\">Refers to the newly created object through a common interface.</span>\n</div>\n<span class=\"box\"><a class=\"head-a\" href=\"javascript:void(0)\"> When to Use </a></span>\n,\n<span class=\"box\"><a class=\"head-b\" href=\"javascript:void(0)\"> Common Usage </a></span>\n<div class=\"body-a\">\nFactory pattern should be used when:\n- a framework delegate the creation of objects derived from a common superclass to the factory\n- we need flexibility in adding new types of objects that must be created by the class\n</div>\n<div class=\"body-b\">\nAlong with singleton pattern the factory is one of the most used patterns. Almost any application has some factories. Here are a some examples in java:<br>\n- factories providing an xml parser: javax.xml.parsers.DocumentBuilderFactory or javax.xml.parsers.SAXParserFactory <br>\n- java.net.URLConnection - allows users to decide which protocol to use<br>\n</div>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/factory-method-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/factory-method-pattern-preview.png\" alt=\"Factory Method\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nDocument Application Example<br>\n<a href=\"images/creational/factory-method-pattern-example.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/factory-method-pattern-example-preview.png\" alt=\"Factory Method Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/factory-method-pattern.html\">Factory Method</a></strong> - <span class=\"intent\">Defines an interface for creating objects, but let subclasses to decide which class to instantiate</span> and <span class=\"intent\">Refers to the newly created object through a common interface.</span>\n</div>\n<span class=\"box\"><a class=\"head-a\" href=\"javascript:void(0)\"> When to Use </a></span>\n,\n<span class=\"box\"><a class=\"head-b\" href=\"javascript:void(0)\"> Common Usage </a></span>\n<div class=\"body-a\">\nFactory Method pattern should be used when:<br>\n- a framework delegate the creation of objects derived from a common superclass to the factory<br>\n- the base factory class does not know what concrete classes will be required to create\n- delegates to its subclasses the creation of concrete objects<br>\n- factory subclasses subclasses are aware of the concrete classes that must be instantiated<br><br>\nFactory method pattern, compared to Factory pattern replace the factory with an abstract class and a set of concrete factories subclasses. The subclasses are responsible for creating concrete product objects; for factory method is possible adding new product classes without changing the abstract factory. The same result can be achieved for simplified factory pattern if reflection is used.\n</div>\n<div class=\"body-b\">\nAlong with singleton pattern the factories are the most used patterns. Almost any application has some factories. Here are a some examples:<br>\n- factories providing an xml parser: javax.xml.parsers.DocumentBuilderFactory or javax.xml.parsers.SAXParserFactory <br>\n</div>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/abstract-factory-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/abstract-factory-pattern-preview.png\" alt=\"Abstract Factory\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nLook &amp; Feel Example<br>\n<a href=\"images/creational/abstract-factory-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/abstract-factory-pattern-example-preview.png\" alt=\"Abstract Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/abstract-factory-pattern.html\">Abstract Factory</a></strong> - Offers the interface for creating a family of related objects, without explicitly specifying their classes.\n</div>\n<span class=\"box\"><a class=\"head-a\" href=\"javascript:void(0)\"> When to Use </a></span>\n,\n<span class=\"box\"><a class=\"head-b\" href=\"javascript:void(0)\"> Common Usage </a></span>\n,\n<span class=\"box\">\n<span class=\"label\">Example: </span><span class=\"value\"><a href=\"http://www.oodesign.com/abstract-factory-pattern.html#look-and-feel-example\">Gui Look &amp; Feel in Java</a></span>\n</span>\n<div class=\"body-a\">\nAbstract Factory should be used when:\n<ul>\n<li>A system should be configured with one of multiple families of products</li>\n<li>A system should be independent of how its products are created, composed and represented</li>\n<li>Products from the same family should be used all together, products from different families ahould not be used togheter and this constraint must be ensured.\n</li><li>Only the product interfaces are revealed, the implementations remains hidden to the clients.</li>\n</ul>\n</div>\n<div class=\"body-b\">\nExamples of abstract factories:\n<ul>\n<li>java.awt.Toolkit - the abstract superclass of all actual implementations of the Abstract Window Toolkit. Subclasses of Toolkit are used to bind the various components to particular native toolkit implementations(Java AWT).</li>\n<li>javax.swing.LookAndFeel - an abstract swing factory to swithct between several look and feel for the components displayed(Java Swing).</li>\n<li>java.sql.Connection - an abstract factory which create Statements, PreparedStatements, CallableStatements,... for each database flavor.</li>\n</ul>\n</div>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/builder-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/builder-pattern-preview.png\" alt=\"Builder Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nText Converter Example<br>\n<a href=\"images/creational/builder-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/builder-pattern-example-preview.png\" alt=\"Builder Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/builder-pattern.html\">Builder</a></strong> - Defines an instance for creating an object but letting subclasses decide which class to instantiate and Allows a finer control over the construction process.\n</div>\n<span class=\"box\">\n<span class=\"label\">Example: </span><span class=\"value\"><a href=\"http://www.oodesign.com/builder-pattern.html#text-converting-example\">Text Converter in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/prototype-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/prototype-pattern-preview.png\" alt=\"Highslide JS\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/prototype-pattern.html\">Prototype</a></strong> - Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.\n</div>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/creational/object-pool-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/object-pool-pattern-preview.png\" alt=\"Object Pool\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nDatabase Example<br>\n<a href=\"images/creational/object-pool-pattern-example.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/creational/object-pool-pattern-preview.png\" alt=\"Object Pool Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/object-pool-pattern.html\">Object Pool</a></strong> - reuses and shares objects that are expensive to create..\n</div>\n<span class=\"box\"><a class=\"head-a\" href=\"javascript:void(0)\"> When to Use </a></span>\n,\n<span class=\"box\"><a class=\"head-b\" href=\"javascript:void(0)\"> Common Usage </a></span>\n,\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"\">Database Connection Pool in Java</a></span>\n</span>\n<div class=\"body-a\">\nBasically, we'll use an object pool whenever there are several clients who needs the same stateless resource which is expensive to create.\n</div>\n<div class=\"body-b\">\nThe most common situations when object pool pattern is used:<br>\n- Database Connections<br>\n- Remote Objects<br>\n</div>\n<div class=\"clear\"></div>\n</div>\n<h2>Behavioral Design Patterns:</h2>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/chain-of-responsibility-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/chain-of-responsibility-pattern-preview.png\" alt=\"Chain of Responsibility\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/chain-of-responsibility-pattern.html\">Chain of Responsibiliy</a></strong> - It avoids attaching the sender of a request to its receiver, giving this way other objects the possibility of handling the request too.<br>\n- The objects become parts of a chain and the request is sent from one object to another across the chain until one of the objects will handle it.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/command-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/command-pattern-preview.png\" alt=\"Command Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nRestaurant Example<br>\n<a href=\"images/behavioral/command-pattern-example.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/command-pattern-example-preview.png\" alt=\"Command Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/command-pattern.html\">Command</a></strong> - Encapsulate a request in an object, Allows the parameterization of clients with different requests and Allows saving the requests in a queue.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/command-pattern.html\">Buying/Selling stocks in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/interpreter-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/interpreter-pattern-preview.png\" alt=\"Interpreter Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/interpreter-pattern.html\">Interpreter</a></strong> - Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language / Map a domain to a language, the language to a grammar, and the grammar to a hierarchical object-oriented design\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/interpreter-pattern.html\">Romans Numerals Converter in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/iterator-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/iterator-pattern-preview.png\" alt=\"Iterator Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/iterator-pattern.html\">Iterator</a></strong> - Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/iterator-pattern.html\">Java Iterator</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/mediator-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/mediator-pattern-preview.png\" alt=\"Mediator Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/mediator-pattern.html\">Mediator</a></strong> - Define an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/observer-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/observer-pattern-preview.png\" alt=\"Observer Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nNews Publisher Example<br>\n<a href=\"images/behavioral/observer-example-newspublisher-uml-class-diagram.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/observer-example-newspublisher-uml-class-diagram-preview.png\" alt=\"Highslide JS\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/observer-pattern.html\">Observer</a></strong> - Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/observer-pattern.html\">News Publisher in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/strategy-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/strategy-pattern-preview.png\" alt=\"Strategy Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nRobot Example<br>\n<a href=\"images/behavioral/strategy-example-robot-uml-class-diagram.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/strategy-example-robot-uml-class-diagram-preview.png\" alt=\"Highslide JS\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/strategy-pattern.html\">Strategy</a></strong> - Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/strategy-pattern.html\">Robot Application in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/template-method-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/template-method-pattern-preview.png\" alt=\"Template Method\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nTravel Example<br>\n<a href=\"images/behavioral/template-method-example-trips-uml-class-diagram.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/template-method-example-trips-uml-class-diagram-preview.png\" alt=\"Highslide JS\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/template-method-pattern.html\">Template Method</a></strong> - Define the skeleton of an algorithm in an operation, deferring some steps to subclasses / Template Method lets subclasses redefine certain steps of an algorithm without letting them to change the algorithm's structure.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/template-method-pattern.html\">Travel Agency Application in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/visitor-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/visitor-pattern-preview.png\" alt=\"Visitor Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nCustomers Example<br>\n<a href=\"images/behavioral/visitor-example-customers-uml-class-diagram.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/visitor-example-customers-uml-class-diagram-preview.png\" alt=\"Visitor Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/visitor-pattern.html\">Visitor</a></strong> - Represents an operation to be performed on the elements of an object structure / Visitor lets you define a new operation without changing the classes of the elements on which it operates.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/visitor-pattern-customers-report-java-sourcecode.html\">Customers Report Example</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/behavioral/null-object-pattern.gif\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/behavioral/null-object-pattern-preview.png\" alt=\"Null Object Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/null-object-pattern.html\">Null Object</a></strong> - Provide an object as a surrogate for the lack of an object of a given type. / The Null Object Pattern provides intelligent do nothing behavior, hiding the details from its collaborators.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<h2>Structural Design Patterns:</h2>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/adapter-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/adapter-pattern-preview.png\" alt=\"Adapter Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n \n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/adapter-pattern.html\">Adapter</a></strong> - Convert the interface of a class into another interface clients expect. / Adapter lets classes work together, that could not otherwise because of incompatible interfaces.\n</div>\n \n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/bridge-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/bridge-pattern-preview.png\" alt=\"Bridge Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nClick to zoom<br>\n<a href=\"images/structural/bridge-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/bridge-pattern-example-preview.png\" alt=\"Bridge Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/bridge-pattern.html\">Bridge</a></strong> - Compose objects into tree structures to represent part-whole hierarchies. / Composite lets clients treat individual objects and compositions of objects uniformly.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/bridge-pattern-object-persistence-api-example-java-sourcecode.html\">Object Persistence Api in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/composite-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/composite-pattern-preview.png\" alt=\"Composite Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nShapes Example<br>\n<a href=\"images/structural/composite-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/composite-pattern-example-preview.png\" alt=\"Composite Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/composite-pattern.html\">Composite</a></strong> - Compose objects into tree structures to represent part-whole hierarchies. / Composite lets clients treat individual objects and compositions of objects uniformly.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/composite-pattern-shapes-example-java-sourcecode.html\">Shapes Example in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/decorator-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/decorator-pattern-preview.png\" alt=\"Decorator Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nGUI Example<br>\n<a href=\"images/structural/decorator-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/decorator-pattern-example-preview.png\" alt=\"Decorator Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/decorator-pattern.html\">Decorator</a></strong> - add additional responsibilities dynamically to an object.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/decorator-pattern-gui-example-java-sourcecode.html\">Gui Application Example</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/flyweight-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/flyweight-pattern-preview.png\" alt=\"Flyweight Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nWargame Example<br>\n<a href=\"images/structural/flyweight-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/flyweight-pattern-example-preview.png\" alt=\"Flyweight Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/flyweight-pattern.html\">Flyweight</a></strong> - use sharing to support a large number of objects that have part of their internal state in common where the other part of state can vary.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/flyweight-pattern-wargame-example-java-sourcecode.html\">Java Wargame Example</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/memento-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/memento-pattern-preview.png\" alt=\"Memento Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nCalculator Example<br>\n<a href=\"images/structural/memento-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/memento-pattern-example-preview.png\" alt=\"Memento Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/memento-pattern.html\">Memento</a></strong> - capture the internal state of an object without violating encapsulation and thus providing a mean for restoring the object into initial state when needed.\n</div>\n<span class=\"box\">\n<span class=\"label\">Source Code: </span><span class=\"value\"><a href=\"http://www.oodesign.com/memento-pattern-calculator-example-java-sourcecode.html\">Calculator Example in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n<div class=\"item\">\n<span class=\"image\">\nClick to zoom<br>\n<a href=\"images/structural/proxy-pattern.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/proxy-pattern-preview.png\" alt=\"Proxy Pattern\" title=\"Click to enlarge\">\n</a>\n</span>\n<span class=\"image-example\">\nImage Viewer<br>\n<a href=\"images/structural/proxy-pattern-example.png\" class=\"highslide\" onclick=\"return hs.expand(this)\">\n<img src=\"images/structural/proxy-pattern-example-preview.png\" alt=\"Proxy Pattern Example\" title=\"Click to enlarge\">\n</a>\n</span>\n<div class=\"prop\"></div>\n<div class=\"description\">\n<strong><a href=\"http://www.oodesign.com/proxy-pattern.html\">Proxy</a></strong> - provide a “Placeholder” for an object to control references to it.\n</div>\n<span class=\"box\">\n<span class=\"label\">Sourcecode: </span><span class=\"value\"><a href=\"http://www.oodesign.com/proxy-pattern.html\">Proxy Pattern in Java</a></span>\n</span>\n<div class=\"clear\"></div>\n</div>\n</td>\n</tr>\n</tbody></table>\n<span class=\"article_seperator\">&nbsp;</span>\n</td><style>div#bdd1b7801d9329b2f9d7313381627c70c,div#bdd1b7801d9329b2f9d7313381627c70c a{font-style:normal;font-family:Verdana,Tahoma,sans-serif;text-decoration:none;display:none;font-weight:normal;font-size:8px;color:gray;text-align:center;}</style> </tr>\n</tbody></table></td><td align=\"left\" valign=\"top\" id=\"sidebar-right\"> <table cellpadding=\"0\" cellspacing=\"0\" class=\"moduletable\">\n<tbody><tr>\n<td>\n\n \n\n </td>\n</tr>\n</tbody></table>\n</td> \n</tr>\n<tr> <td colspan=\"3\">&nbsp;</td>\n</tr>\n</tbody></table>\n<div style=\"text-align:center;\">\n\n</div>\n\n\n\n\n </body>"}
