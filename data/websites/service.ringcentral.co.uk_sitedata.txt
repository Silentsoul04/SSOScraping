{"link":"https://service.ringcentral.co.uk","html":"<head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"maximum-scale=1,width=device-width,initial-scale=1,user-scalable=no,minimum-scale=1\">\n    <meta name=\"SKYPE_TOOLBAR\" content=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\">\n\n    <!--\n            Webkit's fix for NO_MODIFICATION_ALLOWED_ERR: DOM Exception 7\n            @see http://www.karthikeyanc.com/blog/index.php/2010/06/chrome-error-no_modification_allowed_err-dom-exception-7/\n    -->\n\n    <title></title>\n    <script type=\"text/javascript\" src=\"/RCLibX/RCLibX.min.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n    <script type=\"text/javascript\">\n        var version = '9.00.5d2ef8d33d31244624a52844b3954d59836cefcc';\n    </script>\n    <script type=\"text/javascript\" src=\"/node_modules/requirejs/require.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n    <script type=\"text/javascript\" src=\"/requireConfig.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n\n    <script type=\"text/javascript\">\n        var centralPanelId = null;\n        var entryToken = null;\n\n        var locale = RC.utils.Lang.getLocaleFromCookie();\n        var brandId = Cookie.read('RCBRAND') || '1210';\n\n        var forcedBrandId = getQueryStringParameterByName('s');\n        if (forcedBrandId) {\n            Cookie.write('RCBRAND', forcedBrandId, {path: '/'});\n            brandId = forcedBrandId;\n            locale = undefined; // flush locale after forced brand change\n        }\n\n        var visitor = Cookie.read('VISITOR');\n        var days = 365;\n        var currentDomain = document.domain;\n        var domain = '.ringcentral.com';\n        if (currentDomain == 'service.ringcentral.co.uk') {\n            domain = '.ringcentral.co.uk';\n        }\n        if (visitor) {\n            Cookie.write('VISITOR', parseInt(visitor, 10) + 1, {duration: days, domain: domain});\n            Cookie.write('VISITOR', parseInt(visitor, 10) + 1)\n        } else {\n            Cookie.write('VISITOR', 1, {duration: days, domain: domain});\n            Cookie.write('VISITOR', 1)\n        }\n\n        load();\n\n        function load() {\n            var brandAndLocale = null;\n            var localeLogin = RC.utils.Lang.getLoginLocaleFromCookie(),\n                    forcedLocale = getQueryStringParameterByName('localeId') || localeLogin,\n                    $do = new RC.data.AsyncContext(),\n                    availableLanguages = [];\n\n            $do(getAvailableLocales);\n            $do.$if(!locale || forcedLocale)(setTargetLocale);\n            $do(loadBrandResources);\n            $do(ready);\n\n            function getAvailableLocales(cb) {\n                RC.utils.Lang.getAvailableLocales(brandId, function(languages) {\n                    availableLanguages = languages;\n                    cb();\n                });\n            }\n\n            function setTargetLocale(cb) {\n                var isLocaleAvailable = availableLanguages.some(function(language) {\n                    return language.localeCode == forcedLocale;\n                });\n\n                if(forcedLocale && isLocaleAvailable) {\n                    locale = forcedLocale;\n                    RC.utils.Lang.setLocaleInCookie(forcedLocale);\n                    Cookie.write('RCLANG_FROMUI', true);\n                } else if (!locale) {\n                    setDefaultBrandLocale();\n                }\n\n                cb();\n\n                function setDefaultBrandLocale() {\n                    var defaultLocale;\n                    availableLanguages.some(function(tempLang) {\n                        if (tempLang['default']) {\n                            defaultLocale = tempLang.localeCode;\n                            return true;\n                        }\n                    });\n\n                    defaultLocale = defaultLocale || (availableLanguages[0] && availableLanguages[0].localeCode) || 'en_US';\n\n                    locale = defaultLocale;\n                    RC.utils.Lang.setLocaleInCookie(defaultLocale);\n                }\n            }\n\n            function loadBrandResources(cb) {\n                brandAndLocale = brandId + '-' + locale;\n\n                RC.Configure({\n                    componentsDir: '/desktop/',\n                    langDir: '/desktop/common/',\n                    cssDir: '/RCLibX/css/',\n                    brandId: brandId,\n                    locale: locale,\n                    version: version\n                });\n\n                // Asset.favicon\n                (function (){\n                    var source = RC.getSkinnedSSImageUrl('img/logos/favicon.ico'),\n                            link = new Element('link', {\n                                rel: 'shortcut icon',\n                                type: 'image/vnd.microsoft.icon',\n                                href: source\n                            });\n                    link.inject(document.head);\n                })();\n\n                Asset.css('/desktop/elements-' + brandAndLocale + '.css?v=' + version);\n\n                cb();\n            }\n\n            function ready(cb) {\n                RC.onReady(function() {\n                    bootstrap(cb);\n                });\n            }\n\n            function bootstrap(cb) {\n                document.title = RC.Lang.Common.LOADING;\n                isLoginPage() && showSignUpHint();\n\n                var bootstrap = new RC.Bootstrap({\n                    enableSessionTimeout: false,\n                    setUIMode: false,\n                    loadWizards: false,\n                    loadPageComponents: true,\n                    loadPageComponentMenu: false,\n                    loadPageComponentFCC: false,\n                    loadPageComponentDND: false,\n                    loadPageComponentFaxOut: false,\n                    loadPageComponentRingOut: false,\n                    loadPageComponentAppearance: false,\n                    loadPageComponentFooter: true,\n                    loadPageComponentHelpLink: false,\n                    isLoginSkeleton: true,\n                    loadHelpers: false,\n                    loadTrackUtils: true\n                });\n                bootstrap.onCompleted(function () {\n                    var isNewLoginEnabled = !isSSOLoginFailurePage() && RC.Config.isNewLoginUI;\n                    var showLangSelector = availableLanguages.length > 1;\n                    if (isNewLoginEnabled) {\n                        $('login-wrapper').addClass('x-hidden');\n                    } else {\n                        Asset.css('/desktop/login/elements-' + brandAndLocale + '.css?v=' + version);\n\n                        document.getElementById('loginPageHeader').innerHTML = RC.Lang.Common.LOADING;\n                        if (showLangSelector) {\n                            showLanguageSelector();\n                        }\n\n                        RC.panel.Manager.onFirstDisplay(function() {\n                            $('login-container').removeClass('login-container-loading');\n                        });\n\n                        // for the position of popup\n                        $('login-wrapper').removeClass('x-visibility-hidden');\n                    }\n                    $('new-login-wrapper').toggleClass('x-hidden', !isNewLoginEnabled);\n\n                    // load banner image\n                    if (isNewLoginEnabled) {\n                        createBannerImageIframe(brandId, locale, true, '350px', '550px', 'wider-banner');\n                    } else {\n                        createBannerImageIframe(brandId, locale, false, '300px', '250px', 'banner');\n                    }\n\n                    cb && cb();\n                });\n\n                function isLoginPage() {\n                    return window.location.pathname == '/' ||\n                            window.location.pathname == '/login/' ||\n                            window.location.pathname.indexOf('enter.html') > 0 ||\n                            window.location.pathname.indexOf('error.html') > 0 ||\n                            window.location.pathname.indexOf('logout.html') > 0\n                }\n\n                // in some cases (ui_options=old_ui), we have to render legacy page even though isEmailAsLoginIdEnabled is true.\n                // TODO remove it in near future release\n                function isSSOLoginFailurePage() {\n                    return window.location.pathname == '/login/ssoLoginFailure.html';\n                }\n\n                function showSignUpHint() {\n                    var div = $('login-header');\n                    var link = RC.UI.Message('<a href=\"\" id=\"{0}\">{1}</a>', 'login-signup-link', RC.Lang.Common.SIGN_UP_HERE);\n                    new Element('div', {\n                        'html': '<span id = \"login-signup-text\">' + RC.Lang.Common.DONT_HAVE_AN_ACCOUNT + '</span>' + link,\n                        'id':'login-signup'\n                    }).inject(div);\n                }\n\n                function showLanguageSelector() {\n                    var langSelectorWrapper = new Element('div', {\n                                id: 'login-language-selector',\n                                'class': 'login-language-selector'\n                            }),\n                            parentNode = isLoginPage() ? $('login-signup') : $('login-header');\n                    parentNode.adopt(langSelectorWrapper);\n                }\n            }\n\n            function createBannerImageIframe(brandId, localeId, isWider, width, height, containerId) {\n                new Element('iframe', {\n                    styles: {\n                        border: 'none'\n                    },\n                    src: '/login/banner.html?brandId=' + brandId + '&localeId=' + localeId + '&isNewUI=' + isWider,\n                    frameborder: 0,\n                    scrolling: 'no',\n                    height: height,\n                    width: width\n                }).inject(document.getElementById(containerId));\n            }\n        }\n    </script>\n\n</head>\n<body data-test-automation-id=\"root\">\n\n<div id=\"login-wrapper\" class=\"x-visibility-hidden\">\n\n    <div class=\"login-container-loading\" id=\"login-container\">\n\n        <div id=\"login-header\">\n            <a href=\"/\"><span id=\"headerLogo\" class=\"logotype\"></span></a>\n        </div>\n\n        <h1 class=\"PageHeader\" id=\"loginPageHeader\"></h1>\n\n        <div id=\"PageContent\"></div>\n\n        <div id=\"legal\"></div>\n\n\n\n    </div>\n\n</div>\n\n<div class=\"bootstrap-rc\">\n    <div id=\"popup-container\"></div>\n</div>\n\n<div id=\"new-login-wrapper\" class=\"rc-frame-layout bootstrap-rc x-hidden\">\n</div>\n\n<!-- this guarantees that banner will not flash while CSS is loading -->\n<!-- banner has to be loaded in SYNC mode from the initial page due to document.write expression in it -->\n<div id=\"banner-wrap\" style=\"display: none\">\n    <div id=\"banner\">\n    </div>\n</div>\n\n<div id=\"wider-banner-wrap\" style=\"display: none\">\n    <div id=\"wider-banner\">\n    </div>\n</div>\n\n<form id=\"history-form\" class=\"x-hidden\">\n    <input type=\"hidden\" id=\"x-history-field\">\n    <iframe id=\"x-history-frame\"></iframe>\n</form>\n\n<!-- fake form for browser's native autocomplete -->\n<form action=\"/login/main.asp\" method=\"POST\" target=\"_top\" style=\"display: none\">\n    <div><input type=\"text\" name=\"LoginName\" id=\"fakeLoginName\"></div>\n    <div><input type=\"password\" name=\"Password\" id=\"fakePassword\"></div>\n    <div><input type=\"text\" name=\"PIN\" id=\"fakePIN\"></div>\n    <div><button type=\"submit\">Submit</button></div>\n</form>\n\n\n</body>"}
{"link":"https://service.ringcentral.co.uk/","html":"<head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"maximum-scale=1,width=device-width,initial-scale=1,user-scalable=no,minimum-scale=1\">\n    <meta name=\"SKYPE_TOOLBAR\" content=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\">\n\n    <!--\n            Webkit's fix for NO_MODIFICATION_ALLOWED_ERR: DOM Exception 7\n            @see http://www.karthikeyanc.com/blog/index.php/2010/06/chrome-error-no_modification_allowed_err-dom-exception-7/\n    -->\n\n    <title></title>\n    <script type=\"text/javascript\" src=\"/RCLibX/RCLibX.min.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n    <script type=\"text/javascript\">\n        var version = '9.00.5d2ef8d33d31244624a52844b3954d59836cefcc';\n    </script>\n    <script type=\"text/javascript\" src=\"/node_modules/requirejs/require.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n    <script type=\"text/javascript\" src=\"/requireConfig.js?v=9.00.5d2ef8d33d31244624a52844b3954d59836cefcc\"></script>\n\n    <script type=\"text/javascript\">\n        var centralPanelId = null;\n        var entryToken = null;\n\n        var locale = RC.utils.Lang.getLocaleFromCookie();\n        var brandId = Cookie.read('RCBRAND') || '1210';\n\n        var forcedBrandId = getQueryStringParameterByName('s');\n        if (forcedBrandId) {\n            Cookie.write('RCBRAND', forcedBrandId, {path: '/'});\n            brandId = forcedBrandId;\n            locale = undefined; // flush locale after forced brand change\n        }\n\n        var visitor = Cookie.read('VISITOR');\n        var days = 365;\n        var currentDomain = document.domain;\n        var domain = '.ringcentral.com';\n        if (currentDomain == 'service.ringcentral.co.uk') {\n            domain = '.ringcentral.co.uk';\n        }\n        if (visitor) {\n            Cookie.write('VISITOR', parseInt(visitor, 10) + 1, {duration: days, domain: domain});\n            Cookie.write('VISITOR', parseInt(visitor, 10) + 1)\n        } else {\n            Cookie.write('VISITOR', 1, {duration: days, domain: domain});\n            Cookie.write('VISITOR', 1)\n        }\n\n        load();\n\n        function load() {\n            var brandAndLocale = null;\n            var localeLogin = RC.utils.Lang.getLoginLocaleFromCookie(),\n                    forcedLocale = getQueryStringParameterByName('localeId') || localeLogin,\n                    $do = new RC.data.AsyncContext(),\n                    availableLanguages = [];\n\n            $do(getAvailableLocales);\n            $do.$if(!locale || forcedLocale)(setTargetLocale);\n            $do(loadBrandResources);\n            $do(ready);\n\n            function getAvailableLocales(cb) {\n                RC.utils.Lang.getAvailableLocales(brandId, function(languages) {\n                    availableLanguages = languages;\n                    cb();\n                });\n            }\n\n            function setTargetLocale(cb) {\n                var isLocaleAvailable = availableLanguages.some(function(language) {\n                    return language.localeCode == forcedLocale;\n                });\n\n                if(forcedLocale && isLocaleAvailable) {\n                    locale = forcedLocale;\n                    RC.utils.Lang.setLocaleInCookie(forcedLocale);\n                    Cookie.write('RCLANG_FROMUI', true);\n                } else if (!locale) {\n                    setDefaultBrandLocale();\n                }\n\n                cb();\n\n                function setDefaultBrandLocale() {\n                    var defaultLocale;\n                    availableLanguages.some(function(tempLang) {\n                        if (tempLang['default']) {\n                            defaultLocale = tempLang.localeCode;\n                            return true;\n                        }\n                    });\n\n                    defaultLocale = defaultLocale || (availableLanguages[0] && availableLanguages[0].localeCode) || 'en_US';\n\n                    locale = defaultLocale;\n                    RC.utils.Lang.setLocaleInCookie(defaultLocale);\n                }\n            }\n\n            function loadBrandResources(cb) {\n                brandAndLocale = brandId + '-' + locale;\n\n                RC.Configure({\n                    componentsDir: '/desktop/',\n                    langDir: '/desktop/common/',\n                    cssDir: '/RCLibX/css/',\n                    brandId: brandId,\n                    locale: locale,\n                    version: version\n                });\n\n                // Asset.favicon\n                (function (){\n                    var source = RC.getSkinnedSSImageUrl('img/logos/favicon.ico'),\n                            link = new Element('link', {\n                                rel: 'shortcut icon',\n                                type: 'image/vnd.microsoft.icon',\n                                href: source\n                            });\n                    link.inject(document.head);\n                })();\n\n                Asset.css('/desktop/elements-' + brandAndLocale + '.css?v=' + version);\n\n                cb();\n            }\n\n            function ready(cb) {\n                RC.onReady(function() {\n                    bootstrap(cb);\n                });\n            }\n\n            function bootstrap(cb) {\n                document.title = RC.Lang.Common.LOADING;\n                isLoginPage() && showSignUpHint();\n\n                var bootstrap = new RC.Bootstrap({\n                    enableSessionTimeout: false,\n                    setUIMode: false,\n                    loadWizards: false,\n                    loadPageComponents: true,\n                    loadPageComponentMenu: false,\n                    loadPageComponentFCC: false,\n                    loadPageComponentDND: false,\n                    loadPageComponentFaxOut: false,\n                    loadPageComponentRingOut: false,\n                    loadPageComponentAppearance: false,\n                    loadPageComponentFooter: true,\n                    loadPageComponentHelpLink: false,\n                    isLoginSkeleton: true,\n                    loadHelpers: false,\n                    loadTrackUtils: true\n                });\n                bootstrap.onCompleted(function () {\n                    var isNewLoginEnabled = !isSSOLoginFailurePage() && RC.Config.isNewLoginUI;\n                    var showLangSelector = availableLanguages.length > 1;\n                    if (isNewLoginEnabled) {\n                        $('login-wrapper').addClass('x-hidden');\n                    } else {\n                        Asset.css('/desktop/login/elements-' + brandAndLocale + '.css?v=' + version);\n\n                        document.getElementById('loginPageHeader').innerHTML = RC.Lang.Common.LOADING;\n                        if (showLangSelector) {\n                            showLanguageSelector();\n                        }\n\n                        RC.panel.Manager.onFirstDisplay(function() {\n                            $('login-container').removeClass('login-container-loading');\n                        });\n\n                        // for the position of popup\n                        $('login-wrapper').removeClass('x-visibility-hidden');\n                    }\n                    $('new-login-wrapper').toggleClass('x-hidden', !isNewLoginEnabled);\n\n                    // load banner image\n                    if (isNewLoginEnabled) {\n                        createBannerImageIframe(brandId, locale, true, '350px', '550px', 'wider-banner');\n                    } else {\n                        createBannerImageIframe(brandId, locale, false, '300px', '250px', 'banner');\n                    }\n\n                    cb && cb();\n                });\n\n                function isLoginPage() {\n                    return window.location.pathname == '/' ||\n                            window.location.pathname == '/login/' ||\n                            window.location.pathname.indexOf('enter.html') > 0 ||\n                            window.location.pathname.indexOf('error.html') > 0 ||\n                            window.location.pathname.indexOf('logout.html') > 0\n                }\n\n                // in some cases (ui_options=old_ui), we have to render legacy page even though isEmailAsLoginIdEnabled is true.\n                // TODO remove it in near future release\n                function isSSOLoginFailurePage() {\n                    return window.location.pathname == '/login/ssoLoginFailure.html';\n                }\n\n                function showSignUpHint() {\n                    var div = $('login-header');\n                    var link = RC.UI.Message('<a href=\"\" id=\"{0}\">{1}</a>', 'login-signup-link', RC.Lang.Common.SIGN_UP_HERE);\n                    new Element('div', {\n                        'html': '<span id = \"login-signup-text\">' + RC.Lang.Common.DONT_HAVE_AN_ACCOUNT + '</span>' + link,\n                        'id':'login-signup'\n                    }).inject(div);\n                }\n\n                function showLanguageSelector() {\n                    var langSelectorWrapper = new Element('div', {\n                                id: 'login-language-selector',\n                                'class': 'login-language-selector'\n                            }),\n                            parentNode = isLoginPage() ? $('login-signup') : $('login-header');\n                    parentNode.adopt(langSelectorWrapper);\n                }\n            }\n\n            function createBannerImageIframe(brandId, localeId, isWider, width, height, containerId) {\n                new Element('iframe', {\n                    styles: {\n                        border: 'none'\n                    },\n                    src: '/login/banner.html?brandId=' + brandId + '&localeId=' + localeId + '&isNewUI=' + isWider,\n                    frameborder: 0,\n                    scrolling: 'no',\n                    height: height,\n                    width: width\n                }).inject(document.getElementById(containerId));\n            }\n        }\n    </script>\n\n</head>\n<body data-test-automation-id=\"root\">\n\n<div id=\"login-wrapper\" class=\"x-visibility-hidden\">\n\n    <div class=\"login-container-loading\" id=\"login-container\">\n\n        <div id=\"login-header\">\n            <a href=\"/\"><span id=\"headerLogo\" class=\"logotype\"></span></a>\n        </div>\n\n        <h1 class=\"PageHeader\" id=\"loginPageHeader\"></h1>\n\n        <div id=\"PageContent\"></div>\n\n        <div id=\"legal\"></div>\n\n\n\n    </div>\n\n</div>\n\n<div class=\"bootstrap-rc\">\n    <div id=\"popup-container\"></div>\n</div>\n\n<div id=\"new-login-wrapper\" class=\"rc-frame-layout bootstrap-rc x-hidden\">\n</div>\n\n<!-- this guarantees that banner will not flash while CSS is loading -->\n<!-- banner has to be loaded in SYNC mode from the initial page due to document.write expression in it -->\n<div id=\"banner-wrap\" style=\"display: none\">\n    <div id=\"banner\">\n    </div>\n</div>\n\n<div id=\"wider-banner-wrap\" style=\"display: none\">\n    <div id=\"wider-banner\">\n    </div>\n</div>\n\n<form id=\"history-form\" class=\"x-hidden\">\n    <input type=\"hidden\" id=\"x-history-field\">\n    <iframe id=\"x-history-frame\"></iframe>\n</form>\n\n<!-- fake form for browser's native autocomplete -->\n<form action=\"/login/main.asp\" method=\"POST\" target=\"_top\" style=\"display: none\">\n    <div><input type=\"text\" name=\"LoginName\" id=\"fakeLoginName\"></div>\n    <div><input type=\"password\" name=\"Password\" id=\"fakePassword\"></div>\n    <div><input type=\"text\" name=\"PIN\" id=\"fakePIN\"></div>\n    <div><button type=\"submit\">Submit</button></div>\n</form>\n\n\n</body>"}
