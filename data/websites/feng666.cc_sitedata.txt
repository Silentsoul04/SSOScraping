{"link":"feng666.cc","html":"<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <title>风飞翔-御风飞翔</title>\n    <link href=\"https://www.feng666.cc/hovertreewelcome.css\" type=\"text/css\" rel=\"stylesheet\">\n</head>\n<body ondragstart=\"window.event.returnValue=false\" oncontextmenu=\"window.event.returnValue=false\" onselectstart=\"event.returnValue=false\">\n\n    <div id=\"hovertreecontainer\">\n\n        <div>\n            <h1 id=\"h1\"><span class=\"letter-0\">风</span><span class=\"letter-1\">飞</span><span class=\"letter-2\">翔</span>&nbsp;</h1>\n            <h2 id=\"h2\">&nbsp;<span class=\"letter-1\">想</span><span class=\"letter-2\">飞</span><span class=\"letter-3\">翔</span><span class=\"letter-4\">?</span><span class=\"letter-5\">不</span><span class=\"letter-6\">知</span><span class=\"letter-7\">从</span><span class=\"letter-8\">何</span><span class=\"letter-9\">飞</span><span class=\"letter-10\">翔</span><span class=\"letter-11\">?</span><span class=\"letter-12\">那</span><span class=\"letter-13\">就</span><span class=\"letter-14\">来</span><span class=\"letter-15\">风</span><span class=\"letter-16\">飞</span><span class=\"letter-17\">翔</span><span class=\"letter-18\">吧</span><span class=\"letter-19\">！</span></h2>\n            <h3 id=\"h2\">wind Provide a stable and free service </h3>\n\t\t\t<h4 id=\"h2\">I hope we can fly ,Provide ninety-nine percent online, stable service</h4>\n            <p>&nbsp;</p>\n            <p><strong><a href=\"https://www.feng666.cc/user\">进入控制面板</a></strong></p>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n            <p>&nbsp;</p>\n        </div>\n\n    </div>\n\n    <canvas id=\"canvas\" width=\"800\" height=\"575\"></canvas>\n    <audio autoplay=\"autoplay\">\n        <source src=\"https://www.feng666.cc\" type=\"audio/ogg\">\n        <source src=\"https://www.feng666.cc/pianai.mp3\" type=\"audio/mpeg\">\n        您的浏览器不支持播放音乐。请用支持html5的浏览器打开,例如chrome或火狐或者新版IE等。\n        <br>风飞翔 www.feng666.cc\n    </audio><script type=\"text/javascript\" src=\"https://www.feng666.cc/hovertreewelcome.js\">\n    </script>\n    <script type=\"text/javascript\">\n\n        ; (function (window) {\n\n            var ctx,\n                hue,\n                logo,\n                form,\n                buffer,\n                target = {},\n                tendrils = [],\n                settings = {};\n\n            settings.debug = true;\n            settings.friction = 0.5;\n            settings.trails = 20;\n            settings.size = 50;\n            settings.dampening = 0.25;\n            settings.tension = 0.98;\n\n            Math.TWO_PI = Math.PI * 2;\n\n       \n            function Oscillator(options) {\n                this.init(options || {});\n            }\n\n            Oscillator.prototype = (function () {\n\n                var value = 0;\n\n                return {\n\n                    init: function (options) {\n                        this.phase = options.phase || 0;\n                        this.offset = options.offset || 0;\n                        this.frequency = options.frequency || 0.001;\n                        this.amplitude = options.amplitude || 1;\n                    },\n\n                    update: function () {\n                        this.phase += this.frequency;\n                        value = this.offset + Math.sin(this.phase) * this.amplitude;\n                        return value;\n                    },\n\n                    value: function () {\n                        return value;\n                    }\n                };\n\n            })();\n\n\n            function Tendril(options) {\n                this.init(options || {});\n            }\n\n            Tendril.prototype = (function () {\n\n                function Node() {\n                    this.x = 0;\n                    this.y = 0;\n                    this.vy = 0;\n                    this.vx = 0;\n                }\n\n                return {\n\n                    init: function (options) {\n\n                        this.spring = options.spring + (Math.random() * 0.1) - 0.05;\n                        this.friction = settings.friction + (Math.random() * 0.01) - 0.005;\n                        this.nodes = [];\n\n                        for (var i = 0, node; i < settings.size; i++) {\n\n                            node = new Node();\n                            node.x = target.x;\n                            node.y = target.y;\n\n                            this.nodes.push(node);\n                        }\n                    },\n\n                    update: function () {\n\n                        var spring = this.spring,\n                            node = this.nodes[0];\n\n                        node.vx += (target.x - node.x) * spring;\n                        node.vy += (target.y - node.y) * spring;\n\n                        for (var prev, i = 0, n = this.nodes.length; i < n; i++) {\n\n                            node = this.nodes[i];\n\n                            if (i > 0) {\n\n                                prev = this.nodes[i - 1];\n\n                                node.vx += (prev.x - node.x) * spring;\n                                node.vy += (prev.y - node.y) * spring;\n                                node.vx += prev.vx * settings.dampening;\n                                node.vy += prev.vy * settings.dampening;\n                            }\n\n                            node.vx *= this.friction;\n                            node.vy *= this.friction;\n                            node.x += node.vx;\n                            node.y += node.vy;\n\n                            spring *= settings.tension;\n                        }\n                    },\n\n                    draw: function () {\n\n                        var x = this.nodes[0].x,\n                            y = this.nodes[0].y,\n                            a, b;\n\n                        ctx.beginPath();\n                        ctx.moveTo(x, y);\n\n                        for (var i = 1, n = this.nodes.length - 2; i < n; i++) {\n\n                            a = this.nodes[i];\n                            b = this.nodes[i + 1];\n                            x = (a.x + b.x) * 0.5;\n                            y = (a.y + b.y) * 0.5;\n\n                            ctx.quadraticCurveTo(a.x, a.y, x, y);\n                        }\n\n                        a = this.nodes[i];\n                        b = this.nodes[i + 1];\n\n                        ctx.quadraticCurveTo(a.x, a.y, b.x, b.y);\n                        ctx.stroke();\n                        ctx.closePath();\n                    }\n                };\n\n            })();\n\n            // ----------------------------------------------------------------------------------------\n\n            function init(event) {\n\n                document.removeEventListener('mousemove', init);\n                document.removeEventListener('touchstart', init);\n\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('touchmove', mousemove);\n                document.addEventListener('touchstart', touchstart);\n\n                mousemove(event);\n                reset();\n                loop();\n            }\n\n            function reset() {\n\n                tendrils = [];\n\n                for (var i = 0; i < settings.trails; i++) {\n\n                    tendrils.push(new Tendril({\n                        spring: 0.45 + 0.025 * (i / settings.trails)\n                    }));\n                }\n            }\n\n            function loop() {\n\n                if (!ctx.running) return;\n\n                ctx.globalCompositeOperation = 'source-over';\n                ctx.fillStyle = 'rgba(8,5,16,0.4)';\n                ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n                ctx.globalCompositeOperation = 'lighter';\n                ctx.strokeStyle = 'hsla(' + Math.round(hue.update()) + ',90%,50%,0.25)';\n                ctx.lineWidth = 1;\n\n                if (ctx.frame % 60 == 0) {\n                    console.log(hue.update(), Math.round(hue.update()), hue.phase, hue.offset, hue.frequency, hue.amplitude);\n                }\n\n                for (var i = 0, tendril; i < settings.trails; i++) {\n                    tendril = tendrils[i];\n                    tendril.update();\n                    tendril.draw();\n                }\n\n                ctx.frame++;\n                ctx.stats.update();\n                requestAnimFrame(loop);\n            }\n\n            function resize() {\n                ctx.canvas.width = window.innerWidth;\n                ctx.canvas.height = window.innerHeight;\n            }\n\n            function start() {\n                if (!ctx.running) {\n                    ctx.running = true;\n                    loop();\n                }\n            }\n\n            function stop() {\n                ctx.running = false;\n            }\n\n            function mousemove(event) {\n                if (event.touches) {\n                    target.x = event.touches[0].pageX;\n                    target.y = event.touches[0].pageY;\n                } else {\n                    target.x = event.clientX\n                    target.y = event.clientY;\n                }\n                event.preventDefault();\n            }\n\n            function touchstart(event) {\n                if (event.touches.length == 1) {\n                    target.x = event.touches[0].pageX;\n                    target.y = event.touches[0].pageY;\n                }\n            }\n\n            function keyup(event) {\n\n                switch (event.keyCode) {\n                    case 32:\n                        save();\n                        break;\n                    default:\n                        // console.log(event.keyCode); hovertree.com\n                }\n            }\n\n            function letters(id) {\n\n                var el = document.getElementById(id),\n                    letters = el.innerHTML.replace('&amp;', '&').split(''),\n                    heading = '';\n\n                for (var i = 0, n = letters.length, letter; i < n; i++) {\n                    letter = letters[i].replace('&', '&amp');\n                    heading += letter.trim() ? '<span class=\"letter-' + i + '\">' + letter + '</span>' : '&nbsp;';\n                }\n\n                el.innerHTML = heading;\n                setTimeout(function () {\n                    el.className = 'transition-in';\n                }, (Math.random() * 500) + 500);\n            }\n\n            function save() {\n\n                if (!buffer) {\n\n                    buffer = document.createElement('canvas');\n                    buffer.width = screen.availWidth;\n                    buffer.height = screen.availHeight;\n                    buffer.ctx = buffer.getContext('2d');\n\n                    form = document.createElement('form');\n                    form.method = 'post';\n                    form.input = document.createElement('input');\n                    form.input.type = 'hidden';\n                    form.input.name = 'data';\n                    form.appendChild(form.input);\n\n                    document.body.appendChild(form);\n                }\n\n                buffer.ctx.fillStyle = 'rgba(8,5,16)';\n                buffer.ctx.fillRect(0, 0, buffer.width, buffer.height);\n\n                buffer.ctx.drawImage(canvas,\n                    Math.round(buffer.width / 2 - canvas.width / 2),\n                    Math.round(buffer.height / 2 - canvas.height / 2)\n                );\n\n                buffer.ctx.drawImage(logo,\n                    Math.round(buffer.width / 2 - logo.width / 4),\n                    Math.round(buffer.height / 2 - logo.height / 4),\n                    logo.width / 2,\n                    logo.height / 2\n                );\n\n                window.open(buffer.toDataURL(), 'wallpaper', 'top=0,left=0,width=' + buffer.width + ',height=' + buffer.height);\n\n              \n            }\n\n            window.requestAnimFrame = (function () {\n                return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) { window.setTimeout(fn, 1000 / 60) };\n            })();\n\n            window.onload = function () {\n\n                ctx = document.getElementById('canvas').getContext('2d');\n                ctx.stats = new Stats();\n                ctx.running = true;\n                ctx.frame = 1;\n\n                hue = new Oscillator({\n                    phase: Math.random() * Math.TWO_PI,\n                    amplitude: 85,\n                    frequency: 0.0015,\n                    offset: 285\n                });\n\n                letters('h1');\n                letters('h2');\n\n                document.addEventListener('mousemove', init);\n                document.addEventListener('touchstart', init);\n                document.body.addEventListener('orientationchange', resize);\n                window.addEventListener('resize', resize);\n                window.addEventListener('keyup', keyup);\n                window.addEventListener('focus', start);\n                window.addEventListener('blur', stop);\n\n                resize();\n\n                if (window.DEBUG) {\n\n                    var gui = new dat.GUI();\n\n                    // gui.add(settings, 'debug');\n                    settings.gui.add(settings, 'trails', 1, 30).onChange(reset);\n                    settings.gui.add(settings, 'size', 25, 75).onFinishChange(reset);\n                    settings.gui.add(settings, 'friction', 0.45, 0.55).onFinishChange(reset);\n                    settings.gui.add(settings, 'dampening', 0.01, 0.4).onFinishChange(reset);\n                    settings.gui.add(settings, 'tension', 0.95, 0.999).onFinishChange(reset);\n\n                    document.body.appendChild(ctx.stats.domElement);\n                }\n            };\n\n        })(window);\n\n    </script>\n\n</body>"}
