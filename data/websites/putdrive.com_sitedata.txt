{"link":"putdrive.com","html":"<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"google-site-verification\" content=\"E-qlbdG1zEaqAoX6qycfmgR5mXT8WFAIFbORmqeTWLU\">\n    <meta name=\"pressabout-site-verification\" content=\"bed3713a33cec94ed5d7b756b8ba00f7\">\n    <title>Welcome to Putdrive.com</title>\n    <!--<meta http-equiv=\"refresh\" content=\"2;url=http://putdrive.com/default.aspx\"/>-->\n    <style type=\"text/css\" media=\"screen\">\n        body { background: #161616 url(icons/loader/pattern_40.gif) top left repeat; margin: 0; padding: 0; font: 12px normal Verdana, Arial, Helvetica, sans-serif; height: 100%; }\n        .jCProgress { position: absolute; z-index: 9999999; /*  margin-top:-15px; /* offset from the center */ }\n        .jCProgress > div.percent { font: 18px/27px 'BebasRegular' , Arial, sans-serif; color: #ebebeb; text-shadow: 1px 1px 1px #1f1f1f; position: absolute; margin-top: 40px; margin-left: 22px; text-align: center; width: 60px; }\n    </style>\n    <script type=\"text/javascript\" async=\"\" src=\"https://ssl.google-analytics.com/ga.js\"></script><script src=\"Scripts/jq/jquery-1.8.3.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\">\n        /*\n        * \tCProgress v1.0.3 - jQuery plugin\n        *\twritten by Artur Tomaszewski\n        *\thttp://p.ar2oor.pl/cprogress/\n        *\n        *\tCopyright (c) 2011 Artur Tomaszewski (http://ar2oor.pl)\n        *\tDistributed under the MIT License\n        *\n        *\tBuilt for jQuery library\n        *\thttp://jquery.com\n        *\n        */\n\n        if (typeof (console) === 'undefined') {\n            console = new function () {\n                this.log = function () { };\n            };\n        }\n        (function ($) {\n            if (!$.ns) {\n                $.ns = {};\n            };\n\n            $.ns.cprogress = function (el, options) {\n                var base = this;\n                // Access to jQuery and DOM \n                base.$el = $(el);\n                base.el = el;\n                base.$el.data(\"ns.cprogress\", base);\n\n                base.options = $.extend({}, $.ns.cprogress.defaultOptions, options);\n\n\n                base.methods = {\n                    init: function () {\n\n\n                        //Images\n                        base.img1 = new Image();\n                        base.img1.src = base.options.img1;\n                        base.img2 = new Image();\n                        base.img2.src = base.options.img2;\n\n                        base.width = base.img1.width;\n                        base.height = base.img1.height;\n\n                        //main cprogress div\n                        base.$progress = $('<div />').addClass('jCProgress');\n                        mt = parseInt(base.$progress.css('marginTop').replace(\"ems\", \"\"));\n                        ml = parseInt(base.$progress.css('marginLeft').replace(\"ems\", \"\"));\n                        base.$progress.css('marginLeft', (base.$el.width() - base.width) / 2 + ml).css('marginTop', (base.$el.height() - base.height) / 2 + mt).css('opacity', '0.0');\n\n                        //percent div\n                        base.$percent = $('<div />').addClass('percent');\n                        //hide?\n\n                        //canvas area\n                        base.$ctx = $('<canvas />');\n                        base.$ctx.attr('width', base.width);\n                        base.$ctx.attr('height', base.height);\n\n                        //append to target\n                        base.$el.prepend(base.$progress);\n                        base.$progress.append(base.$percent);\n                        base.$progress.append(base.$ctx);\n\n                        //effect\n                        base.$progress.animate({\n                            opacity: 1.0\n                        }, 500, function () {\n                        });\n\n                        //Canvas\n                        base.ctx = base.$ctx[0].getContext('2d');\n                        //Pie color/alpha\n                        base.ctx.fillStyle = \"rgba(0,0,0,0.0)\";\n\n                        //others\n                        base.options.percent = base.options.percent % 100;\n                        base.i = (base.options.percent * (Math.PI * 2)) / 100;\n                        base.j = 0;\n                        base.stop = 0;\n\n                        //call draw method\n                        base.options.onInit();\n                        base.methods.draw();\n\n                    },\n                    reloadImages: function () {\n\n                        //Images\n                        base.img1 = new Image();\n                        base.img1.src = base.options.img1;\n                        base.img2 = new Image();\n                        base.img2.src = base.options.img2;\n\n                        base.width = base.img1.width;\n                        base.height = base.img1.height;\n\n                        base.$progress.css('marginLeft', (base.$el.width() - base.width) / 2 + ml).css('marginTop', (base.$el.height() - base.height) / 2 + mt);\n\n                        base.$ctx.attr('width', base.width);\n                        base.$ctx.attr('height', base.height);\n\n                        base.ctx = base.$ctx[0].getContext('2d');\n                        base.ctx.fillStyle = \"rgba(0,0,0,0.0)\";\n\n\n                    },\n                    coreDraw: function () {\n\n\n                        base.ctx.clearRect(0, 0, base.width, base.height);\n                        base.ctx.save();\n                        base.ctx.drawImage(base.img1, 0, 0);\n                        base.ctx.beginPath();\n                        base.ctx.lineWidth = 5;\n                        base.ctx.arc(base.width / 2, base.height / 2, base.height / 2, base.i - Math.PI / 2, base.j - Math.PI / 2, true);\n                        base.ctx.lineTo(base.width / 2, base.height / 2);\n                        base.ctx.closePath();\n                        base.ctx.fill();\n                        base.ctx.clip();\n                        base.ctx.drawImage(base.img2, 0, 0);\n                        base.ctx.restore();\n\n                    }\n\t\t,\n                    draw: function () {\n                        if (base) {\n\n                            if (base.width == 0 || base.height == 0) {\n                                base.methods.reloadImages();\n                            }\n\n                            if (base.options.showPercent == false) {\n                                base.$percent.hide();\n                            }\n                            else {\n                                base.$percent.show();\n                            }\n\n                            if (base.stop != 1 && (base.options.percent - 1) <= base.options.limit) {\n\n\n\n                                if (base.options.loop == true) {\n                                    base.options.limit = 121;\n                                }\n                                if (base.options.percent >= 100 && base.options.percent <= base.options.limit) {\n                                    base.i = 0;\n                                    base.options.limit = base.options.limit - 100;\n                                }\n\n                                base.methods.coreDraw();\n\n                                base.i = base.i + base.options.PIStep;\n                                base.options.percent = base.i * 100 / (Math.PI * 2);\n\n                                if (base.options.percent <= base.options.limit) {\n                                    setTimeout(base.methods.draw, base.options.speed);\n                                    base.$percent.html(base.options.percent.toFixed(0));\n\n                                    base.options.onProgress(base.options.percent.toFixed(0));\n                                } else {\n                                    base.$percent.html(base.options.limit);\n                                    base.methods.coreDraw();\n                                    base.options.onProgress(base.options.limit);\n                                    base.options.onComplete(base.options.limit);\n                                }\n\n                                base.options.percent++;\n                            }\n                        }\n\n                    },\n                    destroy: function () {\n                        base.$progress.animate({\n                            opacity: 0.0\n                        }, 500, function () {\n                            base.$progress.remove();\n                            base.stop = 1;\n                            base = null;\n                        });\n                    }\n                };\n\n                base.public_methods = {\n                    start: function () {\n                        base.stop = 0;\n                        base.methods.draw();\n\n                    },\n                    stop: function () {\n                        base.stop = 1;\n                    },\n                    reset: function () {\n                        base.options.percent = 0;\n                        base.i = 0;\n                        base.methods.draw();\n                    },\n                    destroy: function () {\n                        base.methods.destroy();\n                    },\n                    options: function (options) {\n                        base.options = $.extend({}, base.options, options);\n                        if (options.img1 || options.img2 || options.img3) {\n                            base.methods.reloadImages();\n                            base.methods.coreDraw();\n                        }\n                        base.methods.draw();\n                        return base.options;\n                    }\n                };\n\n                base.methods.init();\n\n\n            };\n\n            $.ns.cprogress.defaultOptions = {\n                percent: 0,\n                //Variables\n                img1: 'v1.png',\n                img2: 'v2.png',\n                speed: 50,\n                limit: 48,\n                loop: false,\n                showPercent: true,\n                PIStep: 0.05,\n                //Funs\n                onInit: function () { },\n                onProgress: function (percent) { },\n                onComplete: function () { }\n            };\n\n            $.fn.cprogress = function (options) {\n                var cprogress = (new $.ns.cprogress(this, options));\n                return cprogress.public_methods;\n            };\n\n        })(jQuery);\n\n\n        //var myplugin;\n        //if (!myplugin) {\n        //    myplugin = $('#p1').cprogress({\n        //        percent: 10, // starting position\n        //        img1: 'icons/loader/v1.png', // background\n        //        img2: 'icons/loader/v2.png', // foreground\n        //        speed: 200, // speed (timeout)\n        //        PIStep: 0.05, // every step foreground area is bigger about this val\n        //        limit: 20, // end value\n        //        loop: false, //if true, no matter if limit is set, progressbar will be running\n        //        showPercent: true, //show hide percent\n        //        onInit: function () { console.log('onInit'); },\n        //        onProgress: function (p) { console.log('onProgress', p); }, //p=current percent\n        //        onComplete: function (p) { console.log('onComplete', p); }\n        //    });\n        //}\n        //\t\n    </script>\n    <script type=\"text/javascript\">\n        $(document).ready(function () {\n\n            options = {\n                img1: 'icons/loader/v1.png',\n                img2: 'icons/loader/v3.png',\n                speed: 50,\n                percent: 10,\n                limit: 100,\n                showPercent: false,\n                onInit: function () { console.log('init'); },\n                onProgress: function (p) { /*console.log('progress',p);*/ },\n                onComplete: function (p) { console.log('complete', p); myplugin.reset(); }\n            };\n\n            myplugin = $('#p1').cprogress(options);\n           \n        });\n    </script>\n    <link rel=\"canonical\" href=\"http://www.putdrive.com/index.htm\">\n</head>\n<body>\n    <div style=\"width:450px;margin: auto; position: relative; margin-top: 122px;\">\n        <div align=\"center\">\n            <img src=\"icons/loader/logo.png\">\n        </div>\n        <div style=\"width: 104px; height: 135px; margin: auto; position: relative; margin-top: 100px;\">\n            <div id=\"p1\"><div class=\"jCProgress\" style=\"opacity: 0.695687;\"><div class=\"percent\" style=\"display: none;\">16</div><canvas width=\"105\" height=\"105\"></canvas></div>\n            </div>\n            <div style=\"clear:both;\"></div>\n        </div>\n        <div align=\"center\">\n            <img src=\"icons/loader/loading.gif\">\n        </div>\n    </div>\n\n<script type=\"text/javascript\">\n    var page = 'default.aspx';\n    var hashstring =\"\"// \"h=iaAAAsdSSSSf22owwWW33WWi32unas55dfiu22ani\"\n\n    setTimeout(function () {\n        try {\n            var ref = \"\"\n            try {\n                ref = document.referrer;\n                if (!stringIsEmpty(ref)) {\n                    ref = encodeURIComponent(ref);\n                    page = page + ((page.indexOf('?') > -1) ? '&' : '?') + 'ref=' + ref;\n                }\n            }\n            catch (e) { }\n            var href =window.location.href;\n            if (href.indexOf('?') > -1) {\n                var query = href.substring(href.indexOf('?')+1);\n                if (!stringIsEmpty(query))\n                    page = page + ((page.indexOf('?') > -1) ? '&' : '?') + query;\n            }\n\n            /*try\n            {\n                page = page + ((page.indexOf('?') > -1) ? '&' : '?') + hashstring;\n            }\n            catch (e) { }*/\n\n            window.location.href = page;\n        }\n        catch (e) {\n            try {\n                page = page + ((page.indexOf('?') > -1) ? '&' : '?') + hashstring;\n            }\n            catch (e) { }\n            window.location.href = page;\n        }\n    }, 1000);\n\n    function gup(name) {\n        return gupWithUrl(window.location.href, name)\n    }\n\n    function gupWithUrl(url, name) {\n        name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n        var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n        var regex = new RegExp(regexS, 'i');\n        var results = regex.exec(url);\n        if (results == null)\n            return \"\";\n        else\n            return results[1];\n    }\n\n    function stringIsEmpty(s) {\n        var b = (s == null || typeof s === 'undefined' || s == ''); return b;\n    }\n\n</script>\n<script type=\"text/javascript\">\n\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-38939583-1']);\n    _gaq.push(['_trackPageview']);\n\n    (function () {\n        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n\n</script>\n\n</body>"}
