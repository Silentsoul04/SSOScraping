{"link":"https://disqus.com/profile/signup/","html":"<head>\n    <link rel=\"shortcut icon\" href=\"//a.disquscdn.com/1492794604/img/favicon16-32.ico\" type=\"image/vnd.microsoft.icon\">\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n    <meta http-equiv=\"Content-Language\" content=\"en-us\">\n    <meta name=\"keywords\" content=\"Disqus, disqus.com, comments, blog, blogs, discussion\">\n    <meta name=\"google\" value=\"notranslate\">\n    <title>\n    Sign-up to comment on Disqus\n    </title>\n\n    <meta name=\"description\" content=\"Create an account and join the millions of commenters on Disqus.\">\n\n    \n        <script type=\"text/javascript\" async=\"\" src=\"https://ssl.google-analytics.com/ga.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://cdn.mxpnl.com/libs/mixpanel-2.2.min.js\"></script><script type=\"text/javascript\" charset=\"utf-8\">\n    document.domain = 'disqus.com';\n    if (window.context === undefined) {\n        var context = {};\n    }\n    context.disqusUrl = 'https://disqus.com';\n    context.revealUrl = 'http://hubspot.disqus.biz/reveal-by-disqus-organic';\n    context.disqusDomain = 'disqus.com';\n    context.mediaUrl = '//a.disquscdn.com/1492794604/';\n    context.uploadsUrl = '//a.disquscdn.com/uploads';\n    context.sslUploadsUrl = '//a.disquscdn.com/uploads';\n    context.loginUrl = 'https://disqus.com/profile/login/';\n    context.signupUrl = 'https://disqus.com/profile/signup/';\n    context.apiUrl = '//disqus.com/api/3.0/';\n    context.apiPublicKey = 'Y1S1wGIzdc63qnZ5rhHfjqEABGA4ZTDncauWFFWWTUBqkmLjdxloTb7ilhGnZ7z1';\n    \n    context.forum = null;\n    context.adminUrl = 'https://disqus.com';\n    \n    context.urlMap = {\n        'signup': 'http://disqus.com/admin/signup/',\n        'dashboard': 'http://disqus.com/dashboard/',\n        'admin': 'https://disqus.com/admin/',\n        \n        'logout': '//disqus.com/logout/',\n        'home': 'https://disqus.com',\n        'home_settings_profile': 'https://disqus.com/home/settings/profile/',\n        'for_websites': 'http://disqus.com/websites/',\n        'for_publishers': 'http://hubspot.disqus.biz/reveal-by-disqus-organic',\n        'login': 'https://disqus.com/profile/login/'\n    };\n    context.navMap = {\n        'signup': '',\n        'dashboard': '',\n        'admin': '',\n        'addons': ''\n    };\n</script>\n\n        <script src=\"//a.disquscdn.com/1492794604/js/src/auth_context.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    \n\n    <link rel=\"stylesheet\" href=\"//a.disquscdn.com/1492794604/build/css/eec6bad9a806.css\" type=\"text/css\">\n\n    \n    \n\n    \n    \n\n    \n        \n\n\n<script type=\"text/javascript\" src=\"//a.disquscdn.com/1492794604/build/js/94d17c859614.js\"></script>\n\n<script>\n//\n// shared/foundation.js\n//\n// This file contains the absolute minimum code necessary in order\n// to create a new application in the DISQUS namespace.\n//\n// You should load this file *before* anything that modifies the DISQUS global.\n//\n\n/*jshint browser:true, undef:true, strict:true, expr:true, white:true */\n/*global DISQUS:true */\n\nvar DISQUS = (function (window, undefined) {\n    \"use strict\";\n\n    var DISQUS = window.DISQUS || {};\n\n    // Exception thrown from DISQUS.assert method on failure\n    DISQUS.AssertionError = function (message) {\n        this.message = message;\n    };\n\n    DISQUS.AssertionError.prototype.toString = function () {\n        return 'Assertion Error: ' + (this.message || '[no message]');\n    };\n\n\n    // Raises a DISQUS.AssertionError if value is falsy\n    DISQUS.assert = function (value, message, soft) {\n        if (value)\n            return;\n\n        if (soft)\n            window.console && window.console.log(\"DISQUS assertion failed: \" + message);\n        else\n            throw new DISQUS.AssertionError(message);\n    };\n\n\n    // Functions to clean attached modules (used by define and cleanup)\n    var cleanFuncs = [];\n\n    // Attaches a new public interface (module) to the DISQUS namespace.\n    // For example, if DISQUS object is { 'a': { 'b': {} } }:\n    //\n    //   DISQUS.define('a.b.c', function () { return { 'd': 'hello' }; }); will transform it into\n    //     -> { 'a': { 'b': { 'c': { 'd' : hello' }}}}\n    //\n    //   and DISQUS.define('a', function () { return { 'x': 'world' }; }); will transform it into\n    //     -> { 'a': { 'b': {}}, 'x': 'world' }\n    //\n    // Attach modules to DISQUS using only this function.\n\n    DISQUS.define = function (name, fn) {\n        /*jshint loopfunc:true */\n        if (typeof name === 'function') {\n            fn = name;\n            name = '';\n        }\n\n        var parts = name.split('.');\n        var part  = parts.shift();\n        var cur   = DISQUS;\n\n        var exports = (fn || function () { return {}; }).call({\n            overwrites: function (obj) {\n                obj.__overwrites__ = true;\n                return obj;\n            }\n        }, window);\n\n        while (part) {\n            cur = (cur[part] ? cur[part] : cur[part] = {});\n            part = parts.shift();\n        }\n\n        for (var key in exports) {\n            if (!exports.hasOwnProperty(key))\n                continue;\n\n            /*jshint eqnull:true */\n            if (!exports.__overwrites__ && cur[key] !== null) {\n                DISQUS.assert(!cur.hasOwnProperty(key),\n                              'Unsafe attempt to redefine existing module: ' + key,\n                              true /* soft assertion */);\n            }\n\n            cur[key] = exports[key];\n            cleanFuncs.push(function (cur, key) {\n                return function () { delete cur[key]; };\n            }(cur, key));\n        }\n        return cur;\n    };\n\n\n    // Alias for DISQUS.define for the sake of semantics.\n    // You should use it when you need to get a reference to another\n    // DISQUS module before that module is defined:\n    //\n    //   var collections = DISQUS.use('lounge.collections');\n    //\n    // DISQUS.use is a single argument function because we don't\n    // want to encourage people to use it instead of DISQUS.define.\n\n    DISQUS.use = function (name) {\n        return DISQUS.define(name);\n    };\n\n    DISQUS.cleanup = function () {\n        for (var i = 0; i < cleanFuncs.length; i++) {\n            cleanFuncs[i]();\n        }\n    };\n\n    return DISQUS;\n})(window);\n\n/*jshint expr:true, undef:true, strict:true, white:true, browser:true */\n/*global DISQUS:false*/\n//\n// shared/corefuncs.js\n//\n\nDISQUS.define(function (window, undefined) {\n    \"use strict\";\n\n    var DISQUS     = window.DISQUS;\n    var document   = window.document;\n    var head       = document.getElementsByTagName('head')[0] ||\n                     document.body;\n    var jobs       = { running: false, timer: null, queue: [] };\n    var uid        = 0;\n\n    // Taken from _.uniqueId\n    DISQUS.getUid = function (prefix) {\n        var id = ++uid + '';\n        return prefix ? prefix + id : id;\n    };\n\n    /* Defers func() execution until cond() is true */\n    DISQUS.defer = function (cond, func) {\n        function beat() {\n            /*jshint boss:true */\n            var queue = jobs.queue;\n\n            if (queue.length === 0) {\n                jobs.running = false;\n                clearInterval(jobs.timer);\n            }\n\n            for (var i = 0, pair; pair = queue[i]; i++) {\n                if (pair[0]()) {\n                    queue.splice(i--, 1);\n                    pair[1]();\n                }\n            }\n        }\n\n        jobs.queue.push([cond, func]);\n        beat();\n\n        if (!jobs.running) {\n            jobs.running = true;\n            jobs.timer = setInterval(beat, 100);\n        }\n    };\n\n    DISQUS.isOwn = function (obj, key) {\n        // The object.hasOwnProperty method fails when the\n        // property under consideration is named 'hasOwnProperty'.\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    };\n\n    DISQUS.isString = function (str) {\n        return Object.prototype.toString.call(str) === \"[object String]\";\n    };\n\n    /*\n     * Iterates over an object or a collection and calls a callback\n     * function with each item as a parameter.\n     */\n    DISQUS.each = function (collection, callback) {\n        var length = collection.length,\n            forEach = Array.prototype.forEach;\n\n        if (!isNaN(length)) {\n            // Treat collection as an array\n            if (forEach) {\n                forEach.call(collection, callback);\n            } else {\n                for (var i = 0; i < length; i++) {\n                    callback(collection[i], i, collection);\n                }\n            }\n        } else {\n            // Treat collection as an object\n            for (var key in collection) {\n                if (DISQUS.isOwn(collection, key)) {\n                    callback(collection[key], key, collection);\n                }\n            }\n        }\n    };\n\n    // Borrowed from underscore\n    DISQUS.extend = function (obj) {\n        DISQUS.each(Array.prototype.slice.call(arguments, 1), function (source) {\n            for (var prop in source) {\n                obj[prop] = source[prop];\n            }\n        });\n        return obj;\n    };\n\n    DISQUS.serializeArgs = function (params) {\n        var pcs = [];\n        DISQUS.each(params, function (val, key) {\n            if (val !== undefined) {\n                pcs.push(key + (val !== null ? '=' + encodeURIComponent(val) : ''));\n            }\n        });\n        return pcs.join('&');\n    };\n\n    DISQUS.serialize = function (url, params, nocache) {\n        if (params) {\n            url += (~url.indexOf('?') ?\n                        (url.charAt(url.length - 1) == '&' ? '': '&') : '?');\n            url += DISQUS.serializeArgs(params);\n        }\n\n        if (nocache) {\n            var ncp = {};\n            ncp[(new Date()).getTime()] = null;\n            return DISQUS.serialize(url, ncp);\n        }\n\n        var len = url.length;\n        return (url.charAt(len - 1) == \"&\" ? url.slice(0, len - 1) : url);\n    };\n\n    var TIMEOUT_DURATION = 2e4; // 20 seconds\n    var addEvent, removeEvent;\n\n    // select the correct event listener function. all of our supported\n    // browsers will use one of these\n    if ('addEventListener' in window) {\n        addEvent = function (node, event, handler) {\n            node.addEventListener(event, handler, false);\n        };\n        removeEvent = function (node, event, handler) {\n            node.removeEventListener(event, handler, false);\n        };\n    }\n    else {\n        addEvent = function (node, event, handler) {\n            node.attachEvent('on' + event, handler);\n        };\n        removeEvent = function (node, event, handler) {\n            node.detachEvent('on' + event, handler);\n        };\n    }\n\n    DISQUS.require = function (url, params, nocache, success, failure) {\n        var script = document.createElement('script');\n        var evName = script.addEventListener ? 'load' : 'readystatechange';\n        var timeout = null;\n\n        script.src = DISQUS.serialize(url, params, nocache);\n        script.async = true;\n        script.charset = 'UTF-8';\n\n        function handler(ev) {\n            ev = ev || window.event;\n            if (!ev.target) {\n                ev.target = ev.srcElement;\n            }\n\n            if (ev.type != 'load' && !/^(complete|loaded)$/.test(ev.target.readyState)) {\n                return; // Not ready yet\n            }\n\n            if (success) {\n                success();\n            }\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            removeEvent(ev.target, evName, handler);\n        }\n\n        if (success || failure) {\n            addEvent(script, evName, handler);\n        }\n\n        if (failure) {\n            timeout = setTimeout(function () {\n                failure();\n            }, TIMEOUT_DURATION);\n        }\n\n        head.appendChild(script);\n        return DISQUS;\n    };\n\n    DISQUS.requireStylesheet = function (url, params, nocache) {\n        var link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        link.href = DISQUS.serialize(url, params, nocache);\n        head.appendChild(link);\n        return DISQUS;\n    };\n\n    DISQUS.requireSet = function (urls, nocache, callback) {\n        var remaining = urls.length;\n        DISQUS.each(urls, function (url) {\n            DISQUS.require(url, {}, nocache, function () {\n                if (--remaining === 0) { callback(); }\n            });\n        });\n    };\n\n    DISQUS.injectCss = function (css) {\n        var style = document.createElement('style');\n        style.setAttribute('type', 'text/css');\n\n        // Make inline CSS more readable by splitting each rule onto a separate line\n        css = css.replace(/\\}/g, \"}\\n\");\n\n        if (window.location.href.match(/^https/))\n            css = css.replace(/http:\\/\\//g, 'https://');\n\n        if (style.styleSheet) { // Internet Explorer only\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n    };\n\n    DISQUS.isString = function (val) {\n        return Object.prototype.toString.call(val) === '[object String]';\n    };\n});\n\n/*jshint boss:true*/\n/*global DISQUS */\nDISQUS.define('Events', function (window, undefined) {\n    \"use strict\";\n\n    // Returns a function that will be executed at most one time, no matter how\n    // often you call it. Useful for lazy initialization.\n    var once = function (func) {\n        var ran = false, memo;\n        return function () {\n            if (ran) return memo;\n            ran = true;\n            memo = func.apply(this, arguments);\n            func = null;\n            return memo;\n        };\n    };\n    var has = DISQUS.isOwn;\n    var keys = Object.keys || function (obj) {\n        if (obj !== Object(obj)) throw new TypeError('Invalid object');\n        var keys = [];\n        for (var key in obj) if (has(obj, key)) keys[keys.length] = key;\n        return keys;\n    };\n    var slice = [].slice;\n\n    // Backbone.Events\n    // ---------------\n\n    // A module that can be mixed in to *any object* in order to provide it with\n    // custom events. You may bind with `on` or remove with `off` callback\n    // functions to an event; `trigger`-ing an event fires all callbacks in\n    // succession.\n    //\n    // var object = {};\n    // _.extend(object, Backbone.Events);\n    // object.on('expand', function(){ alert('expanded'); });\n    // object.trigger('expand');\n    //\n    var Events = {\n\n        // Bind an event to a `callback` function. Passing `\"all\"` will bind\n        // the callback to all events fired.\n        on: function (name, callback, context) {\n            if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n            this._events = this._events || {};\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({callback: callback, context: context, ctx: context || this});\n            return this;\n        },\n\n        // Bind an event to only be triggered a single time. After the first time\n        // the callback is invoked, it will be removed.\n        once: function (name, callback, context) {\n            if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n            var self = this;\n            var onced = once(function () {\n                self.off(name, onced);\n                callback.apply(this, arguments);\n            });\n            onced._callback = callback;\n            return this.on(name, onced, context);\n        },\n\n        // Remove one or many callbacks. If `context` is null, removes all\n        // callbacks with that function. If `callback` is null, removes all\n        // callbacks for the event. If `name` is null, removes all bound\n        // callbacks for all events.\n        off: function (name, callback, context) {\n            var retain, ev, events, names, i, l, j, k;\n            if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n            if (!name && !callback && !context) {\n                this._events = {};\n                return this;\n            }\n\n            names = name ? [name] : keys(this._events);\n            for (i = 0, l = names.length; i < l; i++) {\n                name = names[i];\n                if (events = this._events[name]) {\n                    this._events[name] = retain = [];\n                    if (callback || context) {\n                        for (j = 0, k = events.length; j < k; j++) {\n                            ev = events[j];\n                            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                                (context && context !== ev.context)) {\n                                retain.push(ev);\n                            }\n                        }\n                    }\n                    if (!retain.length) delete this._events[name];\n                }\n            }\n\n            return this;\n        },\n\n        // Trigger one or many events, firing all bound callbacks. Callbacks are\n        // passed the same arguments as `trigger` is, apart from the event name\n        // (unless you're listening on `\"all\"`, which will cause your callback to\n        // receive the true name of the event as the first argument).\n        trigger: function (name) {\n            if (!this._events) return this;\n            var args = slice.call(arguments, 1);\n            if (!eventsApi(this, 'trigger', name, args)) return this;\n            var events = this._events[name];\n            var allEvents = this._events.all;\n            if (events) triggerEvents(events, args);\n            if (allEvents) triggerEvents(allEvents, arguments);\n            return this;\n        },\n\n        // Tell this object to stop listening to either specific events ... or\n        // to every object it's currently listening to.\n        stopListening: function (obj, name, callback) {\n            var listeners = this._listeners;\n            if (!listeners) return this;\n            var deleteListener = !name && !callback;\n            if (typeof name === 'object') callback = this;\n            if (obj) (listeners = {})[obj._listenerId] = obj;\n            for (var id in listeners) {\n                listeners[id].off(name, callback, this);\n                if (deleteListener) delete this._listeners[id];\n            }\n            return this;\n        }\n\n    };\n\n    // Regular expression used to split event strings.\n    var eventSplitter = /\\s+/;\n\n    // Implement fancy features of the Events API such as multiple event\n    // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n    // in terms of the existing API.\n    var eventsApi = function (obj, action, name, rest) {\n        if (!name) return true;\n\n        // Handle event maps.\n        if (typeof name === 'object') {\n            for (var key in name) {\n                obj[action].apply(obj, [key, name[key]].concat(rest));\n            }\n            return false;\n        }\n\n        // Handle space separated event names.\n        if (eventSplitter.test(name)) {\n            var names = name.split(eventSplitter);\n            for (var i = 0, l = names.length; i < l; i++) {\n                obj[action].apply(obj, [names[i]].concat(rest));\n            }\n            return false;\n        }\n\n        return true;\n    };\n\n    // A difficult-to-believe, but optimized internal dispatch function for\n    // triggering events. Tries to keep the usual cases speedy (most internal\n    // Backbone events have 3 arguments).\n    var triggerEvents = function (events, args) {\n        var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n        switch (args.length) {\n        case 0:\n            while (++i < l) {\n                (ev = events[i]).callback.call(ev.ctx);\n            }\n            return;\n        case 1:\n            while (++i < l) {\n                (ev = events[i]).callback.call(ev.ctx, a1);\n            }\n            return;\n        case 2:\n            while (++i < l) {\n                (ev = events[i]).callback.call(ev.ctx, a1, a2);\n            }\n            return;\n        case 3:\n            while (++i < l) {\n                (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n            }\n            return;\n        default:\n            while (++i < l) {\n                (ev = events[i]).callback.apply(ev.ctx, args);\n            }\n        }\n    };\n\n    var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n    // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n    // listen to an event in another object ... keeping track of what it's\n    // listening to.\n    DISQUS.each(listenMethods, function (implementation, method) {\n        Events[method] = function (obj, name, callback) {\n            var listeners = this._listeners || (this._listeners = {});\n            var id = obj._listenerId || (obj._listenerId = DISQUS.getUid('l'));\n            listeners[id] = obj;\n            if (typeof name === 'object') callback = this;\n            obj[implementation](name, callback, this);\n            return this;\n        };\n    });\n\n    // Aliases for backwards compatibility.\n    Events.bind = Events.on;\n    Events.unbind = Events.off;\n\n    return Events;\n});\n // used for /follow/ /login/ /signup/ social oauth dialogs\n// faking the bus\nDISQUS.use('Bus');\n_.extend(DISQUS.Bus, DISQUS.Events);\n</script>\n\n\n\n    \n\n    \n    <script src=\"//a.disquscdn.com/1492794604/js/src/global.js\" charset=\"utf-8\"></script>\n    <script src=\"//a.disquscdn.com/1492794604/js/src/ga_events.js\" charset=\"utf-8\"></script>\n\n\n\n<!-- start Mixpanel --><script type=\"text/javascript\">(function(e,b){if(!b.__SV){var a,f,i,g;window.mixpanel=b;a=e.createElement(\"script\");a.type=\"text/javascript\";a.async=!0;a.src=(\"https:\"===e.location.protocol?\"https:\":\"http:\")+'//cdn.mxpnl.com/libs/mixpanel-2.2.min.js';f=e.getElementsByTagName(\"script\")[0];f.parentNode.insertBefore(a,f);b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(\".\");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;\"undefined\"!==\ntypeof d?c=b[d]=[]:d=\"mixpanel\";c.people=c.people||[];c.toString=function(b){var a=\"mixpanel\";\"mixpanel\"!==d&&(a+=\".\"+d);b||(a+=\" (stub)\");return a};c.people.toString=function(){return c.toString(1)+\".people (stub)\"};i=\"disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user\".split(\" \");for(g=0;g<i.length;g++)f(c,i[g]);\nb._i.push([a,e,d])};b.__SV=1.2}})(document,window.mixpanel||[]);\nmixpanel.init('17b27902cd9da8972af8a3c43850fa5f', {\n    \n    track_pageview: false,\n    debug: false\n});\n</script><!-- end Mixpanel -->\n\n\n\n<script src=\"//a.disquscdn.com/1492794604//js/src/funnelcake.js\"></script>\n<script type=\"text/javascript\">\n    if (window.AB_TESTS === undefined) {\n        var AB_TESTS = {};\n    }\n</script>\n<script type=\"text/javascript\" charset=\"utf-8\">\n    // Global tests\n    $(document).ready(function() {\n        $('a[rel*=facebox]').facebox();\n    });\n</script>\n\n    <script type=\"text/x-underscore-template\" data-template-name=\"global-nav\">\n\n<% var has_custom_avatar = data.avatar_url && data.avatar_url.indexOf('noavatar') < 0; %>\n<% var has_custom_username = data.username && data.username.indexOf('disqus_') < 0; %>\n<% if (data.username) { %>\n    <% if (data.has_forums) { %>\n        <li class=\"admin<% if (has_custom_avatar || !has_custom_username) { %> avatar-menu-admin<% } %>\" data-analytics=\"header admin\"><a href=\"<%= data.urlMap.admin %>\"><strong>Admin</strong></a></li>\n    <% } %>\n    <li class=\"user-dropdown dropdown-toggle<% if (has_custom_avatar || !has_custom_username) { %> avatar-menu<% } else { %> username-menu<% } %>\" data-analytics=\"header username dropdown\" data-floater-marker=\"<% if (has_custom_avatar || !has_custom_username) { %>square<% } %>\">\n        <a href=\"<%= data.urlMap.home %>/<%= data.username %>/\">\n            <% if (has_custom_avatar) { %>\n                <img src=\"<%= data.avatar_url %>\" class=\"avatar\">\n            <% } else if (has_custom_username) { %>\n                <%= data.username %>\n            <% } else { %>\n                <img src=\"<%= data.avatar_url %>\" class=\"avatar\">\n            <% } %>\n            <span class=\"caret\"></span>\n        </a>\n        <ul class=\"clearfix dropdown\">\n            <li data-analytics=\"header view profile\"><a href=\"<%= data.urlMap.home %>/<%= data.username %>/\">View Profile</a></li>\n            <li class=\"js-edit-profile\" data-analytics=\"header edit profile\"><a href=\"<%= data.urlMap.home_settings_profile %>\">Edit Profile</a></li>\n            <li class=\"logout\" data-analytics=\"header logout\"><a href=\"<%= data.urlMap.logout %>\">Logout</a></li>\n        </ul>\n    </li>\n<% } else { %>\n    <li class=\"link-login\" data-analytics=\"header login\"><a href=\"<%= data.urlMap.login %>?next=<%= encodeURIComponent(document.location.href) %>\">Log in</a></li>\n<% } %>\n\n\n</script>\n\n    <!--[if lte IE 7]>\n  <script src=\"//a.disquscdn.com/1492794604/js/src/border_box_model.js\"></script>\n<![endif]-->\n<!--[if lte IE 8]>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/modernizr/2.5.3/modernizr.min.js\"></script>\n  <script src=\"//a.disquscdn.com/1492794604/js/src/selectivizr.js\"></script>\n<![endif]-->\n\n    \n\n    \n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n\n\n    \n        <script type=\"text/javascript\" charset=\"utf-8\">\n            // Global tests\n            $(document).ready(function() {\n                $('a[rel*=facebox]').facebox();\n            });\n        </script>\n        \n    \n    \n<link href=\"//a.disquscdn.com/current/css/modals.css\" type=\"text/css\" rel=\"stylesheet\"></head>\n<body class=\"profile-signup\" id=\"js-content\">\n    \n    \n\n    \n    <section class=\"container--narrow signup\">\n        <form id=\"login-form\" action=\"\" method=\"post\" accept-charset=\"utf-8\">\n            <div style=\"display:none\"><input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"GRxIw63UZK2qRlj6v5UCUoAUPFFszrvX\"></div>\n\n            <div class=\"nav-tab\">\n                <div class=\"nav-tab__item is-active\">\n                    Signup\n                </div>\n                <a href=\"https://disqus.com/profile/login/\" class=\"nav-tab__item\">\n                    Login\n                </a>\n            </div>\n\n            <p class=\"text-center\">Sign up for Disqus with your social media account or email address</p>\n\n            <div class=\"social-login__wrapper\">\n                <button title=\"facebook\" type=\"button\" class=\"social-button -facebook\">\n                    <span class=\"auth-container\">\n                        <img src=\"//a.disquscdn.com/1492794604/img/icons/facebook.svg\" alt=\"Facebook\">\n                    </span>\n                </button>\n                <button title=\"twitter\" type=\"button\" class=\"social-button -twitter\">\n                    <span class=\"auth-container\">\n                        <img src=\"//a.disquscdn.com/1492794604/img/icons/twitter.svg\" alt=\"Twitter\">\n                    </span>\n                </button>\n                <button title=\"google\" type=\"button\" class=\"social-button -google\">\n                    <span class=\"auth-container\">\n                        <img src=\"//a.disquscdn.com/1492794604/img/icons/google.svg\" alt=\"Google\">\n                    </span>\n                </button>\n            </div>\n\n            \n\n            <fieldset class=\"input-group\">\n                <label for=\"display-name-input\" class=\"input-label\">Name</label>\n                <input id=\"display-name-input\" type=\"text\" name=\"display_name\" tabindex=\"20\" value=\"\" required=\"\" autofocus=\"\">\n                \n            </fieldset>\n\n            <fieldset class=\"input-group\">\n                <label for=\"email-input\" class=\"input-label\">Email</label>\n                <input id=\"email-input\" type=\"email\" name=\"email\" tabindex=\"21\" value=\"\" required=\"\">\n                \n            </fieldset>\n\n            <fieldset class=\"input-group\">\n                <label for=\"password-input\" class=\"input-label\">Password</label>\n                <input id=\"password-input\" type=\"password\" name=\"password\" tabindex=\"22\" required=\"\">\n                \n            </fieldset>\n\n            \n            \n\n            \n            <div class=\"button-container spacing-bottom\">\n                <button class=\"button submit\" data-analytics=\"sign-in\" tabindex=\"23\">Signup<span class=\"spinner\"></span></button>\n            </div>\n\n            <div class=\"spacing-top\">\n                By signing up, you agree to Disqus' <a href=\"https://help.disqus.com/customer/portal/articles/1753105-basic-rules-for-disqus-powered-profiles-and-discussions\" target=\"_blank\">Basic Rules</a>, <a href=\"https://help.disqus.com/customer/portal/articles/466260-terms-of-service\" target=\"_blank\">Terms of Service</a>, and <a href=\"https://help.disqus.com/customer/portal/articles/466259-privacy-policy\" target=\"_blank\">Privacy Policy</a>.\n            </div>\n\n        </form>\n\n    </section>\n\n    \n    \n\n\n<div class=\"text-center\">\n    <a href=\"/\" class=\"logo\" data-analytics=\"site logo\">\n        <img src=\"//a.disquscdn.com/1492794604/img/disqus-logo-alt-hidpi.png\" width=\"102\" height=\"20\" alt=\"Disqus\" title=\"Disqus - Discover your community\">\n    </a>\n</div>\n\n\n\n    \n        \n        \n            \n<script>\n    /*jshint undef:true, browser:true, maxlen:100, strict:true, expr:true, white:true */\n\n// These must be global\nvar _gaq;\n\n(function (doc) {\n    \"use strict\";\n\n    // Convert Django template variables to JS variables\n    var debug = false,\n        gaKey = '',\n        gaPunt = '',\n        gaCustomVars = {\n            component: 'website',\n            forum: '',\n            version: 'v5'\n        },\n        gaSlots = {\n            component: 1,\n            forum: 3,\n            version: 4\n        };\n    /**/\n\n    gaKey = gaCustomVars.component == 'website' ?\n            'UA-1410476-16' :\n            '';\n\n\n    // Now start loading analytics services\n    var s = doc.getElementsByTagName('script')[0],\n        p = s.parentNode;\n\n    var isSecure = doc.location.protocol == 'https:';\n\n    // Set up Google Analytics\n    _gaq = _gaq || [];\n\n\n    if (!debug) {\n        _gaq.push(['_setAccount', gaKey]);\n        _gaq.push(['_setDomainName', '.disqus.com']);\n    }\n\n    if (!gaPunt) {\n        for (var v in gaCustomVars) {\n            if (!(gaCustomVars.hasOwnProperty(v) && gaCustomVars[v]))\n                continue;\n\n            _gaq.push(['_setCustomVar', gaSlots[v], gaCustomVars[v]]);\n        }\n\n        _gaq.push(['_trackPageview']);\n    }\n\n    // Load Google Analytics\n    var ga = doc.createElement('script');\n    ga.type = 'text/javascript';\n    ga.async = true;\n    var prefix = isSecure ? 'https://ssl' : 'http://www';\n    // Dev tip: if you cannot use the Google Analytics Debug Chrome extension,\n    // https://chrome.google.com/webstore/detail/jnkmfdileelhofjcijamephohjechhna\n    // you can replace /ga.js on the following line with /u/ga_debug.js\n    // But if you do that, PLEASE DON'T COMMIT THE CHANGE! Kthxbai.\n    ga.src = prefix + '.google-analytics.com/ga.js';\n    p.insertBefore(ga, s);\n}(document));\n\n</script>\n\n\n        \n        \n    \n\n    \n    \n    \n\n    \n\n        <script>\n        (function (){\n            // adds a classname for css to target the current page without passing in special things from the server or wherever\n            // replacing all characters not allowable in classnames\n            var newLocation = encodeURIComponent(window.location.pathname).replace(/[\\.!~*'\\(\\)]/g, '_');\n            // cleaning up remaining url-encoded symbols for clarity sake\n            newLocation = newLocation.replace(/%2F/g, '-').replace(/^-/, '').replace(/-$/, '');\n            if (newLocation === '') {\n                newLocation = 'homepage';\n            }\n            $('body').addClass('' + newLocation);\n        }());\n\n        $(function ($) {\n            // adds 'page-active' class to links matching the page url\n            $('a[href=\"' + window.location.pathname + '\"]').addClass('page-active');\n        });\n\n        $(document).delegate('[data-toggle-selector]', 'click', function (e) {\n            var $this = $(this);\n            $($this.attr('data-toggle-selector')).toggle();\n            e.preventDefault();\n        });\n        </script>\n    \n\n<script src=\"https://c.disquscdn.com/next/current/embed/jester.js\"></script>\n<script>\n    var jesterObj = {\n        product: 'dotcom',\n        zone: 'register',\n    };\n    \n    \n    window.DISQUS.jester.pv(jesterObj);\n</script>\n\n\n<script>\nDISQUS.define('web.urls', function () {\n    return {\n        twitter: 'https://disqus.com/_ax/twitter/begin/?ctkn=GRxIw63UZK2qRlj6v5UCUoAUPFFszrvX',\n        google: 'https://disqus.com/_ax/google/begin/?ctkn=GRxIw63UZK2qRlj6v5UCUoAUPFFszrvX',\n        facebook: 'https://disqus.com/_ax/facebook/begin/?ctkn=GRxIw63UZK2qRlj6v5UCUoAUPFFszrvX',\n        dashboard: 'http://disqus.com/dashboard/'\n    }\n});\n\n$(document).ready(function () {\n    $(\"form\").submit(function () {\n        $(this).find('.button.submit')\n               .attr('disabled', 'disabled');\n        $(this).find('#password-input')\n               .attr('readonly', 'readonly');\n        $(this).find('#email-input')\n               .attr('readonly', 'readonly');\n        $(this).find('#display-name-input')\n               .attr('readonly', 'readonly');\n    });\n});\n</script>\n\n<script type=\"text/javascript\" src=\"//a.disquscdn.com/1492794604/js/src/social_login.js\"></script>\n\n<script>\n    \n\n    (function () {\n        // https://gist.github.com/3108177\n        var supportsGCS = \"defaultView\" in window.document && \"getComputedStyle\" in window.document.defaultView;\n\n        function getStyle(element, property) {\n            // `element.ownerDocument` returns the used style values relative to the\n            // element's parent document (which may be another frame). `defaultView`\n            // is required for Safari 2 support and when retrieving framed styles in\n            // Firefox 3.6 (https://github.com/jquery/jquery/pull/524#issuecomment-2241183).\n            var style = supportsGCS ? element.ownerDocument.defaultView.getComputedStyle(element, null) : element.currentStyle;\n            return (style || element.style)[property];\n        }\n\n        function getWindowPadding() {\n            // Based in part on\n            // http://stackoverflow.com/questions/1275849/get-height-of-enter-browser-window-in-ie8\n\n            if (window.outerHeight !== undefined) {\n                return {\n                    x: window.outerWidth - window.innerWidth,\n                    y: window.outerHeight - window.innerHeight\n                }\n            }\n\n            var docElem = document.documentElement;\n\n            // Old browser (IE8 and below). Need to resize window, observe change in\n            // clientWidth/Height in order to determine padding.\n            var oldX = docElem.clientWidth;\n            var oldY = docElem.clientHeight;\n\n            // clientWidth/Height *will* be smaller than the current window size. But\n            // not by much. I figure this is the least jarring size to pick.\n            window.resizeTo(oldX, oldY);\n\n            var padding = {\n                x: oldX - docElem.clientWidth,\n                y: oldY - docElem.clientHeight\n            };\n\n            // Restore window to original dimensions\n            window.resizeTo(oldX + padding.x, oldY + padding.y);\n\n            return padding;\n        }\n\n        function getScrollbarWidth() {\n            // credits: http://davidwalsh.name/detect-scrollbar-width\n            // Create the measurement node\n            var scrollDiv = document.createElement(\"div\");\n            scrollDiv.className = \"scrollbar-measure\";\n            document.body.appendChild(scrollDiv);\n\n            // Get the scrollbar width\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n            // Delete the DIV\n            document.body.removeChild(scrollDiv);\n            return scrollbarWidth;\n        }\n\n        if (window.resizeTo) {\n            window.onload = function () {\n                // Should only calculate document dimensions after page has fully loaded.\n                // I've also observed some funky results without using setTimeout to wrap\n                // the callback. Other applications seem to resize on a delay, so I suspect\n                // this is necessary.\n                setTimeout(function () {\n                    var content = document.getElementById('js-content'),\n                        buffer = 20,\n                        width = content.offsetWidth,\n                        height = content.offsetHeight,\n                        padding = getWindowPadding(),\n                        scrollWidth = getScrollbarWidth(),\n                        viewportHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n                        viewportWidth = window.innerWidth || ((document.documentElement.clientWidth || document.body.clientWidth) + scrollWidth),\n                        browser = window.outerHeight || viewportHeight;\n\n                    // resize only when content is cropped\n                    if(viewportHeight < height + buffer || viewportWidth < width) {\n                        window.resizeTo(Math.max(width, viewportWidth), height + (browser - viewportHeight) + buffer);\n                    }\n                }, 250);\n            }\n        }\n    }());\n</script>\n\n\n\n\n    \n    <script type=\"text/javascript\">\n      $(function() {\n          var options = {\n              authenticated: (context.auth.username !== undefined),\n              moderated_forums: context.auth.moderated_forums,\n              user_id: context.auth.user_id,\n              forum: context.forum\n          };\n          DISQUS.funnelcake.init(options);\n        });\n    </script>\n    \n\n    \n    <!-- helper jQuery tmpl partials -->\n    <script type=\"text/x-jquery-tmpl\" id=\"profile-metadata-tmpl\">\n        \n        data-profile-username=\"${username}\" data-profile-hash=\"${emailHash}\" href=\"/${username}\"\n        \n    </script>\n    <script type=\"text/x-jquery-tmpl\" id=\"profile-link-tmpl\">\n        \n        <a class=\"profile-launcher\" {{tmpl \"#profile-metadata-tmpl\"}} href=\"/${username}\">${name}</a>\n        \n    </script>\n\n    <script src=\"//a.disquscdn.com/1492794604/js/src/templates.js\"></script>\n    \n\n    <script src=\"//a.disquscdn.com/1492794604/js/src/modals.js\"></script>\n<script>\n  DISQUS.ui.config({\n    disqusUrl: 'https://disqus.com',\n    mediaUrl: '//a.disquscdn.com/1492794604/'\n  });\n</script>\n\n\n\n</body>"}
