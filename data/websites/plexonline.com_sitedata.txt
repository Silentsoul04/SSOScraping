{"link":"plexonline.com","html":"<head><title>\n\tPlex Manufacturing Cloud - Login\n</title><meta name=\"viewport\" content=\"width=device-width; minimum-scale=1.0; maximum-scale=1.0;\"><meta name=\"MobileOptimized\" content=\"0\"><script type=\"text/javascript\" src=\"https://www.plexonline.com/_ScriptLibrary/plexus.js\"></script><script type=\"text/javascript\" src=\"https://www.plexonline.com/popup_menus/global_menu_properties.js\"></script><script type=\"text/javascript\" src=\"https://www.plexonline.com/popup_menus/hm_loader.js\"></script><script type=\"text/javascript\" src=\"https://www.plexonline.com/_scriptlibrary/http_request.js\"></script><script type=\"text/javascript\" src=\"https://www.plexonline.com/SSI/UTF8_Encode_Decode.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.plexonline.com/Modules/scripts/browser.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.plexonline.com/Modules/scripts/plex.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.plexonline.com/Modules/scripts/glossarymanager.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.plexonline.com/Modules/scripts/cssutility.js\"></script>\n<script type=\"text/javascript\" src=\"https://www.plexonline.com/Modules/scripts/jQuery/jquery-1.5.1.min.js\"></script>\n\n  <script type=\"text/javascript\">\n    $(document).ready(function ()\n    {\n      var svFormSelector = \".LoginForm\";\n      var svFieldPairSelector = \".FormFieldPair\";\n      var svLabelSelector = \".LoginLabel\";\n      var svControlSelector = \".LoginControl\";\n      var svLogoSelector = \"#divLoginLogo\";\n\n      $(this).find(svFormSelector).each(function ()\n      {\n        var ivLogoWidth = $(this).find(svLogoSelector).width();\n        if ($(this).find(svLabelSelector).first().width() == null)\n        {\n          // no labels = no input fields, constrain width by logo size\n          if (ivLogoWidth != null && ivLogoWidth > 0)\n          {\n            $(this).width(ivLogoWidth + 50);\n            return;\n          }\n        }\n\n        // labels\n        var ivLabelMax = 0;\n        $(svFormSelector).find(svLabelSelector).each(function ()\n        {\n          var ivCurrentLabelWidth = $(this).width();\n          if (ivCurrentLabelWidth > ivLabelMax)\n          {\n            ivLabelMax = ivCurrentLabelWidth;\n          }\n        });\n\n        $(this).find(svLabelSelector).width(ivLabelMax);\n\n        // controls\n        var ivControlMax = 0;\n        $(this).find(svControlSelector).each(function ()\n        {\n          var ivCurrentControlWidth = $(this).width();\n          if (ivCurrentControlWidth > ivControlMax)\n          {\n            ivControlMax = ivCurrentControlWidth;\n          }\n        });\n        \n        if (ivLabelMax + ivControlMax + 10 > $(window).width() * .96)\n        {\n          //Screen is too small for Label and Control to sit side-by-side, so we need to make the wrapping look nice.\n          $(this).find(svLabelSelector).css(\"text-align\", \"left\");\n          $(this).find(svLabelSelector).css(\"margin-left\", \"7%\");\n          $(this).find(svControlSelector).css(\"margin-left\", \"7%\");\n        }\n\n        //$(this).find(svControlSelector).width(ivControlMax);\n\n        // account for a logo wider than the form labels and controls\n        if (ivLogoWidth != null && ivLogoWidth > (ivLabelMax + ivControlMax))\n        {\n          // NOTE: the width calculation in IE doesn't account for common user agent styles of border and padding\n          // on the INPUT element so additional pixels must be added to prevent control wrapping\n          $(this).find(svFieldPairSelector).width(ivLogoWidth + 10); // field pair width to match logo width\n        }\n\n        // account for strange screen dimension detection issue with a mobile device\n        var ivFormWidth = $(this).width();\n        if (ivFormWidth > $(window).width())\n        {\n          $(this).width($(window).width() - 10);\n        }\n      });\n    });\n\n    function Init()\n    {\n      SetWindowProperties();\n      Plex.DocumentController.Initialize();\n      \n      var oElement = Plex.GetElement(\"txtUserID\", window);\n      if (oElement)\n      {\n        Plex.ElementUtility.SetFocus(oElement);\n      }\n    }\n        \n    function SetWindowProperties(oOptions)\n    {\n      oOptions = oOptions || { };\n      oOptions.SsoMode = oOptions.SsoMode || false;\n      oOptions.KioskMode = oOptions.KioskMode || false;\n\n      if (oOptions.SsoMode)\n      {\n        window.name = \"LAUNCHPOLSSO\" + new Date() * 1;\n      }\n      else if (oOptions.KioskMode\n        || window.name.indexOf(\"POLPOLMAINKIOSK\") === 0) // allow expired/deleted kiosk sessions to stay inside a kiosk window\n      {\n        window.name = 'LAUNCHPOLMAINKIOSK' + new Date() * 1;\n      }\n      else if (window.name.length === 0\n        || window.name.indexOf(\"POLPOLSSO\") === 0 // a previous SSO window re-used for main POL\n        || (window.name.indexOf(\"LAUNCHPOL\") === -1 && window.name.indexOf(\"POLPOL\") === -1))\n      {\n        window.name = \"LAUNCHPOLMAIN\" + new Date() * 1;\n      }\n    }\n\n    function RedirectToFullPage()\n    {\n      // Wizards use framesets and one frame redirects to index when session expires so this ensures the full page is the index page\n      if (self.top.location.href != self.location.href)\n      {\n        self.top.location.href = self.top.location.href;\n      }\n    }\n\n    function ForgotPassword()\n    {\n      var oElement = Plex.GetElement(\"txtUserID\", window);    \n      if (oElement && oElement.value != \"\")\n      {\n        Submit_To(GetWebRoot() + \"Plexus_Control/Password_Questions_Ask.asp\");\n      }\n      else\n      {\n        alert(\"Please type in your User ID.\");\n        if (oElement)\n        {\n          Plex.ElementUtility.SetFocus(oElement);\n        }\n      }\n    }\n\n    function ValidateLoginFields()\n    {\n      return ValidateRequiredField(\"txtUserID\") && ValidateRequiredField(\"txtPassword\") && ValidateRequiredField(\"txtCompanyCode\");\n    }\n    \n    function ValidateRequiredField(svId)\n    {\n      var oElement = Plex.GetElement(svId, window);\n      if (!oElement || oElement.value.length === 0)\n      {\n        Plex.ElementUtility.SetFocus(oElement, 0, -1);\n        return false;\n      }\n      \n      return true;\n    }\n\n    function Submit()\n    {\n      if (ValidateLoginFields())\n      {\n        var oElement = Plex.GetElement(\"txtPassword\", window);\n        oElement.value = Foggy(oElement.value);\n\n        Plex.GetElement(\"thisForm\", window).submit();\n      }\n    }\n\n    function SubmitOnEnter(e)\n    {\n      if (Plex.EventUtility.GetKeyCode(e) == 13) \n      {\n        Submit();\n      }\n    }\n\n    function Login(svLoginUrl)\n    {\n      var svNewWindowName = \"POLPOLMAIN\" + new Date() * 1;\n      var bvNewWindow = true;\n      var bvSpecifySize = true;\n      var bvAllowToolbars = false;\n      if (Plex.IsMobileURL() || window.name.indexOf(\"POLPOL\") === 0)\n      {\n        bvNewWindow = false; // mobile and standard Plex windows via redirects\n      }\n      else if (window.name.indexOf(\"LAUNCHPOLMAINKIOSK\") === 0)\n      {\n        bvNewWindow = false; // redirect inside kiosk window\n        window.name = window.name.replace(/LAUNCH/gi, \"POL\");\n      }\n      else if (window.name.indexOf(\"LAUNCHPOLSSO\") === 0)\n      {\n        bvSpecifySize = false;\n        bvAllowToolbars = true;\n        svNewWindowName = window.name.replace(/LAUNCH/gi, \"POL\");\n      }\n      else if (window.name.length == 0 || window.name.indexOf(\"LAUNCHPOLMAIN\") === 0)\n      {\n        // default behavior (fresh window and launch new session)\n        bvAllowToolbars = false;\n      }\n\n      if (bvNewWindow)\n      {\n        var ivWidth = screen.availWidth - 10;\n        var ivHeight = screen.availHeight - 50;\n        var svToolbars = (bvAllowToolbars) ? \"yes\" : \"no\";\n\n        var svNewWindowOptions = \"scrollbars=yes,resizable=yes,status=yes\"; // all windows\n        svNewWindowOptions += \",toolbar=\" + svToolbars + \",menubar=\" + svToolbars + \",location=\" + svToolbars + \"\"; // explicit toolbar options\n        if (bvSpecifySize)\n        {\n          svNewWindowOptions += \",Left=0,Top=0,Width=\" + ivWidth + \",Height=\" + ivHeight; // specific size\n        }\n\n        window.open(svLoginUrl, svNewWindowName, svNewWindowOptions);\n        plForce_Window_Close(window);\n        return;\n      }\n\n      window.location.href = svLoginUrl;\n    }\n\n    function Foggy(svInput) \n    {\n      // Any changes must be duplicated in the server-side version of this function.\n      var svOutput = \"\";\n      var ivRnd;\n      var i;\n      var ivLength = svInput.length;\n\n      if (ivLength == 0 || ivLength > 158) \n      {\n        svInput = svInput.replace(/\"/g,\"&qt;\");\n        return svInput;\n      }\n    \n      for (i = 0; i < ivLength; i++) \n      {\n        ivRnd = Math.floor(Math.random() * 3);\n        if (svInput.charCodeAt(i) == 32 || svInput.charCodeAt(i) == 34 || svInput.charCodeAt(i) == 62) \n        {\n          ivRnd = 1;\n        }\n        if (svInput.charCodeAt(i) == 33 || svInput.charCodeAt(i) == 58 || svInput.charCodeAt(i) == 59 || svInput.charCodeAt(i) + ivRnd > 255) \n        {\n          ivRnd = 0;\n        }\n        svOutput += String.fromCharCode(ivRnd+97);\n        svOutput += String.fromCharCode(svInput.charCodeAt(i)+ivRnd);\n      }\n  \n      for (i = 0; i < Math.floor(Math.random() * 8) + 8; i++) \n      {\n        ivRnd = Math.floor(Math.random() * 26);\n        svOutput += String.fromCharCode(ivRnd+97);\n      }\n  \n      svOutput += String.fromCharCode(svInput.length + 96);\n      return svOutput;\n    }\n\n  </script>\n  <link id=\"ctl13\" type=\"text/css\" rel=\"stylesheet\" href=\"https://static.plexonline.com/Themes/1/Styles.css\"></head>\n<body onload=\"Init();\">\n  <div class=\"BodyWrapper\">\n    <div id=\"divToolbar\" class=\"Toolbar\">\n      <div id=\"NavigationToolbar\" class=\"NavigationToolbarSection\">\n        <div class=\"ToolbarButton\">\n\t<a id=\"btnAbout\" class=\"Button AboutPlexButton green\" onclick=\"return false;\" onmouseover=\"window.status=''; return true;\" onmouseout=\"window.status='';\" href=\"javascript:void(0);\"><span id=\"btnAbout_Label\">About Plex</span></a>\n</div><script type=\"text/javascript\">\nPlex.EventUtility.Add(\"btnAbout\", \"click\", function(oEvent) { Plex.Navigate(\"http://www.plex.com\", { ShowDefaultWaitMessage:true }); });\n</script>\n\n        <div class=\"ToolbarButton\">\n\t<a id=\"btnHelp\" class=\"Button HelpButton light-blue\" onclick=\"return false;\" onmouseover=\"window.status='Show Help for this Page'; return true;\" onmouseout=\"window.status='';\" title=\"Show Help for this Page\" href=\"javascript:void(0);\"><span id=\"btnHelp_Label\">Help</span></a>\n</div><script type=\"text/javascript\">\nPlex.EventUtility.Add(\"btnHelp\", \"click\", function(oEvent) { Plex.Navigate(\"../../Platform/Login/Help.aspx\", { ShowDefaultWaitMessage:true }); });\n</script>\n\n        <div class=\"ToolbarButton\">\n\t<a id=\"btnSetup\" class=\"Button PcSetupButton green\" onclick=\"return false;\" onmouseover=\"window.status=''; return true;\" onmouseout=\"window.status='';\" href=\"javascript:void(0);\"><span id=\"btnSetup_Label\">PC Setup</span></a>\n</div><script type=\"text/javascript\">\nPlex.EventUtility.Add(\"btnSetup\", \"click\", function(oEvent) { Plex.Navigate(\"../../Platform/Login/PCSetup.aspx\", { ShowDefaultWaitMessage:true }); });\n</script>\n\n        <div class=\"ToolbarButton\">\n\t<a id=\"btnIAM\" class=\"Button IamButton green\" onclick=\"return false;\" onmouseover=\"window.status=''; return true;\" onmouseout=\"window.status='';\" href=\"javascript:void(0);\"><span id=\"btnIAM_Label\">IAM</span></a>\n</div><script type=\"text/javascript\">\nPlex.EventUtility.Add(\"btnIAM\", \"click\", function(oEvent) { Plex.Navigate(\"../../../signon\", { ShowDefaultWaitMessage:true }); });\n</script>\n\n      </div>\n      <div id=\"ActionToolbar\" class=\"ActionToolbarSection\"></div>\n      <div id=\"MenuToolbar\" class=\"MenuToolbarSection\">\n        <div id=\"toolbarLogo\" class=\"LoginToolbarLogo\"></div>\n      </div>\n    </div>\n\n    <form name=\"thisForm\" method=\"post\" action=\"https://www.plexonline.com/Modules/SystemAdministration/Login/Index.aspx\" id=\"thisForm\">\n<div>\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwUKLTE3NjEzNTYzNmRk8CIvTLuCNK+cztf7g87IssBYkmE=\">\n</div>\n\n      \n\n        <div class=\"LoginForm\">\n          <div class=\"LoginBody\">\n            <div id=\"divLoginLogo\" class=\"LoginLogo\"></div>\n              \n              <!-- normal login interface -->\n              <div class=\"SectionFieldSet\">\n                <div class=\"FormFieldPair\" style=\"width: 325px;\">\n                  <div class=\"LoginLabel\" style=\"width: 123px;\">\n                    <span id=\"lblUserID\">User ID</span>:\n                  </div>\n                  <div class=\"LoginControl\">\n                    <input name=\"txtUserID\" type=\"text\" maxlength=\"50\" size=\"20\" id=\"txtUserID\">\n                  </div>\n                </div>\n                <div class=\"FormFieldPair\" style=\"width: 325px;\">\n                  <div class=\"LoginLabel\" style=\"width: 123px;\">\n                    <span id=\"lblPassword\">Password</span>:\n                  </div>\n                  <div class=\"LoginControl\">\n                    <input name=\"txtPassword\" type=\"password\" maxlength=\"300\" size=\"20\" id=\"txtPassword\">\n                  </div>\n                </div>\n                <div class=\"FormFieldPair\" style=\"width: 325px;\">\n                  <div class=\"LoginLabel\" style=\"width: 123px;\">\n                    <span id=\"lblCompanyCode\">Company Code</span>:\n                  </div>\n                  <div class=\"LoginControl\">\n                    <input name=\"txtCompanyCode\" type=\"text\" maxlength=\"20\" size=\"20\" id=\"txtCompanyCode\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"LoginButtonWrapper\">\n                <a id=\"btnLogin\" class=\"Button LoginButton green\" onclick=\"return false;\" onmouseover=\"window.status=''; return true;\" onmouseout=\"window.status='';\" href=\"javascript:void(0);\"><span id=\"btnLogin_Label\">Login</span></a><script type=\"text/javascript\">\nPlex.EventUtility.Add(\"btnLogin\", \"click\", function(oEvent) { Submit(); });\n</script>\n\n              </div>\n            \n          </div>\n        </div>\n\n        \n          <div class=\"TinyText\">\n            <a href=\"javascript:ForgotPassword();\"><span id=\"lblForgotPassword\" onmouseover=\"window.status='Forgot password'; return true;\" onmouseout=\"window.status='';\">Forgot password</span></a>&nbsp;\n            <a href='javascript:Plex.Navigate(\"../../../Use_Policy.asp\", { ShowDefaultWaitMessage: true });'><span id=\"lblUsePolicy\" onmouseover=\"window.status='Acceptable Use Policy'; return true;\" onmouseout=\"window.status='';\">Acceptable Use Policy</span></a>&nbsp;\n            <a href=\"https://www.plex.com/utility/privacy-policy.html\">Privacy Policy</a>\n          </div>\n        <input name=\"hdnUseSslAfterLogin\" type=\"hidden\" id=\"hdnUseSslAfterLogin\" value=\"1\">\n    <script type=\"text/javascript\">\nfunction GetWebRoot() {\n  return \"https://www.plexonline.com/\";\n}\nfunction GetModulesRoot() {\n  return \"https://www.plexonline.com/Modules/\";\n}\nfunction GetRenderingEngineRoot() {\n  return \"https://www.plexonline.com/Rendering_Engine/\";\n}\n\nPlex.EventUtility.Add(\"txtUserID\", \"keypress\", SubmitOnEnter);\nPlex.EventUtility.Add(\"txtPassword\", \"keypress\", SubmitOnEnter);\nPlex.EventUtility.Add(\"txtCompanyCode\", \"keypress\", SubmitOnEnter);\n</script>\n\n\n<script type=\"text/javascript\">\n//<![CDATA[\nRedirectToFullPage();//]]>\n</script>\n</form>\n  <div class=\"WaitMessageLoadingIcon\" style=\"position: absolute; top: -1000px; left: -1000px; height: 0px; width: 0px;\"></div></div>\n\n\n\n</body>"}
