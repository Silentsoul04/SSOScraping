{"link":"haproxy.org","html":"<head>\n    <title>HAProxy - The Reliable, High Performance TCP/HTTP Load Balancer</title>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\">\n    <meta name=\"keywords\" content=\"haproxy, reliable, secure, load balancer, content\n      switching, reverse proxy, fast, rapide, fiable, repartition de charge\">\n    <meta name=\"description\" content=\"Reliable, High Performance TCP/HTTP Load Balancer\">\n    <style type=\"text/css\">\n      <!--\n      body {\n      \tfont-family: helvetica, arial;\n      \tfont-size: 12px;\n      \tfont-weight: normal;\n      \tcolor: black;\n        xxx-background: url(/img/servers.jpg);\n      }\n\n      td {\n      \tfont-size: 12px;\n      \tline-height: 16px;\n      }\n\n      h1 {\n        font-size: x-large;\n        margin-bottom: 0.5em;\n      }\n\n      h2 {\n      \tfont-family: helvetica, arial;\n      \tfont-size: large;\n      \tfont-weight: bold;\n        font-style: italic;\n      \tcolor: #6020a0;\n        margin-top: 0em;\n        margin-bottom: 0em;\n      }\n\n      h3 {\n      \tfont-family: helvetica, arial;\n      \tfont-size: 16px;\n      \tfont-weight: bold;\n      \tcolor: #B00040;\n\tbackground: #e8e8d0;\n        margin-top: 0em;\n        margin-bottom: 0em;\n      }\n\n      li {\n        xxxmargin-top: 0.25em;\n        margin-top: 0.5em;\n        margin-right: 2em;\n      }\n\n      #mar { color: #a05020; }\n\n      .hr {\n        margin-top: 0.25em;\n        border-color: black;\n        border-bottom-style: solid;\n      }\n\n      -->\n    </style>\n    <script src=\"https://apis.google.com/_/scs/apps-static/_/js/k=oz.gapi.en_US.SLCABaeCDbc.O/m=auth/exm=plusone/rt=j/sv=1/d=1/ed=1/am=AQ/rs=AGLTcCMLkwjFKjbbQHEAkWYM0gtD9xKJJA/cb=gapi.loaded_1\" async=\"\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/plugins/ua/ec.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script src=\"https://apis.google.com/_/scs/apps-static/_/js/k=oz.gapi.en_US.SLCABaeCDbc.O/m=plusone/rt=j/sv=1/d=1/ed=1/am=AQ/rs=AGLTcCMLkwjFKjbbQHEAkWYM0gtD9xKJJA/cb=gapi.loaded_0\" async=\"\"></script><script async=\"\" src=\"https://www.googletagmanager.com/gtm.js?id=GTM-W9N2N3S\"></script><script type=\"text/javascript\" src=\"/size.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"/size.css?800x575\">\n    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-W9N2N3S');</script>\n  <script type=\"text/javascript\" src=\"https://apis.google.com/js/plusone.js\" gapi_processed=\"true\"></script></head>\n\n<!--script src=\"http://cdn.wibiya.com/Loaders/Loader_217126.js\" type=\"text/javascript\"></script -->\n\n<body>\n    <table cols=\"3\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\"><tbody><tr><td>\n    <h1><a href=\"http://www.haproxy.org/\" style=\"text-decoration: none;color: black;\">HAProxy</a></h1>\n    <h2>The Reliable, High Performance TCP/HTTP Load Balancer</h2>\n    </td><td align=\"right\">\n    <img src=\"/img/logo-med.png\">\n    </td>\n\t<td align=\"right\">\n\t&nbsp;&nbsp;Mirror Sites: <a href=\"http://www.haproxy.org/\">Master</a><br>\n\t&nbsp;&nbsp;Language: <a href=\"http://www.haproxy.org/\">English</a><br>\n\t</td>\n\t</tr></tbody></table>\n    <hr width=\"100%\" class=\"hr\">\n\n    <table cols=\"2\" border=\"0\">\n      <tbody><tr valign=\"top\">\n\t<td width=\"160\">\n\t  <!--div style=\"background: #E8E8E8;\"-->\n\t  <h3 style=\"margin-top: 0px;\">Quick links</h3>\n\t    <a href=\"#news\"><b>Quick News</b></a><br>\n\t    <a href=\"/news.html\">Recent News</a><br>\n\n\t    <a href=\"#desc\">Description</a><br>\n\t    <a href=\"#feat\">Main features</a><br>\n\t    <a href=\"#plat\">Supported Platforms</a><br>\n\t    <a href=\"#perf\">Performance</a><br>\n\t    <a href=\"#fiab\">Reliability</a><br>\n\t    <a href=\"#secu\">Security</a><br>\n\n\t    <a href=\"#down\"><b>Download</b></a><br>\n\t    <a href=\"#docs\"><b>Documentation</b></a><br>\n\t    <a href=\"http://demo.haproxy.org/\"><b>Live demo</b></a><br>\n\t    <a href=\"/they-use-it.html\"><b>They use it!</b></a><br>\n\t    <a href=\"#supp\"><b>Commercial Support</b></a><br>\n\t    <a href=\"#cont\">Add-on features</a><br>\n\t    <a href=\"#othe\">Other Solutions</a><br>\n\t    <a href=\"#tact\">Contacts</a><br>\n\t    <a href=\"#link\">External links</a><br>\n\t    <a href=\"http://discourse.haproxy.org/\">Discussions</a><br>\n\t    <a href=\"#tact\"><b>Mailing list</b></a><br>\n\t    <a href=\"/10g.html\"><b>10GbE load-balancing</b> (updated)</a><br>\n\t    <a href=\"/contrib.html\"><b>Contributions</b></a><br>\n\t    <a href=\"/coding-style.html\"><b>Coding style</b></a><br>\n\t    <a href=\"/bugs/index.html\"><b>Known bugs</b></a><br>\n\t    <br>\n\t    <a href=\"http://feurix.org/projects/hatop/\"><b>HATop: Ncurses Interface</b></a><br>\n\t    <a href=\"https://github.com/helpshift/herald\"><b>Herald: load feedback agent</b></a><br>\n\t    <a href=\"https://gitlab.com/aleks001/haproxy\"><b>RHEL-based Docker images</b></a><br>\n\t    <a href=\"https://hub.docker.com/_/haproxy/\"><b>Alpine-based Docker images</b></a><br>\n\t    <a href=\"https://haproxy.debian.net/\"><b>Debian/Ubuntu packages</b></a><br>\n\n\t    <br>\n\t  <div id=\"___plusone_0\" style=\"text-indent: 0px; margin: 0px; padding: 0px; background: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 106px; height: 24px;\"><iframe ng-non-bindable=\"\" frameborder=\"0\" hspace=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" style=\"position: static; top: 0px; width: 106px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;\" tabindex=\"0\" vspace=\"0\" width=\"100%\" id=\"I0_1492996014548\" name=\"I0_1492996014548\" src=\"https://apis.google.com/se/0/_/+1/fastbutton?usegapi=1&amp;origin=https%3A%2F%2Fwww.haproxy.org&amp;url=https%3A%2F%2Fwww.haproxy.org%2F&amp;gsrc=3p&amp;ic=1&amp;jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en_US.SLCABaeCDbc.O%2Fm%3D__features__%2Fam%3DAQ%2Frt%3Dj%2Fd%3D1%2Frs%3DAGLTcCMLkwjFKjbbQHEAkWYM0gtD9xKJJA#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh&amp;id=I0_1492996014548&amp;parent=https%3A%2F%2Fwww.haproxy.org&amp;pfname=&amp;rpctoken=14466331\" data-gapiattached=\"true\" title=\"+1\"></iframe></div><br>\n\t  <hr class=\"hr\">\n\t  <a href=\"http://whos.amung.us/stats/62nl1k3va5id/\"><img src=\"http://whos.amung.us/cwidget/62nl1k3va5id/069ed8fff200.png\" width=\"81\" height=\"29\" border=\"0\" title=\"Click to see how many people are online\"></a> visitors online\n\t  <hr class=\"hr\">\n\t  <center>\n\t    <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=willy%40nerim%2enet&amp;item_name=Willy%20Tarreau&amp;currency_code=USD&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\"><img src=\"img/btn_donate_SM_usd.gif\" border=\"0\" title=\"Make a donation in USD to the project via PayPal\"></a>&nbsp;\n\t    <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=willy%40nerim%2enet&amp;item_name=Willy%20Tarreau&amp;currency_code=EUR&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\"><img src=\"img/btn_donate_SM_eur.gif\" border=\"0\" title=\"Make a donation in EUR to the project via PayPal\"></a><br>\n\t    <i>Thanks for your support !</i><br>\n\t  </center>\n\t  <hr class=\"hr\">\n\t  <center>\n\t    <p><a href=\"/external?link=1\"><img src=\"img/HAProxy_mini_pub.gif\" width=\"160\" border=\"1\" style=\"border-color: green\"></a>\n\t    </p><p><a href=\"/external?link=2\"><img src=\"img/ALOHA_mini_pub.gif\" width=\"160\" border=\"1\" style=\"border-color: green\"></a>\n\t    </p><p><a href=\"/external?link=3\"><img src=\"img/POM_mini_pub.gif\" width=\"160\" border=\"1\" style=\"border-color: green\"></a>\n\t    </p><p><a href=\"http://worldipv6launch.org/\"><img src=\"img/World_IPv6_launch_banner_256.png\" width=\"106\" border=\"0\"></a><br><br>\n\t    <img src=\"http://haproxy.ipv6.1wt.eu/img/ipv6ok.gif\" width=\"200\" height=\"15\" border=\"0\" style=\"background: #ffffff url('/img/ipv6nok.gif') no-repeat center;\"><br>\n\t  </p></center>\n\t  <!--/div-->\n\t</td><td>\n\t</td><td align=\"justify\">\n\n\t  <h3><a name=\"last\">Latest versions</a></h3><a name=\"last\">\n\t  <p>\n\t    <table cols=\"5\" border=\"1\" align=\"center\">\n\t\t<tbody><tr align=\"center\" style=\"font-weight: bold;\"><td>Branch</td><td>Description</td><td>Last version</td><td>Released</td><td>Links</td><td>Notes</td></tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy.git\">Development</a></td>\n\t\t  <td>1.8-dev</td>\n\t\t  <td><a href=\"/download/1.8/src/devel/haproxy-1.8-dev1.tar.gz\">1.8-dev1</a></td>\n\t\t  <td><a href=\"/download/1.8/src/CHANGELOG\"><i>2017/04/03</i></a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy.git\">web</a> / <a href=\"/download/1.8/\">dir</a></td>\n\t\t  <td><i>may be broken</i></td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.7.git\">1.7</a></td>\n\t\t  <td>1.7-stable</td>\n\t\t  <td><a href=\"/download/1.7/src/haproxy-1.7.5.tar.gz\">1.7.5</a></td>\n\t\t  <td><a href=\"/download/1.7/src/CHANGELOG\">2017/04/03</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.7.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.7.git\">web</a> / <a href=\"/download/1.7/\">dir</a></td>\n\t\t  <td>Stable version</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.6.git\">1.6</a></td>\n\t\t  <td>1.6-stable</td>\n\t\t  <td><a href=\"/download/1.6/src/haproxy-1.6.12.tar.gz\">1.6.12</a></td>\n\t\t  <td><a href=\"/download/1.6/src/CHANGELOG\">2017/04/04</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.6.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.6.git\">web</a> / <a href=\"/download/1.6/\">dir</a></td>\n\t\t  <td>Stable version</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.5.git\">1.5</a></td>\n\t\t  <td>1.5-stable</td>\n\t\t  <td><a href=\"/download/1.5/src/haproxy-1.5.19.tar.gz\">1.5.19</a></td>\n\t\t  <td><a href=\"/download/1.5/src/CHANGELOG\">2016/12/25</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.5.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.5.git\">web</a> / <a href=\"/download/1.5/\">dir</a></td>\n\t\t  <td>Stable version</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.4.git\">1.4</a></td>\n\t\t  <td>1.4-stable</td>\n\t\t  <td><a href=\"/download/1.4/src/haproxy-1.4.27.tar.gz\">1.4.27</a></td>\n\t\t  <td><a href=\"/download/1.4/src/CHANGELOG\">2016/03/14</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.4.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.4.git\">web</a> / <a href=\"/download/1.4/\">dir</a></td>\n\t\t  <td>Critical fixes only</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.3.git\">1.3</a></td>\n\t\t  <td>1.3-stable</td>\n\t\t  <td><a href=\"/download/1.3/src/haproxy-1.3.28.tar.gz\">1.3.28</a></td>\n\t\t  <td><a href=\"/download/1.3/src/CHANGELOG\">2016/03/14</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.3.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.3.git\">web</a> / <a href=\"/download/1.3/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.3.git;a=shortlog;h=1.3.15\">1.3.15</a></td>\n\t\t  <td>1.3.15-maint</td>\n\t\t  <td><a href=\"/download/1.3/src/haproxy-1.3.28.tar.gz\">1.3.28.14</a></td>\n\t\t  <td><a href=\"/download/1.3/src/CHANGELOG-1.3.15.X\">2015/02/01</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.3.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.3.git;a=shortlog;h=1.3.15\">web</a> / <a href=\"/download/1.3/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.3.git;a=shortlog;h=1.3.14\">1.3.14</a></td>\n\t\t  <td>1.3.14-maint</td>\n\t\t  <td><a href=\"/download/1.3/src/haproxy-1.3.28.tar.gz\">1.3.28.14</a></td>\n\t\t  <td><a href=\"/download/1.3/src/CHANGELOG-1.3.14.X\">2009/07/27</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.3.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.3.git;a=shortlog;h=1.3.14\">web</a> / <a href=\"/download/1.3/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.2.git\">1.2</a></td>\n\t\t  <td>1.2-stable</td>\n\t\t  <td><a href=\"/download/1.2/src/haproxy-1.2.18.tar.gz\">1.2.18</a></td>\n\t\t  <td><a href=\"/download/1.2/src/CHANGELOG\">2008/05/25</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.2.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.2.git\">web</a> / <a href=\"/download/1.2/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.1.git\">1.1</a></td>\n\t\t  <td>1.1-stable</td>\n\t\t  <td><a href=\"/download/1.1/src/haproxy-1.1.34.tar.gz\">1.1.34</a></td>\n\t\t  <td><a href=\"/download/1.1/src/CHANGELOG\">2006/01/29</a></td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.1.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.1.git\">web</a> / <a href=\"/download/1.1/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t\t<tr align=\"center\">\n\t\t  <td><a href=\"http://git.haproxy.org/?p=haproxy-1.0.git\">1.0</a></td>\n\t\t  <td>1.0-old</td>\n\t\t  <td>1.0.2</td>\n\t\t  <td>2001/12/30</td>\n\t\t  <td><a href=\"http://git.haproxy.org/git/haproxy-1.0.git/\">git</a> / <a href=\"http://git.haproxy.org/?p=haproxy-1.0.git\">web</a> / <a href=\"/download/1.0/\">dir</a></td>\n\t\t  <td>Unmaintained</td>\n\t\t</tr>\n\t    </tbody></table>\n\t  </p><p>\n\t  </p></a><h3><a name=\"last\"></a><a name=\"news\">Quick News</a></h3><a name=\"news\">\n\t  <p>\n\t  <b style=\"background: yellow;\">February 28th, 2017</b> : <i>1.7.3</i>\n         </p><p>\n           </p></a><ul><a name=\"news\">\nHAProxy 1.7.3 was released on 2017-02-28. It fixes a few remaining bugs affecting 1.7, mostly related to DNS, Lua, header rewriting, and compression for the more serious ones. A few other minor issues were addressed. For the details, please check </a><a href=\"https://www.mail-archive.com/haproxy@formilux.org/msg25066.html\">the announcement here</a>. Code and changelog are available <a href=\"/download/1.7/src/\">here</a> as usual.\n           </ul>\n         <p>\n           <b>December 25th, 2016</b> : <i>1.6.11 and 1.5.19</i>\n         </p><p>\n           </p><ul>\nThere was nothing really critical on the 1.6 front but a number of fixes were pending among which some against painful bugs when hitting out of memory conditions. 1.5 had been lagging for quite longer and received fixes against a few risks of crashes when misusing sc_trackers, another rare crash in zlib not happening with slz, some situations where random connections can be frozen during a redispatch, and an issue with gcc 6 where the listening address could be ignored. For more info, you can check the <a href=\"https://www.mail-archive.com/haproxy@formilux.org/msg24440.html\">full 1.6.11 announcement here</a> and the <a href=\"https://www.mail-archive.com/haproxy@formilux.org/msg24441.html\">1.5.19 announcement here</a>.\n<p>\n  Code and changelogs are available <a href=\"/download/1.6/src/\">here for 1.6</a> and <a href=\"/download/1.5/src/\">here for 1.5</a> as usual.\n           </p></ul>\n\t  <p>\n\t    <a href=\"/news.html\"><b><i>Recent news...</i></b></a>\n\t  </p><p>\n\t  </p><h3><a name=\"desc\">Description</a></h3><a name=\"desc\">\n\t  </a><p><a name=\"desc\">\n\t    HAProxy is a free, <b><i>very</i></b> fast and reliable solution offering\n\t    </a><a href=\"http://en.wikipedia.org/wiki/High_availability\">high availability</a>,\n\t    <a href=\"http://en.wikipedia.org/wiki/Load_balancer\">load balancing</a>, and\n\t    proxying for TCP and HTTP-based applications. It is particularly suited for very\n\t    high traffic web sites and powers quite a number of the world's most visited ones.\n\t    Over the years it has become the de-facto standard opensource load balancer, is\n\t    now shipped with most mainstream Linux distributions, and is often deployed by\n\t    default in cloud platforms. Since it does not advertise itself, we only know it's\n\t    used when the <a href=\"/they-use-it.html\">admins report it</a> :-)\n\t  </p><p>\n\t    Its mode of operation makes its integration into existing architectures very easy\n\t    and riskless, while still offering the possibility not to expose fragile web servers\n\t    to the net, such as below :<br>\n\t    </p><center><img src=\"img/haproxy-pmode.png\"></center>\n\n\t  <p>\n\t    We always support at least two active versions in parallel and an extra old\n\t    one in critical fixes mode only. The currently supported versions are :\n\t  </p><ul>\n\t    <li><b>version 1.7</b> : added server hot reconfiguration, content processing agents, multi-type certs, ...\n\t    </li><li><b>version 1.6</b> : added DNS resolution support, HTTP connection multiplexing, full stick-table replication, stateless compression, ...\n\t    </li><li><b>version 1.5</b> : added SSL, IPv6, keep-alive, DDoS protection, ...\n\t    </li><li><b>version 1.4</b> : the most stable version for people who don't need SSL. Still provides client-side keep-alive\n\t    </li><li><b>version 1.3</b> : the old stable version for companies who cannot upgrade for internal policy reasons.\n\t  </li></ul>\n\n\t  <p>\n\t    </p><h3><a name=\"feat\">Main features</a></h3><a name=\"feat\">\n\t  <p>\n\n\t    Each version brought its set of features on top of the previous one.\n\t    Upwards compatibility is a very important aspect of HAProxy, and even\n\t    version 1.5 is able to run with configurations made for version 1.0 13\n\t    years before. Version 1.6 dropped a few long-deprecated keywords and\n\t    suggests alternatives. The most differenciating features of each version\n\t    are listed below :\n\t    </p><ul>\n\t      <li><b>version 1.5</b>, released in 2014\n\t\tThis version further expands 1.4 with 4 years of hard work :\n\t\t<b id=\"mar\">native SSL</b> support on both sides with SNI/NPN/ALPN and OCSP stapling,\n\t\t<b id=\"mar\">IPv6</b> and UNIX sockets are supported everywhere,\n\t\t<b id=\"mar\">full HTTP keep-alive</b> for better support of NTLM and improved efficiency in static farms,\n\t\t<b id=\"mar\">HTTP/1.1 compression</b> (deflate, gzip) to save bandwidth,\n\t\t<b id=\"mar\">PROXY protocol</b> versions 1 and 2 on both sides,\n\t\t<b id=\"mar\">data sampling</b> on everything in request or response, including payload,\n\t\t<b id=\"mar\">ACLs</b> can use any matching method with any input sample\n\t\t<b id=\"mar\">maps</b> and dynamic ACLs <b>updatable</b> from the CLI\n\t\t<b id=\"mar\">stick-tables</b> support counters to track activity on any input sample\n\t\t<b id=\"mar\">custom format</b> for logs, unique-id, header rewriting, and redirects,\n\t\t<b id=\"mar\">improved health</b> checks (SSL, scripted TCP, check agent, ...),\n\t\t<b id=\"mar\">much more scalable</b> configuration supports hundreds of thousands of backends and certificates without sweating\n\n\t      </li><li><b>version 1.4</b>, released in 2010\n\t\tThis version has brought its share of new features over 1.3, most of which were long awaited :\n\t\t<b id=\"mar\">client-side keep-alive</b> to reduce the time to load heavy pages for clients over the net,\n\t\t<b id=\"mar\">TCP speedups</b> to help the TCP stack save a few packets per connection,\n\t\t<b id=\"mar\">response buffering</b> for an even lower number of concurrent connections on the servers,\n\t\t<b id=\"mar\">RDP protocol</b> support with server stickiness and user filtering,\n\t\t<b id=\"mar\">source-based stickiness</b> to attach a source address to a server,\n\t\t<b id=\"mar\">a much better stats interface</b> reporting tons of useful information,\n\t\t<b id=\"mar\">more verbose health checks</b> reporting precise statuses and responses in stats and logs,\n\t\t<b id=\"mar\">traffic-based health</b> to fast-fail a server above a certain error threshold,\n\t\t<b id=\"mar\">support for HTTP authentication</b> for any request including stats, with support for password encryption,\n\t\t<b id=\"mar\">server management from the CLI</b> to enable/disable and change a server's weight without restarting haproxy,\n\t\t<b id=\"mar\">ACL-based persistence</b> to maintain or disable persistence based on ACLs, regardless of the server's state,\n\t\t<b id=\"mar\">log analyzer</b> to generate fast reports from logs parsed at 1 Gbyte/s,\n\n\t      </li><li><b>version 1.3</b>, released in 2006\n\t\tThis version has brought a lot of new features and improvements over 1.2, among which\n\t\t<b id=\"mar\">content switching</b> to select a server pool based on any request criteria,\n\t\t<b id=\"mar\">ACL</b> to write content switching rules, wider choice of\n\t\t<b id=\"mar\">load-balancing algorithms</b> for better integration,\n\t\t<b id=\"mar\">content inspection</b> allowing to block unexpected protocols,\n\t\t<b id=\"mar\">transparent proxy</b> under Linux, which allows to directly connect to\n\t\tthe server using the client's IP address, <b id=\"mar\">kernel TCP splicing</b> to forward\n\t\tdata between the two sides without copy in order to reach multi-gigabit data rates,\n\t\t<b id=\"mar\">layered design</b> separating sockets, TCP and HTTP processing for more\n\t\trobust and faster processing and easier evolutions, <b id=\"mar\">fast and fair scheduler</b>\n\t\tallowing better QoS by assigning priorities to some tasks, <b id=\"mar\">session rate limiting</b>\n\t\tfor colocated environments, etc...\n\t    </li></ul>\n\t  <p>\n\t    Version 1.2 has been in production use since 2006 and provided an improved performance level\n\t    on top of 1.1. It is not maintained anymore, as most of its users have switched to 1.3 a long\n\t    time ago. Version 1.1, which has been maintaining critical sites online since 2002, is not\n\t    maintained anymore either. Users should upgrade to 1.4 or 1.5.\n\t  </p><p>\n\t  </p></a><h3><a name=\"feat\"></a><a name=\"plat\">Supported platforms</a></h3><a name=\"plat\">\n\t  <p>\n\t    HAProxy is known to reliably run on the following OS/Platforms :<br>\n\t  </p></a><ul><a name=\"plat\">\n\t    </a><li><a name=\"plat\"> </a><a href=\"http://www.kernel.org/\">Linux 2.4</a> on x86, x86_64, Alpha, Sparc, MIPS, PARISC\n\t    </li><li> <a href=\"http://www.kernel.org/\">Linux 2.6 / 3.x</a> on x86, x86_64, ARM, Sparc, PPC64\n\t    </li><li> <a href=\"http://www.sun.com/software/solaris/\">Solaris 8/9</a> on UltraSPARC 2 and 3\n\t    </li><li> <a href=\"http://www.sun.com/software/solaris/\">Solaris 10</a> on Opteron and UltraSPARC\n\t    </li><li> <a href=\"http://www.freebsd.org/\">FreeBSD 4.10 - 10</a> on x86\n\t    </li><li> <a href=\"http://www.openbsd.org/\">OpenBSD 3.1 to -current</a> on i386, amd64, macppc, alpha, sparc64 and VAX (check the ports)\n\t    </li><li> <a href=\"http://www-03.ibm.com/systems/power/software/aix/about.html\">AIX 5.1 - 5.3</a> on Power™ architecture\n\t  </li></ul>\n\t  <p>\n\t    Highest performance is achieved with modern operating systems supporting scalable polling mechanisms such as \n\t    <a href=\"http://www.xmailserver.org/linux-patches/nio-improve.html\">epoll</a> on Linux 2.6/3.x or <b>kqueue</b>\n\t    on FreeBSD and OpenBSD. This requires haproxy version newer than 1.2.5. Fast data transfers are made possible\n\t    on Linux 3.x using TCP splicing and haproxy 1.4 or 1.5. Forwarding rates of up to 40 Gbps have already been\n\t    achieved on such platforms after a very careful tuning. While Solaris and AIX are supported, they should not\n\t    be used if extreme performance is required.\n\t  </p><p>\n\t    Current typical 1U servers equipped with a dual-core Opteron or Xeon generally\n\t    achieve between 15000 and 40000 hits/s and have no trouble saturating 2 Gbps\n\t    under Linux.\n\t  </p><p>\n\t  </p><h3><a name=\"perf\">Performance</a></h3><a name=\"perf\">\n\t  </a><p><a name=\"perf\">\n\t    Well, since a user's testimony is better than a long demonstration, please take a look at \n\t    </a><a href=\"http://www.ghostwheel.com/merlin/Personal/notes/2007/03/25/200-terabytes-served-in-81-days-247tb-per-day/\"><b>Chris Knight's experience</b></a>\n\t    with <b>haproxy saturating a gigabit fiber in 2007</b> on a video download site. Since then,\n\t    the performance has significantly increased and the hardware has become much more capable, as\n\t    <a href=\"/10g.html\">my experiments</a> with\n\t    <a href=\"http://myri.com/\">Myricom's 10-Gig NICs</a> have shown two years later. Now as of\n\t    2014, 10-Gig NICs are too limited and are hardly suited for 1U servers since they do rarely\n\t    provide enough port density to reach speeds above 40-60 Gbps in a 1U server. 100-Gig NICs\n\t    are coming and I expect to run new series of tests when they are available.\n\t  </p><p>\n\t    HAProxy involves several techniques commonly found in Operating Systems\n\t    architectures to achieve the absolute maximal performance :\n\t  </p><ul>\n\t    <li>a single-process, <a href=\"http://en.wikipedia.org/wiki/Event_driven\">\n\t\t<b>event-driven</b></a> model considerably reduces the cost of\n\t      <a href=\"http://en.wikipedia.org/wiki/Context_switch\"><b>context switch</b></a>\n\t      and the memory usage. Processing several hundreds of tasks in a millisecond is\n\t      possible, and the memory usage is in the order of a few kilobytes per session\n\t      while memory consumed in preforked or threaded servers is more in the order of\n\t      megabytes per process.\n\t    </li><li><b>O(1) event checker</b> on systems that allow it (Linux and FreeBSD)\n\t      allowing instantaneous detection of any event on any connection among tens of\n\t      thousands.\n\t    </li><li><b>Delayed updates</b> to the event checker using a lazy event cache ensures\n\t      that we never update an event unless absolutely required. This saves a lot of\n\t      system calls.\n\t    </li><li><b>Single-buffering</b> without any data copy between reads and writes whenever\n\t      possible. This saves a lot of CPU cycles and useful memory bandwidth. Often,\n\t      the bottleneck will be the I/O busses between the CPU and the network\n\t      interfaces. At 10-100 Gbps, the memory bandwidth can become a bottleneck too.\n\t    </li><li><b>Zero-copy forwarding</b> is possible using the <tt>splice()</tt> system\n\t      call under Linux, and results in real zero-copy starting with Linux 3.5. This\n\t      allows a small sub-3 Watt device such as a Seagate Dockstar to forward HTTP\n\t      traffic at one gigabit/s.\n\t    </li><li><a href=\"http://en.wikipedia.org/wiki/Page_replacement_algorithms\">MRU</a>\n\t      memory allocator using fixed size <b>memory pools</b> for immediate memory\n\t      allocation favoring hot cache regions over cold cache ones. This dramatically\n\t      reduces the time needed to create a new session.\n\t    </li><li><b>Work factoring</b>, such as multiple <b><tt>accept()</tt></b> at once, and\n\t      the ability to limit the number of <b><tt>accept()</tt></b> per iteration when\n\t      running in multi-process mode, so that the load is evenly distributed among\n\t      processes.\n\t    </li><li><b>CPU-affinity</b> is supported when running in multi-process mode, or simply\n\t      to adapt to the hardware and be the closest possible to the CPU core managing the\n\t      NICs while not conflicting with it.\n\t    </li><li><b>Tree-based storage</b>, making heavy use of the <a href=\"http://1wt.eu/articles/ebtree/\">Elastic Binary tree</a> I have\n\t      been developping for several years. This is used to keep timers ordered, to keep\n\t      the runqueue ordered, to manage round-robin and least-conn queues, to look up ACLs\n\t      or keys in tables, with only an O(log(N)) cost.\n\t    </li><li><b>Optimized timer queue</b> : timers are not moved in the tree if they are\n\t      postponed, because the likeliness that they are met is close to zero since they're\n\t      mostly used for timeout handling. This further optimizes the ebtree usage.\n\t    </li><li>optimized <b>HTTP header analysis</b> : headers are parsed an interpreted on\n\t      the fly, and the parsing is optimized to avoid an re-reading of any previously\n\t      read memory area. Checkpointing is used when an end of buffer is reached with\n\t      an incomplete header, so that the parsing does not start again from the\n\t      beginning when more data is read. Parsing an average HTTP request typically\n\t      takes half a microsecond on a fast Xeon E5.\n\t    </li><li>careful reduction of the <b>number of expensive system calls</b>. Most of the\n\t      work is done in user-space by default, such as time reading, buffer aggregation,\n\t      file-descriptor enabling/disabling.\n\t    </li><li>Content analysis is optimized to carry only pointers to original data and\n\t      never copy unless the data needs to be transformed. This ensures that very\n\t      small structures are carried over and that contents are never replicated when\n\t      not absolutely necessary.\n\t  </li></ul>\n\t  <p>\n\t    All these micro-optimizations result in very low CPU usage even on moderate\n\t    loads. And even at very high loads, when the CPU is saturated, it is quite common\n\t    to note figures like <b>5% user</b> and <b>95% system</b>, which means that the\n\t    HAProxy process consumes about 20 times less than its system counterpart. This\n\t    explains <b>why the tuning of the Operating System is very important</b>. This\n\t    is the reason why we ended up building\n\t    <a href=\"https://www.haproxy.com/products/main-features-of-aloha-load-balancers/\">our own appliances</a>,\n\t    in order to save that complex and critical task from the end-user.\n\t  </p><p>\n\t    In production, HAProxy has been installed several times as an <b>emergency solution</b>\n\t    when very expensive, high-end <b>hardware load balancers suddenly failed</b> on Layer 7\n\t    processing. Some hardware load balancers still do not use proxies and process requests\n\t    at the <b>packet level</b> and have a great difficulty at supporting\n\t    <b>requests across multiple packets</b> and <b>high response\n\t      times</b> because they do <b>no buffering at all</b>. On the\n\t    other side, <b>software load balancers</b> use <b>TCP buffering</b>\n\t    and are insensible to long requests and high response times. A\n\t    <b>nice side effect</b> of <b>HTTP buffering</b> is that it\n\t    <b>increases the server's connection acceptance</b> by reducing the\n\t    session duration, which <b>leaves room for new requests</b>.\n\t  </p><p>\n\t    There are 3 important factors used to measure a load balancer's performance :\n\t  </p><ul>\n\t    <li><b>The session rate</b><br>\n\t      This factor is very important, because it directly determines when the load\n\t      balancer will not be able to distribute all the requests it receives. It is\n\t      mostly dependant on the CPU.\n\t      Sometimes, you will hear about requests/s or hits/s, and they are the same as\n\t      sessions/s in <tt><b>HTTP/1.0</b></tt> or <tt><b>HTTP/1.1</b></tt> with\n\t      <b>keep-alive</b> disabled. Requests/s with keep-alive enabled is generally much\n\t      higher (since it significantly reduces system-side work) but is often meaningless\n\t      for internet-facing deployments since clients often open a large amount of connections\n\t      and do not send many requests per connection on avertage. This factor is\n\t      measured with varying object sizes, the fastest results generally coming from\n\t      empty objects (eg: <tt>HTTP 302, 304</tt> or <tt>404</tt> response codes).\n\t      Session rates around <b>100,000 sessions/s</b> can be achieved on Xeon E5\n\t      systems in 2014.\n\t    </li><li><b>The session concurrency</b><br>\n\t      This factor is tied to the previous one. Generally, the session rate\n\t      will drop when the number of concurrent sessions increases (except with the\n\t      <tt><b>epoll</b></tt> or <tt><b>kqueue</b></tt> polling mechanisms). The slower\n\t      the servers, the higher the number of concurrent sessions for a same session rate.\n\t      If a load balancer receives 10000 sessions per second and the servers respond in\n\t      100 ms, then the load balancer will have 1000 concurrent sessions. This number is\n\t      limited by the amount of memory and the amount of file-descriptors the system can\n\t      handle. With 16 kB buffers, HAProxy will need about 34 kB per session, which\n\t      results in around <b>30000 sessions per GB</b> of RAM. In practise, socket\n\t      buffers in the system also need some memory and 20000 sessions per GB of RAM is\n\t      more reasonable. Layer 4 load balancers generally announce <b>millions of\n\t      simultaneous sessions</b> because they need to deal with the TIME_WAIT sockets\n\t      that the system handles for free in a proxy. Also they don't process any data\n\t      so they don't need any buffer. Moreover, they are sometimes designed to be used\n\t      in <b>Direct Server Return</b> mode, in which the load balancer only sees forward\n\t      traffic, and which forces it to keep the sessions for a long time after their end\n\t      to avoid cutting sessions before they are closed.\n\n\t    </li><li><b>The data forwarding rate</b><br>\n\t      This factor generally is at the opposite of the session rate. It is measured\n\t      in Megabytes/s (MB/s), or sometimes in Gigabits/s (Gbps). Highest data rates\n\t      are achieved with large objects to minimise the overhead caused by session\n\t      setup and teardown. Large objects generally increase session concurrency, and\n\t      high session concurrency with high data rate requires large amounts of memory\n\t      to support large windows. High data rates burn a lot of CPU and bus cycles on\n\t      software load balancers because the data has to be copied from the input\n\t      interface to memory and then back to the output device. Hardware load balancers\n\t      tend to directly switch packets from input port to output port for higher data\n\t      rate, but cannot process them and sometimes fail to touch a header or a cookie.\n\t      Haproxy on a typical Xeon E5 of 2014 can forward data up to about <b>40 Gbps</b>.\n\t      A fanless 1.6 GHz Atom CPU is slightly above 1 Gbps.\n\t  </li></ul>\n\t  <p>\n\t    A load balancer's <b>performance</b> related to these factors is generally announced <b>for\n\t    the best case</b> (eg: empty objects for session rate, large objects for data rate).\n\t    This is not because of lack of honnesty from the vendors, but because it is not\n\t    possible to tell exactly how it will behave in every combination. So when those 3\n\t    limits are known, the customer should be aware that it will generally <b>perform below\n\t    all</b> of them. A good rule of thumb on software load balancers is to consider an\n\t    average practical performance of <b>half of maximal</b> session and data rates for\n\t    average sized objects.\n\t  </p><p>\n\t    You might be interested in checking the <a href=\"/10g.html\">10-Gigabit/s page</a>.\n\t  </p><p>\n\t  </p><h3><a name=\"fiab\">Reliability - <i>keeping high-traffic sites online since 2002</i></a></h3><a name=\"fiab\">\n\t  <p>\n\t    Being obsessed with reliability, I tried to do my best to ensure a <b>total\n\t    continuity of service</b> by design. It's more difficult to design something\n\t    reliable from the ground up in the short term, but in the long term it reveals\n\t    easier to maintain than broken code which tries to hide its own bugs behind\n\t    respawning processes and tricks like this.\n\t  </p><p>\n\t    In <b>single-process</b> programs, you have no right to fail : the smallest bug\n\t    will either crash your program, make it spin like mad or freeze. There has not\n\t    been any such bug found in stable versions for the <b>last 13 years</b>, though\n\t    it happened a few times with development code running in production.\n\t  </p><p>\n\t    HAProxy has been installed on Linux 2.4 systems <b>serving millions of pages\n\t      every day</b>,\n\t    and which have only known <b>one reboot in 3 years</b> for a complete OS upgrade.\n\t    Obviously, they were not directly exposed to the Internet because they did not receive\n\t    any patch at all. The kernel was a heavily patched 2.4 with Robert Love's\n\t    <tt>jiffies64</tt> patches to support time wrap-around at 497 days (which\n\t    happened twice). On such systems, the software cannot fail without being\n\t    immediately noticed !\n\t  </p><p>\n\t    Right now, it's being used in many Fortune 500 companies around the world to\n\t    reliably serve billions of pages per day or relay huge amounts of money. Some\n\t    people even trust it so much that they use it as the default solution to solve\n\t    simple problems (and I often tell them that they do it the dirty way). Such\n\t    people sometimes still use versions 1.1 or 1.2 which sees very limited evolutions\n\t    and which targets mission-critical usages. HAProxy is really suited for such environments\n\t    because the indicators it returns provide a lot of valuable information about the application's\n\t    health, behaviour and defects, which are used to make it even more reliable.\n\t    Version 1.3 has now received far more testing than 1.1 and 1.2 combined, so\n\t    users are strongly encouraged to migrate to a stable 1.3 or 1.4 for mission-critical\n\t    usages.\n\t  </p><p>\n\t    As previously explained, most of the work is executed by the Operating System.\n\t    For this reason, a large part of the reliability involves the OS itself. Latest\n\t    versions of Linux 2.4 have been known for offering the highest level of stability\n\t    ever. However, it requires a bunch of patches to achieve a high level of performance,\n\t    and this kernel is really outdated now so running it on recent hardware will often\n\t    be difficult (though some people still do). Linux 2.6 and 3.x include the features\n\t    needed to achieve this level of performance, but old LTS versions only should be\n\t    considered for really stable operations without upgrading more than once a year.\n\t    Some people prefer to run it on Solaris (or do not have the choice). Solaris 8 and\n\t    9 are known to be really stable right now, offering a level of performance comparable\n\t    to legacy Linux 2.4 (without the epoll patch). Solaris 10 might show performances\n\t    closer to early Linux 2.6. FreeBSD shows good performance but <b>pf</b> (the firewall)\n\t    eats half of it and needs to be disabled to come close to Linux. OpenBSD sometimes\n\t    shows socket allocation failures due to sockets staying in <tt>FIN_WAIT2</tt> state\n\t    when client suddenly disappears. Also, I've noticed that hot reconfiguration does\n\t    not work under OpenBSD.\n\t  </p><p>\n\t    The reliability can significantly decrease when the system is pushed to its\n\t    limits. This is why finely tuning the <tt>sysctls</tt> is important. There is no\n\t    general rule, every system and every application will be specific. However, it is\n\t    important to ensure that the system will <b>never run out of memory</b> and\n\t    that it will <b>never swap</b>. A correctly tuned system must be able to run for\n\t    years at full load without slowing down nor crashing.\n\t  </p><p>\n\t  </p></a><h3><a name=\"fiab\"></a><a name=\"secu\">Security - <i>Not even one intrusion in 13 years</i></a></h3><a name=\"secu\">\n\t  <p>\n\t    Security is an important concern when deploying a software load balancer. It is\n\t    possible to harden the OS, to limit the number of open ports and accessible\n\t    services, but the load balancer itself stays exposed. For this reason, I have been\n\t    very careful about programming style. Vulnerabilities are very rarely encountered\n\t    on haproxy, and its architecture significantly limits their impact and often allows\n\t    easy workarounds. Its remotely unpredictable even processing makes it very hard to\n\t    reliably exploit any bug, and if the process ever crashes, the bug is discovered.\n\t    All of them were discovered by reverse-analysis of an accidental crash BTW.\n\t  </p><p>\n\t    Anyway, much care is taken when writing code to manipulate headers. Impossible\n\t    state combinations are checked and returned, and errors are processed from the\n\t    creation to the death of a session. A few people around the world have reviewed\n\t    the code and suggested cleanups for better clarity to ease auditing. By the way,\n\t    I'm used to refuse patches that introduce suspect processing or in which not\n\t    enough care is taken for abnormal conditions.\n\t  </p><p>\n\t    I generally suggest <b>starting</b> HAProxy as <b><tt>root</tt></b> because it\n\t    can then jail itself in a <b>chroot</b> and <b>drop all of its privileges</b>\n\t    before starting the instances. This is not possible if it is not started as\n\t    <tt>root</tt> because only <tt>root</tt> can execute <b><tt>chroot()</tt></b>,\n\t    contrary to what some admins believe.\n\t  </p><p>\n\t    Logs provide a lot of information to help maintain a satisfying security\n\t    level. They are commonly sent over <tt>UDP</tt> because once chrooted, the\n\t    <tt>/dev/log</tt> UNIX socket is unreachable, and it must not be possible to\n\t    write to a file. The following information are particularly useful :\n\t  </p><ul>\n\t    <li><b>source IP and port</b> of requestor make it possible to find their origin\n\t      in firewall logs ;\n\t    </li><li>session <b>set up</b> date generally matches firewall logs, while <b>tear\n\t\tdown</b> date often matches proxies dates ;\n\t    </li><li>proper <b>request encoding</b> ensures the requestor cannot hide\n\t      non-printable characters, nor fool a terminal.\n\t    </li><li>arbitrary request and response <b>header and cookie capture</b> help to\n\t      detect scan attacks, proxies and infected hosts.\n\t    </li><li><b>timers</b> help to differentiate hand-typed requests from browsers's.\n\t  </li></ul>\n\t  </a><p><a name=\"secu\">\n\t    HAProxy also provides <b>regex-based header control</b>. Parts of the request, as\n\t    well as request and response headers can be <b>denied</b>, <b>allowed</b>, <b>removed</b>, <b>rewritten</b>, or\n\t    <b>added</b>. This is commonly used to block dangerous requests or encodings (eg: the\n\t    </a><a href=\"http://www.cert.org/advisories/CA-2002-17.html\">Apache Chunk exploit</a>),\n\t    and to <b>prevent accidental information leak</b> from the server to the client.\n\t    Other features such as <b><tt>Cache-control</tt> checking</b> ensure that no sensible\n\t    information gets accidentely cached by an upstream proxy consecutively to a bug in\n\t    the application server for example.\n\t  </p><p>\n\t  </p><h3><a name=\"down\">Download</a></h3><a name=\"down\">\n\t  <p>\n\t    The source code is covered by GPL v2. Source code and pre-compiled binaries for\n\t    Linux/x86 and Solaris/Sparc can be downloaded right here for some old versions :\n\t  </p></a><ul><a name=\"down\">\n\t    </a><li><a name=\"down\"> <b>Development version (1.8)</b> :\n\t      </a><ul><a name=\"down\">\n\t\t</a><li><a name=\"down\"> </a><a href=\"#doc1.8\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.8/\">Browse directory</a> for docs, sources and binaries\n\t\t</li><li> <a href=\"/download/1.8/src/snapshot/\">Daily snapshots</a> are built once a day when the GIT repository changes\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Latest version (1.7)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.7\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.7/src/CHANGELOG\">Release Notes</a> for version 1.7.5\n\t\t</li><li> <a href=\"/download/1.7/src/haproxy-1.7.5.tar.gz\">haproxy-1.7.5.tar.gz</a>\n\t\t    (<a href=\"/download/1.7/src/haproxy-1.7.5.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li> <a href=\"/download/1.7/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Previous version (1.6)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.6\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.6/src/CHANGELOG\">Release Notes</a> for version 1.6.12\n\t\t</li><li> <a href=\"/download/1.6/src/haproxy-1.6.12.tar.gz\">haproxy-1.6.12.tar.gz</a>\n\t\t    (<a href=\"/download/1.6/src/haproxy-1.6.12.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li> <a href=\"/download/1.6/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Previous version (1.5)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.5\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.5/src/CHANGELOG\">Release Notes</a> for version 1.5.19\n\t\t</li><li> <a href=\"/download/1.5/src/haproxy-1.5.19.tar.gz\">haproxy-1.5.19.tar.gz</a>\n\t\t    (<a href=\"/download/1.5/src/haproxy-1.5.19.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li> <a href=\"/download/1.5/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Older version (1.4)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.4\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.4/src/CHANGELOG\">Release Notes</a> for version 1.4.27\n\t\t</li><li> <a href=\"/download/1.4/src/haproxy-1.4.27.tar.gz\">haproxy-1.4.27.tar.gz</a>\n\t\t    (<a href=\"/download/1.4/src/haproxy-1.4.27.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li><a href=\"/download/1.4/bin/haproxy-1.4.26-pcre-40kses-linux-i586.stripped.gz\">haproxy-1.4.26-linux-i586.gz</a> :\n\t\t   (<a href=\"/download/1.4/bin/haproxy-1.4.26-pcre-40kses-linux-i586.stripped.gz.md5\">MD5</a>) Linux/i586 executable linked with Glibc 2.2\n\t\t</li><li><a href=\"/download/1.4/bin/haproxy-1.4.26-pcre-solaris-sparc.notstripped.gz\">haproxy-1.4.26-pcre-solaris-sparc.notstripped.gz</a> :\n\t\t   (<a href=\"/download/1.4/bin/haproxy-1.4.26-pcre-solaris-sparc.notstripped.gz.md5\">MD5</a>) Solaris8/Sparc executable\n\t\t</li><li> <a href=\"/download/1.4/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Oldest version (1.3)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.3\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.3/src/CHANGELOG\">Release Notes</a> for version 1.3.28\n\t\t</li><li> <a href=\"/download/1.3/src/haproxy-1.3.28.tar.gz\">haproxy-1.3.28.tar.gz</a>\n\t\t    (<a href=\"/download/1.3/src/haproxy-1.3.28.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li><a href=\"/download/1.3/bin/haproxy-1.3.27-pcre-40kses-splice-linux-i586.stripped.gz\">haproxy-1.3.27-linux-i586.gz</a> :\n\t\t   (<a href=\"/download/1.3/bin/haproxy-1.3.27-pcre-40kses-splice-linux-i586.stripped.gz.md5\">MD5</a>) Linux/i586 executable linked with Glibc 2.2\n\t\t</li><li><a href=\"/download/1.3/bin/haproxy-1.3.27-pcre-solaris-sparc.notstripped.gz\">haproxy-1.3.27-pcre-solaris-sparc.notstripped.gz</a> :\n\t\t   (<a href=\"/download/1.3/bin/haproxy-1.3.27-pcre-solaris-sparc.notstripped.gz.md5\">MD5</a>) Solaris8/Sparc executable\n\t\t</li><li> <a href=\"/download/1.3/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Unmaintained branch (1.2)</b> :\n\t      <ul>\n\t\t<li> <a href=\"#doc1.2\">Documentation</a>\n\t\t</li><li> <a href=\"/download/1.2/src/CHANGELOG\">Release Notes</a> for version 1.2.18\n\t\t</li><li> <a href=\"/download/1.2/src/haproxy-1.2.18.tar.gz\">haproxy-1.2.18.tar.gz</a>\n\t\t    (<a href=\"/download/1.2/src/haproxy-1.2.18.tar.gz.md5\">MD5</a>) : Source code under GPL\n\t\t</li><li><a href=\"/download/1.2/bin/haproxy-1.2.18-linux-i586.gz\"> haproxy-1.2.18-linux-i586.gz</a> :\n\t\t   (<a href=\"/download/1.2/bin/haproxy-1.2.18-linux-i586.gz.md5\">MD5</a>) Linux/i586 executable linked with Glibc 2.2\n\t\t</li><li><a href=\"/download/1.2/bin/haproxy-1.2.18-sol8-ultrasparc-static-pcre.gz\">haproxy-1.2.18-sol8-ultrasparc-static-pcre.gz</a> :\n\t\t   (<a href=\"/download/1.2/bin/haproxy-1.2.18-sol8-ultrasparc-static-pcre.gz.md5\">MD5</a>) Solaris8/Sparc executable\n\t\t</li><li> <a href=\"/download/1.2/\">Browse directory</a> for other files or versions\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <b>Various Patches</b> :\n\t      <ul>\n\t        <li><a href=\"http://www.haproxy.com/download/free/patches/stunnel/\">Some patches for Stunnel</a> by HAProxy Technologies (formerly Exceliance), such X-Forwarded-For, send-proxy, unix-sockets, multi-process SSL session synchronization, transparent binding and performance improvements.\n\t\t</li><li><a href=\"http://www.haproxy.com/download/free/patches/linux/epoll-2.4/\">http://www.haproxy.com/download/free/patches/linux/epoll-2.4/</a> :\n\t\t    kernel patches to enable <tt>epoll</tt> on standard Linux 2.4 kernels and on Red Hat Enterprise Linux 3.\n\t\t</li><li> <a href=\"http://www.haproxy.com/download/free/\">HAProxy Technologies' public patch repository</a> for other patches (stud, stunnel, linux, keepalived, ...)\n\t\t</li><li> <a href=\"/download/patches/\">Browse directory</a> for other (outdated) patches.\n\t      </li></ul>\n\t      <p>\n\t    </p></li><li> <a href=\"/download/\">Browsable directory</a> for other files (not only patches)\n\t  </li></ul>\n\t  <p>\n\t  </p><h3><a name=\"docs\">Documentation</a></h3><a name=\"docs\">\n\t  <p>\n\t    There are three types of documentation now : the <b>Reference Manual</b> which explains\n\t    how to configure HAProxy but which is outdated, the <b>Architecture Guide</b> which will\n\t    guide you through various typical setups, and the new <b>Configuration Manual</b> which\n\t    replaces the Reference Manual with more a explicit configuration language explanation. The\n\t    official documentation is the pure-text one provided with the sources. However, Cyril\n\t    Bonté's automated conversion to HTML is much easier to use and constantly up to date,\n\t    so it is the preferred one when available.\n\t  </p></a><ul><a name=\"docs\">\n\t    </a><a name=\"doc1.7\"></a>\n\t    <li>Reference Manual for version <b>1.7</b> (<i>devel</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.7/intro.html\">Starter guide in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.7/configuration.html\">Configuration Manual in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.7/management.html\">Management Guide in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://www.arpalert.org/src/haproxy-lua-api/1.7dev/index.html\">Lua reference manual in HTML</a> (up to date, maintained by Thierry Fournier)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://www.arpalert.org/haproxy-lua.html\">Lua Architecture in HTML</a> (up to date, maintained by Thierry Fournier)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.7/doc/intro.txt\"><tt>intro.txt</tt></a> : Starter guide in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.7/doc/management.txt\"><tt>management.txt</tt></a> : Management guide in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.7/doc/configuration.txt\"><tt>configuration.txt</tt></a> : Configuration Manual in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.7/doc/\"><tt>Browsable directory</tt></a> : <i>Various other docs and diagrams</i>\n\t      </li></ul>\n\t    <a name=\"doc1.6\"></a>\n\t    </li><li>Reference Manual for version <b>1.6</b> (<i>stable</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.6/intro.html\">Starter guide in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.6/configuration.html\">Configuration Manual in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.6/management.html\">Management Guide in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://www.arpalert.org/src/haproxy-lua-api/1.6/index.html\">Lua reference manual in HTML</a> (up to date, maintained by Thierry Fournier)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://www.arpalert.org/haproxy-lua.html\">Lua Architecture in HTML</a> (up to date, maintained by Thierry Fournier)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.6/doc/intro.txt\"><tt>intro.txt</tt></a> : Starter guide in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.6/doc/configuration.txt\"><tt>configuration.txt</tt></a> : Configuration Manual in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.6/doc/management.txt\"><tt>management.txt</tt></a> : Management guide in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.6/doc/\"><tt>Browsable directory</tt></a> : <i>Various other docs and diagrams</i>\n\t      </li></ul>\n\t    <a name=\"doc1.5\"></a>\n\t    </li><li>Reference Manual for version <b>1.5</b> (<i>stable</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.5/configuration.html\">Configuration Manual in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.5/doc/configuration.txt\"><tt>configuration.txt</tt></a> : Configuration Manual in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.5/doc/\"><tt>Browsable directory</tt></a> : <i>Various other docs and diagrams</i>\n\t      </li></ul>\n\t    <a name=\"doc1.4\"></a>\n\t    </li><li>Reference Manual for version <b>1.4</b> (<i>stable</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://cbonte.github.io/haproxy-dconv/1.4/configuration.html\">Configuration Manual in HTML</a> (up to date, maintained by Cyril Bonté)\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.4/doc/configuration.txt\"><tt>configuration.txt</tt></a> : Configuration Manual in text format\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.4/doc/\"><tt>Browsable directory</tt></a> : <i>Various other docs and diagrams</i>\n\t      </li></ul>\n\t    <a name=\"doc1.3\"></a>\n\t    </li><li>Reference Manual for version <b>1.3</b> (<i>stable</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.3/doc/configuration.txt\"><tt>configuration.txt</tt></a> : Configuration Manual\n\t        </li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.3/doc/architecture.txt\"><tt>architecture.txt</tt></a> : Architecture Guide\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.3/doc/haproxy-en.txt\"><tt>haproxy-en.txt</tt></a> : <i>old English version, outdated</i>\n\t\t</li><li><img src=\"img/fr-off.png\" border=\"0/\"> <a href=\"/download/1.3/doc/haproxy-fr.txt\"><tt>haproxy-fr.txt</tt></a> : <i>old French version, outdated</i>\n\t\t</li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.3/doc/\"><tt>Browsable directory</tt></a> : <i>Various other docs and diagrams</i>\n\t      </li></ul>\n\t    <a name=\"doc1.2\"></a>\n\t    </li><li>Reference Manual for version <b>1.2</b> (<i>old stable</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.2/doc/haproxy-en.txt\"><tt>haproxy-en.txt</tt></a> : <i>English version</i>\n\t\t</li><li><img src=\"img/fr-off.png\" border=\"0/\"> <a href=\"/download/1.2/doc/haproxy-fr.txt\"><tt>haproxy-fr.txt</tt></a> : <i>French version</i>\n\t      </li></ul>\n\t    </li><li>Reference Manual for version <b>1.1</b> (<i>unmaintained</i>) :<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.1/doc/haproxy-en.txt\"><tt>haproxy-en.txt</tt></a> : <i>English version</i>\n\t\t</li><li><img src=\"img/fr-off.png\" border=\"0/\"> <a href=\"/download/1.1/doc/haproxy-fr.txt\"><tt>haproxy-fr.txt</tt></a> : <i>French version</i>\n\t      </li></ul>\n\t    </li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"/download/1.2/doc/architecture.txt\"><tt>architecture.txt</tt></a> : Architecture Guide\n\t    </li><li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://1wt.eu/articles/2006_lb/\">Article on Load Balancing</a> (<i>HTML version</i>) : worth reading for people who don't know what type of load balancer they need<ul>\n\t\t<li><img src=\"img/en-off.png\" border=\"0/\"> <a href=\"http://static.1wt.eu/img/articles/2006_lb/art-2006-wta-lb-en.pdf\">PDF version (English)</a>\n\t\t</li><li><img src=\"img/fr-off.png\" border=\"0/\"> <a href=\"http://static.1wt.eu/img/articles/2006_lb/art-2006-wta-lb-fr.pdf\">PDF version (French)</a>\n\t     </li></ul>\n\t  </li></ul>\n\t  <p>\n\t    In addition to Cyril's HTML converter above, an automated format converter is being developed by Pavel Lang. At the time of writing these lines, it is able to produce a PDF from the documentation, and some heavy work is ongoing to support other output formats. Please consult the\n\t    <a href=\"https://github.com/langpavel/haproxy-doc\">project's page</a> for more information.\n\t    <a href=\"https://github.com/langpavel/haproxy-doc/blob/master/version-1-5/tex/configuration.pdf?raw=true\">Here's an example</a>\n\t    of what it is able to do on version 1.5 configuration manual.\n\t  </p>\n\t  <p>\n\t  </p><h3><a name=\"supp\">Commercial Support and availability</a></h3><a name=\"supp\">\n\t  <p>\n\t    If you think you don't have the time and skills to setup and maintain a free load\n\t    balancer, or if you're seeking for commercial support to satisfy your customers or\n\t    your boss, you have the following options :\n\t    </p></a><ol><a name=\"supp\">\n\t      </a><li><a name=\"supp\">contact </a><a href=\"https://www.haproxy.com/services/haproxy-professional-services/\">HAProxy Technologies</a>\n\t\tto hire some professional services or subscribe a support contract ;\n\t      </li><li>install <a href=\"https://www.haproxy.com/products/haproxy-enterprise-edition/\">HAProxy Enterprise Edition (HAPEE)</a>,\n\t\twhich is a long-term maintained HAProxy package accompanied by a well-polished collection of software, scripts,\n\t\tconfiguration files and documentation which significantly simplifies the setup and maintenance of a completely\n\t\toperational solution ; it is particularly suited to <b>Cloud environments</b> where deployments must be fast.\n\t      </li><li>try an <a href=\"https://www.haproxy.com/products/main-features-of-aloha-load-balancers/\">ALOHA appliance</a>\n\t\t(hardware or virtual), which will even save you from having to worry about the system, hardware and from managing a Unix-like\n\t\tsystem.\n\t    </li></ol>\n\t    I also find it important to credit <a href=\"http://www.loadbalancer.org/\"><b>Loadbalancer.org</b></a>. I am\n\t    not affiliated with them at all but like us, they have contributed a fair amount of time and money to the\n\t    project to add new features and they help users on the mailing list, so I have some respect for what they\n\t    do. They're a UK-based company and their load balancer also employs HAProxy, though it is somewhat different\n\t    from the ALOHA.\n\t  <p>\n\t  </p><h3><a name=\"cont\">Add-on features and contributions</a></h3><a name=\"cont\">\n\t  <p>\n\t    Some happy users have contributed code which may or may not be included. Others\n\t    spent a long time analysing the code, and there are some who maintain ports up to\n\t    date. The most difficult internal changes have been contributed in the form of\n\t    paid time by some big customers who can afford to pay a developer for several\n\t    months working on an opensource project. Unfortunately some of them do not want\n\t    to be listed, which is the case for the largest of them.\n\t  </p><p>\n\t    Some contributions were developped and not merged, most often by lack of sign of\n\t    interest from the users or simply because they overlap with some pending changes\n\t    in a way that could make it harder to maintain future compatibility.\n\t    </p></a><ul><a name=\"cont\">\n\t      <li><b>Geolocation support</b></li>\n\t      <p>\n\t\tQuite some time ago now, Cyril Bonté contacted me about a very interesting\n\t\tfeature he has developped, initially for 1.4, and which now supports both 1.4\n\t\tand 1.5. This feature is Geolocation, which many users have been asking for\n\t\tfor a long time, and this one does not require to split the IP files by country\n\t\tcodes. In fact it's extremely easy and convenient to configure.\n\t      </p><p>\n\t\tThe feature was not merged yet because it does for a specific purpose (GeoIP)\n\t\twhat we wanted to have for a more general use (map converters, session variables,\n\t\tand use of variables in the redirect URLs), which will allow the same features to\n\t\tbe implemented with more flexibility (eg: extract the IP from a header, or pass\n\t\tthe country code and/or AS number to a backend server, etc...). Cyril was very\n\t\treceptive to these arguments and accepted to maintain his patchset out of tree\n\t\twaiting for the features to be implemented (<i><b>Update:</b> 1.5-dev20 with\n\t\tmaps now make this possible</i>). Cyril's code is well maintained and used in\n\t\tproduction so there is no risk in using it on 1.4, except the fact that the\n\t\tconfiguration statements will change a bit once you upgrade to 1.5.\n\t      </p></a><p><a name=\"cont\">\n\t\tThe code and documentation are available here : </a><a href=\"https://github.com/cbonte/haproxy-patches/wiki/Geolocation\">https://github.com/cbonte/haproxy-patches/wiki/Geolocation</a>\n\t      </p><p>\n\t\t</p><li><b>sFlow support</b></li>\n\t      <p>\n\t\tNeil Mckee posted a patch to the list in early 2013, and unfortunately this patch\n\t\tdid not receive any sign of interest nor feedback, which is sad considering the\n\t\tamount of work that was done. I personally am clueless about sFlow and expressed\n\t\tmy skepticism to Neil about the benefits of sampling some HTTP traffic when you\n\t\tcan get much more detailed informations for free with existing logs.\n\t      </p><p>\n\t\tNeil kindly responded with the following elements :\n\t\t</p><ul><i>\n\t\t  I agree that the logging you already have in haproxy is more flexible and detailed,\n\t\t  and I acknowledge that the benefit of exporting sFlow-HTTP records is not immediately\n\t\t  obvious.\n\t\t  <p>\n\t\t  The value that sFlow brings is that the measurements are standard,  and are designed to\n\t\t  integrate seamlessly with sFlow feeds from switches, routers, servers and applications to\n\t\t  provide a comprehensive end to end picture of the performance of large scale multi-tier\n\t\t  systems.   So the purpose is not so much to troubleshoot haproxy in isolation, but to\n\t\t  analyze the performance of the whole system that haproxy is part of.\n\t\t  </p><p>\n\t\t  Perhaps the best illustration of this is the 1-in-N sampling feature.\n\t\t  If you configure sampling.http to be, say, 1-in-400 then you might\n\t\t  only see a handful of sFlow records per second from an haproxy\n\t\t  instance, but that is enough to tell you a great deal about what is\n\t\t  going on -- in real time.  And the data will not bury you even if you\n\t\t  have a bank of load-balancers, hundreds of web-servers, a huge\n\t\t  memcache-cluster and a fast network interconnect all contributing\n\t\t  their own sFlow feeds to the same analyzer.\n\t\t  </p></i><p><i>\n\t\t</i></p></ul>\n\t      <p>\n\t\tEven after that explanation, no discussion emerged on the subject on the list, so\n\t\tI guess there is little interest among users for now. I suspect that sFlow is\n\t\tprobably more deployed among network equipments than application layer equipments,\n\t\twhich could explain this situation. The code is large (not huge though) and I am not\n\t\tconvinced about the benefits of merging it and maintaining it if nobody shows even\n\t\ta little bit of interest. Thus for now I prefer to leave it out of tree. Neil has\n\t\tposted it on GitHub here :\n\t\t<a href=\"https://github.com/sflow/haproxy\">https://github.com/sflow/haproxy</a>.\n\t      </p><p>\n\t\tPlease, if you do use this patch, report your feedback to the mailing list, and invest\n\t\tsome time helping with the code review and testing.\n\t      </p><p>\n\t    </p></ul>\n\t  <p>\n\t    <a href=\"/contrib.html\">This table</a> enumerates all known significant contributions that\n\t    led to version 1.4, as well as proposed fundings and features yet to be developped but\n\t    waiting for spare time. It is not more up to date though.\n\t  </p><p>\n\t    Some older code contributions which possibly do not appear in the table above are still listed here.\n\t  </p><ul>\n\t    <li><b>Application Cookies</b>\n\t      <p>\n\t\tAleksandar Lazic and Klaus Wagner implemented this feature which\n\t\twas merged in 1.2. It allows the proxy to learn cookies sent by the server\n\t\tto the client, and to find it back in the URL to direct the client to the right\n\t\tserver. The learned cookies are automatically purged after some inactive time.\n\t      </p><p>\n\t    </p></li><li><b>Least Connections load balancing algorithm</b>\n\t      <p>\n\t\tThis patch for haproxy-1.2.14 was submitted by Oleksandr Krailo. It implements\n\t\ta basic least connection algorithm. I've not merged this version into 1.3 because\n\t\tof scalability concerns, but I'm leaving it here for people who are tempted to\n\t\tinclude it into version 1.2, and the patch is really clean.\n\t      </p><ul>\n\t\t<a href=\"/download/patches/haproxy-1.2.14-leastconn.diff\">haproxy-1.2.14-leastconn.diff</a>\n\t      </ul>\n\t      <p>\n\t    </p></li><li><b>Soft Server-Stop</b>\n\t      <p>\n\t\tAleksandar Lazic sent me this patch against 1.1.28 which in fact does two things.\n\t\tThe first interesting part allows one to write a file enumerating servers which\n\t\twill have to be stopped, and then sending a signal to the running proxy to tell\n\t\tit to re-read the file and stop using these servers. This will not be merged into\n\t\tmainline because it has indirect implications on security since the running\n\t\tprocess will have to access a file on the file-system, while current version can\n\t\trun in a chrooted, empty, read-only directory. What is really needed is a way to\n\t\tsend commands to the running process. However, I understand that some people\n\t\tmight need this feature, so it is provided here. The second part of the patch has\n\t\tbeen merged. It allowed both an active and a backup server to share a same\n\t\tcookie. This may sound obvious but it was not possible earlier.\n\t      </p><ul>\n\t\t<a href=\"/download/patches/haproxy_comafile+multi-cookie.diff\">\n\t\t  haproxy_comafile+multi-cookie.diff</a>\n\t      </ul>\n\t      <p>\n\t\t<b>Usage:</b> Aleks says that you just have to write the server names that you\n\t\twant to stop in the file, then <tt>kill -USR2</tt> the running process. I have\n\t\tnot tested it though.\n\t      </p><p>\n\t    </p></li><li><b>Server Weight</b>\n\t      <p>\n\t\tSébastien Brize sent me this patch against 1.1.27 which adds the\n\t\t'weight' option to a server to provide smoother balancing between fast and slow\n\t\tservers. It is available here because there may be other people looking for this\n\t\tfeature in version 1.1.<br><br>\n\t\tI did not include this change because it has a side effect that with\n\t\thigh or unequal weights, some servers might receive lots of consecutive\n\t\trequests. A different concept to provide a smooth and fair\n\t\tbalancing has been implemented in 1.2.12, which also supports\n\t\tweighted hash load balancing.\n\t      </p><ul>\n\t\t  <a href=\"/download/patches/patch-haproxy-1.1.27-weight\">\n\t\t    patch-haproxy-1.1.27-weight</a>\n\t      </ul>\n\t      <p>\n\t\t<b>Usage:</b> specify \"<tt>weight X</tt>\" on a server line.<br>\n\t\t<b>Note:</b> configurations written with this patch applied will normally still\n\t\twork with future 1.2 versions.\n\t      </p><p>\n\t    </p></li><li> <b>IPv6 support for 1.1.27</b>\n\t      <p>\n\t\tI implemented IPv6 support on client side for 1.1.27, and merged it into\n\t\thaproxy-1.2. Anyway, the patch is still provided here for people who want to\n\t\texperiment with IPv6 on HAProxy-1.1.\n\t      </p><ul>\n\t        <a href=\"/download/patches/haproxy-1.1.27-ipv6.diff\">haproxy-1.1.27-ipv6.diff</a>\n\t      </ul>\n\t      <p>\n\t    </p></li><li><b>Other patches</b>\n\t      <p>\n\t\tPlease <a href=\"/download/patches/\">browse the directory</a> for other useful\n\t\tcontributions.\n      \t      </p><p>\n\t  </p></li></ul>\n\t  <p>\n\t  </p><h3><a name=\"othe\">Other Solutions</a></h3><a name=\"othe\">\n\t  <p>\n\t    If you don't need all of HAProxy's features and are looking for a simpler solution,\n\t    you may find what you need here :\n\t  </p></a><ul><a name=\"othe\">\n\t    </a><li><a name=\"othe\"></a><a href=\"http://www.linuxvirtualserver.org/\">\n\t\t<b>Linux Virtual Servers (LVS)</b></a><br>\n\t      Very fast layer 3/4 load balancing merged in Linux 2.4 and 2.6 kernels. Should\n\t      be coupled with <a href=\"http://www.keepalived.org/\">Keepalived</a> to monitor\n\t      servers. This generally is the solution embedded by default in most\n\t      IP-based load balancers.\n\t      \n\t    </li><li><a href=\"http://nginx.org/\">\n\t\t<b>Nginx (\"engine X\")</b></a><br>\n\t      Nginx is an excellent piece of software. Initially it's a very fast and reliable\n\t      web server, but it has grown into a full-featured proxy which can also offer\n\t      load-balancing capabilities. Nginx's load balancing features are less advanced\n\t      than haproxy's but it can do extra things (eg: caching, running FCGI apps), which\n\t      explains why they are very commonly found together. I strongly recommend it to\n\t      whoever needs a fast, reliable and flexible web server !\n\n\t    </li><li><a href=\"http://www.apsis.ch/pound\">\n\t\t<b>Pound</b></a><br>\n\t      Pound is very small and reasonably good. It aims at remaining small and auditable\n\t      prior to being fast. It used to support SSL and keep-alive before HAProxy. Its\n\t      configuration file is small and simple. It's thread-based, but can be a simpler\n\t      alternative to HAProxy for a small site when the flexibility and performance of\n\t      HAProxy are not required.\n\t    </li><li><a href=\"http://siag.nu/pen/\">\n\t\t<b>Pen</b></a><br>\n\t      Pen is a very simple load balancer for TCP protocols. It supports source IP-based\n\t      persistence for up to 2048 clients. Supports IP-based ACLs. Uses <tt>select()</tt>\n\t      and supports higher loads than Pound but will not scale very well to thousands of\n\t      simultaneous connections. It's more versatile however, and could be considered as\n\t      the missing link between HAProxy and socat.\n\t  </li></ul>\n\t  <p>\n\t  </p><h3><a name=\"tact\">Contacts</a></h3><a name=\"tact\">\n\t  <p>\n\t    Feel free to contact us for any questions or comments :<br>\n\t  </p></a><ul><a name=\"tact\">\n\t    </a><li><a name=\"tact\"> mailing-list :\n\t      <script type=\"text/javascript\">\n\t\t<!-- \n\t\tdocument.write('<a href=\"mailto:hapro');\n\t\tdocument.write('xy@formilux.org\">hapro');\n\t\tdocument.writeln('xy@formilux.org</a>');\n\t\t-->\n\t      </script></a><a href=\"mailto:haproxy@formilux.org\">haproxy@formilux.org</a>\n\n\t      <br>\n\t      Read the list <a href=\"https://www.mail-archive.com/haproxy@formilux.org/\">archives on mail-archive</a><br>\n\t      Read the list <a href=\"http://marc.info/?l=haproxy\">archives on Marc.info</a><i>(temporarily broken)</i><br>\n\t      Read the list <a href=\"http://news.gmane.org/gmane.comp.web.haproxy\">archives on gmane.org</a><i>(temporarily broken)</i><br>\n\t      <br>\n\t      Subscribe to the list :\n\t      <script type=\"text/javascript\">\n\t\t<!-- \n\t\tdocument.write('<a href=\"mailto:hapro');\n\t\tdocument.write('xy+subs');document.write('cribe@formilux.org\">hapro');\n\t\tdocument.write('xy+subs');document.writeln('cribe@formilux.org</a>');\n\t\t-->\n\t      </script><a href=\"mailto:haproxy+subscribe@formilux.org\">haproxy+subscribe@formilux.org</a>\n\n\t      <br>\n\t      Unsubscribe from the list :\n\t      <script type=\"text/javascript\">\n\t\t<!-- \n\t\tdocument.write('<a href=\"mailto:hapro');\n\t\tdocument.write('xy+unsubs');document.write('cribe@formilux.org\">hapro');\n\t\tdocument.write('xy+unsubs');document.writeln('cribe@formilux.org</a>');\n\t\t-->\n\t      </script><a href=\"mailto:haproxy+unsubscribe@formilux.org\">haproxy+unsubscribe@formilux.org</a>\n\n\t    </li><li> Willy' main site : <a href=\"http://1wt.eu/\">http://1wt.eu/</a>\n\t      <a href=\"/\"><img src=\"img/pwby.gif\" border=\"0\" align=\"center\" alt=\"powered by HAPROXY\"></a>\n\t    </li><li> This site in IPv6 only : <a href=\"http://ipv6.haproxy.org/\">http://ipv6.haproxy.org/</a>\n\t\t(should be OK if you see a <font color=\"green\">green</font> square here ⇒ \n\t      <img src=\"http://ipv6.haproxy.org/img/ipv6ready.png\" width=\"8\" height=\"8\" border=\"0\" style=\"background: url(/img/ipv6back.png) no-repeat bottom;\">)\n\t    </li><li> e-mail : \n\t      <script type=\"text/javascript\">\n\t\t<!-- \n\t\tdocument.write('<a href=\"mailto:w');\n\t\tdocument.write('@1wt.eu\">w@');\n\t\tdocument.writeln('1wt.eu</a>');\n\t\t-->\n\t      </script><a href=\"mailto:w@1wt.eu\">w@1wt.eu</a>\n\n\t  </li></ul>\n\t  <p>\n\t  Some people regularly ask if it is possible to send donations, so I have set up a Paypal account for this.\n\t  <b><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=willy%40nerim%2enet&amp;lc=FR&amp;item_name=Willy%20Tarreau&amp;currency_code=EUR&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\">Click here</a></b> if you want to donate.\n\t  </p><p>\n\t  An IRC channel for haproxy has been opened on FreeNode (but don't seek me there, I'm not) :<br>\n\t</p><ul>\n\t  <a href=\"irc://irc.gnu.org/%23haproxy\">irc://irc.gnu.org/%23haproxy</a>\n\t</ul>\n\t  <p>\n\t  </p><h3><a name=\"link\">External links</a></h3><a name=\"link\">\n\t  <p>\n\t  Here are some links to possibly useful external contents I gathered on the net.\n\t  I have found most of them due to their link to haproxy's site ;-)\n\t</p></a><ul><a name=\"link\">\n\t</a><li><a name=\"link\"></a><a href=\"https://medium.com/vimeo-engineering-blog/improving-load-balancing-with-a-new-consistent-hashing-algorithm-9f1bd75709ed\">Improving load balancing with a new consistent-hashing algorithm</a>\n\t</li><li><a href=\"https://github.com/janeczku/haproxy-acme-validation-plugin\">ACME validation plugin for HAProxy / Let's Encrypt</a>\n\t</li><li><a href=\"https://www.linangran.com/?p=547\">Use HAProxy to load balance 300k concurrent tcp socket connections</a>\n\t</li><li><a href=\"https://software.intel.com/en-us/articles/accelerating-ssl-load-balancers-with-intel-xeon-v3-processors\">Accelerating SSL Load Balancers with Intel® Xeon® v3 Processors</a>\n\t</li><li><a href=\"https://www.privateinternetaccess.com/blog/2016/01/linux-networking-stack-from-the-ground-up-part-1/\">Linux networking stack from the ground up (parts 1-5)</a> (useful to whoever wants to know what happens below haproxy)\n\t</li><li><a href=\"https://z0z0.me/create-your-own-cdn-with-haproxy-and-varnish/\">Loadbalance your website with haproxy and varnish</a>\n\t</li><li><a href=\"http://www.slideshare.net/NicolasBrousse/usenix-lisa15-how-tubemogul-handles-over-one-trillion-http-requests-a-month\">How TubeMogul Handles over One Trillon HTTP Requests a Month</a>\n\t</li><li><a href=\"http://47ron.in/blog/2015/10/23/haproxy-in-the-era-of-microservices.html\">HAProxy in the era of Microservices</a>\n\t</li><li><a href=\"https://www.percona.com/blog/2014/12/18/making-haproxy-1-5-replication-lag-aware-in-mysql/\">Making HAProxy 1.5 replication lag aware in MySQL</a>\n\t</li><li><a href=\"https://www.maxcdn.com/blog/haproxy-load-balancing/\">MaxCDN: How to Use HAProxy to Handle Traffic Spikes</a>\n\t</li><li><a href=\"https://www.varnish-cache.org/docs/trunk/phk/ssl_again.html\">Varnish, SSL and HAProxy</a>\n\t</li><li><a href=\"http://engineeringblog.yelp.com/2015/04/true-zero-downtime-haproxy-reloads.html\">True Zero Downtime HAProxy Reloads</a>\n\t</li><li><a href=\"http://thenewstack.io/haproxy-still-an-arrow-in-the-quiver-for-those-scaling-apps/\">HAProxy Is Still An Arrow in the Quiver for Those Scaling Apps</a>\n\t</li><li><a href=\"http://www.severalnines.com/blog/webinar-replay-slides-how-set-sql-load-balancing-haproxy\">How To Set Up SQL Load Balancing with HAProxy (Webinar)</a>\n\t</li><li><a href=\"http://www.youtube.com/watch?v=iFj--qiJRPo&amp;feature=youtu.be&amp;t=40m35s\">HAProxy running on Ubuntu Cloud on Power8, featured by Mark Shuttleworth at IBM Impact 2014 Keynote</a>\n\t</li><li><a href=\"http://jve.linuxwall.info/ressources/taf/haproxy-aws/\">Guidelines for HAProxy termination in AWS</a>\n\t</li><li><a href=\"http://www.youtube.com/watch?v=i5KhNJIQBO0\">Marcus Rueckert's talk at osc14</a>\n\t</li><li><a href=\"http://brokenhaze.com/blog/2014/03/25/how-stack-exchange-gets-the-most-out-of-haproxy/\">How Stack Exchange gets the most out of HAProxy</a>\n\t</li><li><a href=\"http://blog.loadbalancer.org/open-source-windows-service-for-reporting-server-load-back-to-haproxy-load-balancer-feedback-agent/\">Open Source Windows service for reporting server load back to HAProxy (load balancer feedback agent).</a>\n\t</li><li><a href=\"http://harish11g.blogspot.fr/2013/08/Load-balancing-Amazon-RDS-MySQL-read-replica-slaves-using-HAProxy.html\">Load Balancing Amazon RDS Read Replica's using HAProxy</a>\n\t</li><li><a href=\"http://www.dscentral.in/2012/11/04/installing-haproxy-on-pfsense/\">Installing HAProxy on pfSense</a>\n\t</li><li><a href=\"http://www.severalnines.com/resources/clustercontrol-mysql-haproxy-load-balancing-tutorial\">MySQL Load Balancing with HAProxy - Tutorial</a>\n\t</li><li><a href=\"https://github.com/eucalyptus/architecture/blob/master/features/elb/3.3/elb-benchmark.wiki\">HAProxy vs Nginx benchmark for the Eucalyptus Cloud computing Platform</a>\n\t</li><li><a href=\"http://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx/\">WebSocket Over SSL: HAProxy, Node.js, Nginx</a>\n\t</li><li><a href=\"http://harish11g.blogspot.fr/2012/11/amazon-elb-vs-haproxy-ec2-analysis.html\">Comparison Analysis:Amazon ELB vs HAProxy EC2</a>\n\t</li><li><a href=\"http://www.igvita.com/2012/10/31/simple-spdy-and-npn-negotiation-with-haproxy/\">Simple SPDY and NPN Negotiation with HAProxy</a>\n\t</li><li><a href=\"http://tech.shareaholic.com/2012/10/26/haproxy-a-substitute-for-amazon-elb\">Using HAProxy to Build a More Featureful Elastic Load Balancer</a>\n\t</li><li><a href=\"http://blog.silverbucket.net/post/31927044856/3-ways-to-configure-haproxy-for-websockets\">3 ways to configure haproxy for websockets</a>\n\t</li><li><a href=\"http://blog.bitbucket.org/2012/08/24/segregating-services/\">Segregating services at bitbucket</a>\n\t</li><li><a href=\"http://ben.timby.com/?page_id=210\">Load balancing FTP, by Ben Timby</a>\n\t</li><li><a href=\"http://robert.penz.name/386/howto-setup-a-haproxy-as-fault-tolerant-high-available-load-balancer-for-multiple-caching-web-proxies-on-rhelcentossl/comment-page-1/#comment-1064\">Howto setup a haproxy as fault tolerant / high available load balancer for multiple caching web proxies on RHEL/Centos/SL</a>\n\t</li><li><a href=\"http://www.slideshare.net/ricbartm/load-balancing-at-tuenti\">Load balancing @Tuenti, by Ricardo Bartolomé</a>\n\t</li><li><a href=\"http://blog.exceliance.fr/2011/09/16/benchmarking_ssl_performance/\">Benchmarking SSL performance</a>\n\t</li><li><a href=\"http://alohalb.wordpress.com/2011/06/17/smart_content_switching_for_news_website/\">Smart Content Switching for News Website</a>\n\t</li><li><a href=\"http://3-4-5-6.blogspot.com/2011/03/ha-proxy-for-exchange-2010-deployment.html\">HA Proxy for Exchange 2010 Deployment &amp; SMTP Restriction</a>\n\t</li><li><a href=\"http://flavio.tordini.org/a-more-stable-mysql-with-haproxy/comment-page-1\">A more stable MySQL with HAProxy</a>\n\t</li><li><a href=\"http://equima.pfpfree.net/2010/benchmarking-haproxy-ubuntu-vs-freebsd/\">Benchmarking HAProxy under VMware : Ubuntu vs FreeBSD</a>\n\t</li><li><a href=\"http://blog.serverfault.com/post/1016491873/\">Stack Overflow: Better rate limiting for all with HAProxy</a>\n\t</li><li><a href=\"http://blog.rightscale.com/2010/04/01/benchmarking-load-balancers-in-the-cloud/\">Benchmarking Load Balancers in the Cloud</a>\n\t</li><li><a href=\"http://www.alexwilliams.ca/blog/2009/08/10/using-haproxy-for-mysql-failover-and-redundancy/\">Using HAProxy for MySQL failover and redundancy</a>\n\t</li><li><a href=\"http://www.howtoforge.com/setting-up-a-high-availability-load-balancer-with-haproxy-keepalived-on-debian-lenny\">Setting up a high availability load blancer with haproxy and keepalived on debian lenny</a>\n\t</li><li><a href=\"http://blog.loadbalancer.org/configure-haproxy-with-tproxy-kernel-for-full-transparent-proxy/\">Configure HAProxy with TPROXY kernel for full transparent proxy</a>\n\t</li><li><a href=\"http://www.lastengine.com/99/installing-haproxy-load-balancing-for-http-and-https/\">Installing HAProxy load-balancing for HTTP and HTTPS</a>\n\t</li><li><a href=\"http://agiletesting.blogspot.com/2009/03/haproxy-x-forwarded-for-geoip-keepalive.html\">HAProxy, X-Forwarded-For, GeoIP, KeepAlive</a>\n\t</li><li><a href=\"http://agiletesting.blogspot.com/2009/02/load-balancing-in-amazon-ec2-with.html\">Load Balancing in Amazon EC2 with HAProxy</a>\n\t</li><li><a href=\"http://www.joeandmotorboat.com/2009/01/27/couchdb-load-balancing-and-replication-using-haproxy/\">CouchDB Load Balancing and Replication using HAProxy</a>\n\t</li><li><a href=\"http://www.igvita.com/2008/12/02/zero-downtime-restarts-with-haproxy/\">Zero-Downtime restarts with HAProxy</a>\n\t</li><li><a href=\"http://www.olivepeak.com/blog/posts/read/free-your-port-80-with-haproxy\">Free your port 80 with HAProxy</a>\n\t</li><li><a href=\"http://affectioncode.wordpress.com/2008/06/28/another-comparison-of-haproxy-and-nginx/\">Another comparison of HAProxy and Nginx</a>\n\t</li><li><a href=\"http://blog.webmynd.com/2008/06/23/scaling-on-ec2/\">Scaling on EC2</a>\n\t</li><li><a href=\"http://alword.wordpress.com/2008/06/14/haproxy-on-opensolaris-200805/\">HAProxy on Opensolaris 2008.05</a>\n\t</li><li><a href=\"http://www.igvita.com/2008/05/13/load-balancing-qos-with-haproxy/\">Load-Balancing and QoS with HAProxy</a>\n\t</li><li><a href=\"http://blog.hungrymachine.com/2008/03/27/analyzing-application-performance-with-haproxy-stats/\">Reviewing Application Health with HAProxy Stats</a>\n\t</li><li><a href=\"http://www.crium.univ-metz.fr/docs/system/drbd/haproxy.html\">Installation de HAProxy + Heartbeat sous Debian (FR)</a>\n\t</li></ul>\n\t  <hr width=\"100%\" class=\"hr\">\n\t</td><td width=\"1%\">\n\t</td></tr>\n    </tbody></table>\n<br>\n\n<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n  ga('create', 'UA-62865082-3', 'auto');\n  ga('send', 'pageview');\n</script>\n\n<iframe name=\"oauth2relay704636293\" id=\"oauth2relay704636293\" src=\"https://accounts.google.com/o/oauth2/postmessageRelay?parent=https%3A%2F%2Fwww.haproxy.org&amp;jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en_US.SLCABaeCDbc.O%2Fm%3D__features__%2Fam%3DAQ%2Frt%3Dj%2Fd%3D1%2Frs%3DAGLTcCMLkwjFKjbbQHEAkWYM0gtD9xKJJA#rpctoken=392595719&amp;forcesecure=1\" tabindex=\"-1\" aria-hidden=\"true\" style=\"width: 1px; height: 1px; position: absolute; top: -100px;\"></iframe></body>"}
