{"link":"ecobank.com","html":"<head><meta charset=\"utf-8\"><meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"><meta property=\"fb:app_id\" content=\"1004553932967992\"><meta property=\"og:type\" content=\"website\"><meta property=\"og:url\" content=\"https://www.ecobank.com/personal-banking\"><meta property=\"og:title\" content=\"\n    Ecobank - The Pan African Bank\n\"><meta property=\"og:image\" content=\"https://ecobank.com/img/eco/eco_logo_blue.jpg\"><meta content=\"A regional commercial bank operating in many African countries.\" name=\"description\"><meta property=\"og:description\" content=\"A regional commercial bank operating in many African countries.\"><meta name=\"twitter:card\" content=\"summary\"><meta name=\"twitter:site\" content=\"Ecobank\"><meta name=\"twitter:description\" content=\"A regional commercial bank operating in many African countries.\"><meta name=\"twitter:image:src\" content=\"https://ecobank.com/img/eco/eco_logo_blue.jpg\"><meta name=\"twitter:creator\" content=\"Ecobank\"><meta name=\"twitter:title\" content=\"\n    Ecobank - The Pan African Bank\n\"><meta name=\"twitter:domain\" content=\"https://www.ecobank.com/personal-banking\">\n\n<title>\n    Ecobank - The Pan African Bank\n</title>\n<script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">var ie = (function () {\n    var undef, v = 3, div = document.createElement('div');\n\n    while (\n        div.innerHTML = '<!--[if gt IE '+(++v)+']><i></i><![endif]-->',\n        div.getElementsByTagName('i')[0]\n    );\n\n    return v > 4 ? v : undef;\n}());\nvar android=(function(){\nvar ua = navigator.userAgent;\nvar androidversion=undefined;\nif( ua.indexOf(\"Android\") >= 0 )  androidversion= parseFloat(ua.slice(ua.indexOf(\"Android\")+8)); \nreturn androidversion;\n}());\nif (ie<= 8 || android<2.3) location.href=\"https://browser-update.org/en/update.html\"\n</script><script type=\"text/javascript\">/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,aa=/[+~]/,ba=/'|\\\\/g,ca=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),da=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(ba,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",ea,!1):e.attachEvent&&e.attachEvent(\"onunload\",ea)),p=!f(g),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ca,da),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){\nreturn M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,ba=/<([\\w:]+)/,ca=/<|&#?\\w+;/,da=/<(?:script|style|link)/i,ea=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fa=/^$|\\/(?:java|ecma)script/i,ga=/^true\\/(.*)/,ha=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ia={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function ka(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,\"script\"),g.length>0&&ma(g,!i&&oa(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(ba.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),\"script\"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(aa,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,\"script\"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),\"none\"!==c&&c||(qa=(qa||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Ba=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Ca={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Da={letterSpacing:\"0\",fontWeight:\"400\"},Ea=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Ha(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ia(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",ta(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),\"normal\"===e&&b in Da&&(e=Da[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xa,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pa=/queueHooks$/,Qa=[Va],Ra={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||ta(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?ta(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta(\"show\"),slideUp:Ta(\"hide\"),slideToggle:Ta(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),\nvoid 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ab,\" \").indexOf(b)>=0)return!0;return!1}});var bb=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cb=n.now(),db=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\\/\\//,kb=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lb={},mb={},nb=\"*/\".concat(\"*\"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:\"GET\",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+\"\").replace(eb,\"\").replace(jb,pb[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pb[3]||(\"http:\"===pb[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,\"$1_=\"+cb++):d+(db.test(d)?\"&\":\"?\")+\"_=\"+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nb+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\\[\\]$/,xb=/\\r?\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ab(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\"&\").replace(vb,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,\"\\r\\n\")}}):{name:b.name,value:c.replace(xb,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&\"withCredentials\"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cb[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fb.pop()||n.expando+\"_\"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gb.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});\n//# sourceMappingURL=jquery.min.map</script><script type=\"text/javascript\">!function(a){function b(){return new Date(Date.UTC.apply(Date,arguments))}var c=function(b,c){var f=this;this.element=a(b),this.autoShow=void 0==c.autoShow||c.autoShow,this.appendTo=c.appendTo||\"body\",this.closeButton=c.closeButton,this.language=c.language||this.element.data(\"date-language\")||\"en\",this.language=this.language in d?this.language:this.language.split(\"-\")[0],this.language=this.language in d?this.language:\"en\",this.isRTL=d[this.language].rtl||!1,this.format=e.parseFormat(c.format||this.element.data(\"date-format\")||d[this.language].format||\"mm/dd/yyyy\"),this.formatText=c.format||this.element.data(\"date-format\")||d[this.language].format||\"mm/dd/yyyy\",this.isInline=!1,this.isInput=this.element.is(\"input\"),this.component=!!this.element.is(\".date\")&&this.element.find(\".prefix, .postfix\"),this.hasInput=this.component&&this.element.find(\"input\").length,this.disableDblClickSelection=c.disableDblClickSelection,this.onRender=c.onRender||function(){},this.component&&0===this.component.length&&(this.component=!1),this.linkField=c.linkField||this.element.data(\"link-field\")||!1,this.linkFormat=e.parseFormat(c.linkFormat||this.element.data(\"link-format\")||\"yyyy-mm-dd hh:ii:ss\"),this.minuteStep=c.minuteStep||this.element.data(\"minute-step\")||5,this.pickerPosition=c.pickerPosition||this.element.data(\"picker-position\")||\"bottom-right\",this.initialDate=c.initialDate||null,this.faCSSprefix=c.faCSSprefix||\"fa\",this.leftArrow=c.leftArrow||'<i class=\"'+this.faCSSprefix+\" \"+this.faCSSprefix+'-chevron-left fi-arrow-left\"/>',this.rightArrow=c.rightArrow||'<i class=\"'+this.faCSSprefix+\" \"+this.faCSSprefix+'-chevron-right fi-arrow-right\"/>',this.closeIcon=c.closeIcon||'<i class=\"'+this.faCSSprefix+\" \"+this.faCSSprefix+\"-remove \"+this.faCSSprefix+'-times fi-x\"></i>',this.minView=0,\"minView\"in c?this.minView=c.minView:\"minView\"in this.element.data()&&(this.minView=this.element.data(\"min-view\")),this.minView=e.convertViewMode(this.minView),this.maxView=e.modes.length-1,\"maxView\"in c?this.maxView=c.maxView:\"maxView\"in this.element.data()&&(this.maxView=this.element.data(\"max-view\")),this.maxView=e.convertViewMode(this.maxView),this.startViewMode=\"month\",\"startView\"in c?this.startViewMode=c.startView:\"startView\"in this.element.data()&&(this.startViewMode=this.element.data(\"start-view\")),this.startViewMode=e.convertViewMode(this.startViewMode),this.viewMode=this.startViewMode,\"minView\"in c||\"maxView\"in c||this.element.data(\"min-view\")&&!this.element.data(\"max-view\")||(this.pickTime=!1,\"pickTime\"in c&&(this.pickTime=c.pickTime),1==this.pickTime?(this.minView=0,this.maxView=4):(this.minView=2,this.maxView=4)),this.forceParse=!0,\"forceParse\"in c?this.forceParse=c.forceParse:\"dateForceParse\"in this.element.data()&&(this.forceParse=this.element.data(\"date-force-parse\")),this.picker=a(e.template(this.leftArrow,this.rightArrow,this.closeIcon)).appendTo(this.isInline?this.element:this.appendTo).on({click:a.proxy(this.click,this),mousedown:a.proxy(this.mousedown,this)}),this.closeButton?this.picker.find(\"a.datepicker-close\").show():this.picker.find(\"a.datepicker-close\").hide(),this.isInline?this.picker.addClass(\"datepicker-inline\"):this.picker.addClass(\"datepicker-dropdown dropdown-menu\"),this.isRTL&&(this.picker.addClass(\"datepicker-rtl\"),this.picker.find(\".date-switch\").each(function(){a(this).parent().prepend(a(this).siblings(\".next\")),a(this).parent().append(a(this).siblings(\".prev\"))}),this.picker.find(\".prev, .next\").toggleClass(\"prev next\")),a(document).on(\"mousedown\",function(b){0===a(b.target).closest(\".datepicker.datepicker-inline, .datepicker.datepicker-dropdown\").length&&f.hide()}),this.autoclose=!0,\"autoclose\"in c?this.autoclose=c.autoclose:\"dateAutoclose\"in this.element.data()&&(this.autoclose=this.element.data(\"date-autoclose\")),this.keyboardNavigation=!0,\"keyboardNavigation\"in c?this.keyboardNavigation=c.keyboardNavigation:\"dateKeyboardNavigation\"in this.element.data()&&(this.keyboardNavigation=this.element.data(\"date-keyboard-navigation\")),this.todayBtn=c.todayBtn||this.element.data(\"date-today-btn\")||!1,this.todayHighlight=c.todayHighlight||this.element.data(\"date-today-highlight\")||!1,this.calendarWeeks=!1,\"calendarWeeks\"in c?this.calendarWeeks=c.calendarWeeks:\"dateCalendarWeeks\"in this.element.data()&&(this.calendarWeeks=this.element.data(\"date-calendar-weeks\")),this.calendarWeeks&&this.picker.find(\"tfoot th.today\").attr(\"colspan\",function(a,b){return parseInt(b)+1}),this.weekStart=(c.weekStart||this.element.data(\"date-weekstart\")||d[this.language].weekStart||0)%7,this.weekEnd=(this.weekStart+6)%7,this.startDate=-(1/0),this.endDate=1/0,this.daysOfWeekDisabled=[],this.datesDisabled=[],this.setStartDate(c.startDate||this.element.data(\"date-startdate\")),this.setEndDate(c.endDate||this.element.data(\"date-enddate\")),this.setDaysOfWeekDisabled(c.daysOfWeekDisabled||this.element.data(\"date-days-of-week-disabled\")),this.setDatesDisabled(c.datesDisabled||this.element.data(\"dates-disabled\")),this.fillDow(),this.fillMonths(),this.update(),this.showMode(),this.isInline&&this.show(),this._attachEvents()};c.prototype={constructor:c,_events:[],_attachEvents:function(){this._detachEvents(),this.isInput?this.keyboardNavigation?this._events=[[this.element,{focus:this.autoShow?a.proxy(this.show,this):function(){},keyup:a.proxy(this.update,this),keydown:a.proxy(this.keydown,this)}]]:this._events=[[this.element,{focus:this.autoShow?a.proxy(this.show,this):function(){}}]]:this.component&&this.hasInput?this._events=[[this.element.find(\"input\"),{focus:this.autoShow?a.proxy(this.show,this):function(){},keyup:a.proxy(this.update,this),keydown:a.proxy(this.keydown,this)}],[this.component,{click:a.proxy(this.show,this)}]]:this.element.is(\"div\")?this.isInline=!0:this._events=[[this.element,{click:a.proxy(this.show,this)}]],this.disableDblClickSelection&&(this._events[this._events.length]=[this.element,{dblclick:function(b){b.preventDefault(),b.stopPropagation(),a(this).blur()}}]);for(var b,c,d=0;d<this._events.length;d++)b=this._events[d][0],c=this._events[d][1],b.on(c)},_detachEvents:function(){for(var a,b,c=0;c<this._events.length;c++)a=this._events[c][0],b=this._events[c][1],a.off(b);this._events=[]},show:function(b){this.picker.show(),this.height=this.component?this.component.outerHeight():this.element.outerHeight(),this.update(),this.place(),a(window).on(\"resize\",a.proxy(this.place,this)),b&&(b.stopPropagation(),b.preventDefault()),this.element.trigger({type:\"show\",date:this.date})},hide:function(b){this.isInline||this.picker.is(\":visible\")&&(this.picker.hide(),a(window).off(\"resize\",this.place),this.viewMode=this.startViewMode,this.showMode(),this.isInput||a(document).off(\"mousedown\",this.hide),this.forceParse&&(this.isInput&&this.element.val()||this.hasInput&&this.element.find(\"input\").val())&&this.setValue(),this.element.trigger({type:\"hide\",date:this.date}))},remove:function(){this._detachEvents(),this.picker.remove(),delete this.element.data().datepicker},getDate:function(){var a=this.getUTCDate();return new Date(a.getTime()+6e4*a.getTimezoneOffset())},getUTCDate:function(){return this.date},setDate:function(a){this.setUTCDate(new Date(a.getTime()-6e4*a.getTimezoneOffset()))},setUTCDate:function(a){this.date=a,this.setValue()},setValue:function(){var a=this.getFormattedDate();this.isInput?this.element.val(a):(this.component&&this.element.find(\"input\").val(a),this.element.data(\"date\",a))},getFormattedDate:function(a){return void 0===a&&(a=this.format),e.formatDate(this.date,a,this.language)},setStartDate:function(a){this.startDate=a||-(1/0),this.startDate!==-(1/0)&&(this.startDate=e.parseDate(this.startDate,this.format,this.language)),this.update(),this.updateNavArrows()},setEndDate:function(a){this.endDate=a||1/0,this.endDate!==1/0&&(this.endDate=e.parseDate(this.endDate,this.format,this.language)),this.update(),this.updateNavArrows()},setDaysOfWeekDisabled:function(b){this.daysOfWeekDisabled=b||[],a.isArray(this.daysOfWeekDisabled)||(this.daysOfWeekDisabled=this.daysOfWeekDisabled.split(/,\\s*/)),this.daysOfWeekDisabled=a.map(this.daysOfWeekDisabled,function(a){return parseInt(a,10)}),this.update(),this.updateNavArrows()},setDatesDisabled:function(b){this.datesDisabled=b||[],a.isArray(this.datesDisabled)||(this.datesDisabled=this.datesDisabled.split(/,\\s*/)),this.datesDisabled=a.map(this.datesDisabled,function(a){return e.parseDate(a,this.format,this.language).valueOf()}),this.update(),this.updateNavArrows()},place:function(){if(!this.isInline){var b=parseInt(this.element.parents().filter(function(){return\"auto\"!=a(this).css(\"z-index\")}).first().css(\"z-index\"))+10,c=this.component?this.component:this.element,d=c.offset(),e=c.outerHeight()+parseInt(c.css(\"margin-top\")),f=c.outerWidth()+parseInt(c.css(\"margin-left\")),g=d.top+e,h=d.left;this.picker.removeClass(\"datepicker-top datepicker-bottom\"),g+this.picker.outerHeight()>=a(window).scrollTop()+a(window).height()?(g=d.top-this.picker.outerHeight(),this.picker.addClass(\"datepicker-top\")):this.picker.addClass(\"datepicker-bottom\"),d.left+this.picker.width()>=a(window).width()&&(h=d.left+f-this.picker.width()),this.picker.css({top:g,left:h,zIndex:b})}},update:function(){var b,c=!1,d=this.isInput?this.element.val():this.element.data(\"date\")||this.element.find(\"input\").val();return arguments&&arguments.length&&(\"string\"==typeof arguments[0]||arguments[0]instanceof Date)?(b=arguments[0],c=!0):b=d||null==this.initialDate?this.isInput?this.element.val():this.element.data(\"date\")||this.element.find(\"input\").val():this.initialDate,b.length>this.formatText.length?(a(this.picker),void a(this.element)):(a(this.picker).removeClass(\"is-invalid\"),a(this.element).removeClass(\"is-invalid-input\"),this.date=e.parseDate(b,this.format,this.language),(c||null!=this.initialDate)&&this.setValue(),this.date<this.startDate?this.viewDate=new Date(this.startDate.valueOf()):this.date>this.endDate?this.viewDate=new Date(this.endDate.valueOf()):this.viewDate=new Date(this.date.valueOf()),void this.fill())},fillDow:function(){var a=this.weekStart,b=\"<tr>\";if(this.calendarWeeks){var c='<th class=\"cw\">&nbsp;</th>';b+=c,this.picker.find(\".datepicker-days thead tr:first-child\").prepend(c)}for(;a<this.weekStart+7;)b+='<th class=\"dow\">'+d[this.language].daysMin[a++%7]+\"</th>\";b+=\"</tr>\",this.picker.find(\".datepicker-days thead\").append(b)},fillMonths:function(){for(var a=\"\",b=0;b<12;)a+='<span class=\"month\">'+d[this.language].monthsShort[b++]+\"</span>\";this.picker.find(\".datepicker-months td\").html(a)},fill:function(){if(null!=this.date&&null!=this.viewDate){var c=new Date(this.viewDate.valueOf()),f=c.getUTCFullYear(),g=c.getUTCMonth(),h=c.getUTCDate(),i=c.getUTCHours(),j=c.getUTCMinutes(),k=this.startDate!==-(1/0)?this.startDate.getUTCFullYear():-(1/0),l=this.startDate!==-(1/0)?this.startDate.getUTCMonth():-(1/0),m=this.endDate!==1/0?this.endDate.getUTCFullYear():1/0,n=this.endDate!==1/0?this.endDate.getUTCMonth():1/0,o=this.date&&b(this.date.getUTCFullYear(),this.date.getUTCMonth(),this.date.getUTCDate()).valueOf(),p=new Date;d[this.language].titleFormat||d.en.titleFormat;this.picker.find(\".datepicker-days thead th:eq(1)\").text(d[this.language].months[g]+\" \"+f),this.picker.find(\".datepicker-hours thead th:eq(1)\").text(h+\" \"+d[this.language].months[g]+\" \"+f),this.picker.find(\".datepicker-minutes thead th:eq(1)\").text(h+\" \"+d[this.language].months[g]+\" \"+f),this.picker.find(\"tfoot th.today\").text(d[this.language].today).toggle(this.todayBtn!==!1),this.updateNavArrows(),this.fillMonths();var q=b(f,g-1,28,0,0,0,0),r=e.getDaysInMonth(q.getUTCFullYear(),q.getUTCMonth());q.setUTCDate(r),q.setUTCDate(r-(q.getUTCDay()-this.weekStart+7)%7);var s=new Date(q.valueOf());s.setUTCDate(s.getUTCDate()+42),s=s.valueOf();for(var t,u=[];q.valueOf()<s;){if(q.getUTCDay()==this.weekStart&&(u.push(\"<tr>\"),this.calendarWeeks)){var v=new Date(q.getUTCFullYear(),q.getUTCMonth(),q.getUTCDate()-q.getDay()+10-(this.weekStart&&this.weekStart%7<5&&7)),w=new Date(v.getFullYear(),0,4),x=~~((v-w)/864e5/7+1.5);u.push('<td class=\"cw\">'+x+\"</td>\")}t=\" \"+this.onRender(q)+\" \",q.getUTCFullYear()<f||q.getUTCFullYear()==f&&q.getUTCMonth()<g?t+=\" old\":(q.getUTCFullYear()>f||q.getUTCFullYear()==f&&q.getUTCMonth()>g)&&(t+=\" new\"),this.todayHighlight&&q.getUTCFullYear()==p.getFullYear()&&q.getUTCMonth()==p.getMonth()&&q.getUTCDate()==p.getDate()&&(t+=\" today\"),o&&q.valueOf()==o&&(t+=\" active\"),(q.valueOf()<this.startDate||q.valueOf()>this.endDate||a.inArray(q.getUTCDay(),this.daysOfWeekDisabled)!==-1||a.inArray(q.valueOf(),this.datesDisabled)!==-1)&&(t+=\" disabled\"),u.push('<td class=\"day'+t+'\">'+q.getUTCDate()+\"</td>\"),q.getUTCDay()==this.weekEnd&&u.push(\"</tr>\"),q.setUTCDate(q.getUTCDate()+1)}this.picker.find(\".datepicker-days tbody\").empty().append(u.join(\"\")),u=[];for(var y=0;y<24;y++){var z=b(f,g,h,y);t=\"\",z.valueOf()+36e5<this.startDate||z.valueOf()>this.endDate?t+=\" disabled\":i==y&&(t+=\" active\"),u.push('<span class=\"hour'+t+'\">'+y+\":00</span>\")}this.picker.find(\".datepicker-hours td\").html(u.join(\"\")),u=[];for(var y=0;y<60;y+=this.minuteStep){var z=b(f,g,h,i,y);t=\"\",z.valueOf()<this.startDate||z.valueOf()>this.endDate?t+=\" disabled\":Math.floor(j/this.minuteStep)==Math.floor(y/this.minuteStep)&&(t+=\" active\"),u.push('<span class=\"minute'+t+'\">'+i+\":\"+(y<10?\"0\"+y:y)+\"</span>\")}this.picker.find(\".datepicker-minutes td\").html(u.join(\"\"));var A=this.date&&this.date.getUTCFullYear(),B=this.picker.find(\".datepicker-months\").find(\"th:eq(1)\").text(f).end().find(\"span\").removeClass(\"active\");A&&A==f&&B.eq(this.date.getUTCMonth()).addClass(\"active\"),(f<k||f>m)&&B.addClass(\"disabled\"),f==k&&B.slice(0,l).addClass(\"disabled\"),f==m&&B.slice(n+1).addClass(\"disabled\"),u=\"\",f=10*parseInt(f/10,10);var C=this.picker.find(\".datepicker-years\").find(\"th:eq(1)\").text(f+\"-\"+(f+9)).end().find(\"td\");f-=1;for(var y=-1;y<11;y++)u+='<span class=\"year'+(y==-1||10==y?\" old\":\"\")+(A==f?\" active\":\"\")+(f<k||f>m?\" disabled\":\"\")+'\">'+f+\"</span>\",f+=1;C.html(u)}},updateNavArrows:function(){var a=new Date(this.viewDate),b=a.getUTCFullYear(),c=a.getUTCMonth(),d=a.getUTCDate(),e=a.getUTCHours();switch(this.viewMode){case 0:this.startDate!==-(1/0)&&b<=this.startDate.getUTCFullYear()&&c<=this.startDate.getUTCMonth()&&d<=this.startDate.getUTCDate()&&e<=this.startDate.getUTCHours()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.endDate!==1/0&&b>=this.endDate.getUTCFullYear()&&c>=this.endDate.getUTCMonth()&&d>=this.endDate.getUTCDate()&&e>=this.endDate.getUTCHours()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"});break;case 1:this.startDate!==-(1/0)&&b<=this.startDate.getUTCFullYear()&&c<=this.startDate.getUTCMonth()&&d<=this.startDate.getUTCDate()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.endDate!==1/0&&b>=this.endDate.getUTCFullYear()&&c>=this.endDate.getUTCMonth()&&d>=this.endDate.getUTCDate()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"});break;case 2:this.startDate!==-(1/0)&&b<=this.startDate.getUTCFullYear()&&c<=this.startDate.getUTCMonth()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.endDate!==1/0&&b>=this.endDate.getUTCFullYear()&&c>=this.endDate.getUTCMonth()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"});break;case 3:case 4:this.startDate!==-(1/0)&&b<=this.startDate.getUTCFullYear()?this.picker.find(\".prev\").css({visibility:\"hidden\"}):this.picker.find(\".prev\").css({visibility:\"visible\"}),this.endDate!==1/0&&b>=this.endDate.getUTCFullYear()?this.picker.find(\".next\").css({visibility:\"hidden\"}):this.picker.find(\".next\").css({visibility:\"visible\"})}},click:function(c){c.stopPropagation(),c.preventDefault(),(a(c.target).hasClass(\"datepicker-close\")||a(c.target).parent().hasClass(\"datepicker-close\"))&&this.hide();var d=a(c.target).closest(\"span, td, th\");if(1==d.length){if(d.is(\".disabled\"))return void this.element.trigger({type:\"outOfRange\",date:this.viewDate,startDate:this.startDate,endDate:this.endDate});switch(d[0].nodeName.toLowerCase()){case\"th\":switch(d[0].className){case\"date-switch\":this.showMode(1);break;case\"prev\":case\"next\":var f=e.modes[this.viewMode].navStep*(\"prev\"==d[0].className?-1:1);switch(this.viewMode){case 0:this.viewDate=this.moveHour(this.viewDate,f);break;case 1:this.viewDate=this.moveDate(this.viewDate,f);break;case 2:this.viewDate=this.moveMonth(this.viewDate,f);break;case 3:case 4:this.viewDate=this.moveYear(this.viewDate,f)}this.fill();break;case\"today\":var g=new Date;g=b(g.getFullYear(),g.getMonth(),g.getDate(),g.getHours(),g.getMinutes(),g.getSeconds()),this.viewMode=this.startViewMode,this.showMode(0),this._setDate(g)}break;case\"span\":if(!d.is(\".disabled\")){if(d.is(\".month\"))if(3===this.minView){var h=d.parent().find(\"span\").index(d)||0,i=this.viewDate.getUTCFullYear(),j=1,k=this.viewDate.getUTCHours(),l=this.viewDate.getUTCMinutes(),m=this.viewDate.getUTCSeconds();this._setDate(b(i,h,j,k,l,m,0))}else{this.viewDate.setUTCDate(1);var h=d.parent().find(\"span\").index(d);this.viewDate.setUTCMonth(h),this.element.trigger({type:\"changeMonth\",date:this.viewDate})}else if(d.is(\".year\"))if(4===this.minView){var i=parseInt(d.text(),10)||0,h=0,j=1,k=this.viewDate.getUTCHours(),l=this.viewDate.getUTCMinutes(),m=this.viewDate.getUTCSeconds();this._setDate(b(i,h,j,k,l,m,0))}else{this.viewDate.setUTCDate(1);var i=parseInt(d.text(),10)||0;this.viewDate.setUTCFullYear(i),this.element.trigger({type:\"changeYear\",date:this.viewDate})}else if(d.is(\".hour\")){var k=parseInt(d.text(),10)||0,i=this.viewDate.getUTCFullYear(),h=this.viewDate.getUTCMonth(),j=this.viewDate.getUTCDate(),l=this.viewDate.getUTCMinutes(),m=this.viewDate.getUTCSeconds();this._setDate(b(i,h,j,k,l,m,0))}else if(d.is(\".minute\")){var l=parseInt(d.text().substr(d.text().indexOf(\":\")+1),10)||0,i=this.viewDate.getUTCFullYear(),h=this.viewDate.getUTCMonth(),j=this.viewDate.getUTCDate(),k=this.viewDate.getUTCHours(),m=this.viewDate.getUTCSeconds();this._setDate(b(i,h,j,k,l,m,0))}if(0!=this.viewMode){var n=this.viewMode;this.showMode(-1),this.fill(),n==this.viewMode&&this.autoclose&&this.hide()}else this.fill(),this.autoclose&&this.hide()}break;case\"td\":if(d.is(\".day\")&&!d.is(\".disabled\")){var j=parseInt(d.text(),10)||1,i=this.viewDate.getUTCFullYear(),h=this.viewDate.getUTCMonth(),k=this.viewDate.getUTCHours(),l=this.viewDate.getUTCMinutes(),m=this.viewDate.getUTCSeconds();d.is(\".old\")?0===h?(h=11,i-=1):h-=1:d.is(\".new\")&&(11==h?(h=0,i+=1):h+=1),this._setDate(b(i,h,j,k,l,m,0))}var n=this.viewMode;this.showMode(-1),this.fill(),n==this.viewMode&&this.autoclose&&this.hide()}}},_setDate:function(a,b){b&&\"date\"!=b||(this.date=a),b&&\"view\"!=b||(this.viewDate=a),this.fill(),this.setValue(),this.element.trigger({type:\"changeDate\",date:this.date});var c;this.isInput?c=this.element:this.component&&(c=this.element.find(\"input\")),c&&(c.change(),this.autoclose&&(!b||\"date\"==b))},moveHour:function(a,b){if(!b)return a;var c=new Date(a.valueOf());return b=b>0?1:-1,c.setUTCHours(c.getUTCHours()+b),c},moveDate:function(a,b){if(!b)return a;var c=new Date(a.valueOf());return b=b>0?1:-1,c.setUTCDate(c.getUTCDate()+b),c},moveMonth:function(a,b){if(!b)return a;var c,d,e=new Date(a.valueOf()),f=e.getUTCDate(),g=e.getUTCMonth(),h=Math.abs(b);if(b=b>0?1:-1,1==h)d=b==-1?function(){return e.getUTCMonth()==g}:function(){return e.getUTCMonth()!=c},c=g+b,e.setUTCMonth(c),(c<0||c>11)&&(c=(c+12)%12);else{for(var i=0;i<h;i++)e=this.moveMonth(e,b);c=e.getUTCMonth(),e.setUTCDate(f),d=function(){return c!=e.getUTCMonth()}}for(;d();)e.setUTCDate(--f),e.setUTCMonth(c);return e},moveYear:function(a,b){return this.moveMonth(a,12*b)},dateWithinRange:function(a){return a>=this.startDate&&a<=this.endDate},keydown:function(a){if(!this.keyboardNavigation)return!0;if(this.picker.is(\":not(:visible)\"))return void(27==a.keyCode&&this.show());var b,c,d,e=!1;switch(a.keyCode){case 27:this.hide(),a.preventDefault();break;case 37:case 39:if(!this.keyboardNavigation)break;b=37==a.keyCode?-1:1,a.ctrlKey?(c=this.moveYear(this.date,b),d=this.moveYear(this.viewDate,b)):a.shiftKey?(c=this.moveMonth(this.date,b),d=this.moveMonth(this.viewDate,b)):(c=new Date(this.date.valueOf()),c.setUTCDate(this.date.getUTCDate()+b),d=new Date(this.viewDate.valueOf()),d.setUTCDate(this.viewDate.getUTCDate()+b)),this.dateWithinRange(c)&&(this.date=c,this.viewDate=d,this.setValue(),this.update(),a.preventDefault(),e=!0);break;case 38:case 40:if(!this.keyboardNavigation)break;b=38==a.keyCode?-1:1,a.ctrlKey?(c=this.moveYear(this.date,b),d=this.moveYear(this.viewDate,b)):a.shiftKey?(c=this.moveMonth(this.date,b),d=this.moveMonth(this.viewDate,b)):(c=new Date(this.date.valueOf()),c.setUTCDate(this.date.getUTCDate()+7*b),d=new Date(this.viewDate.valueOf()),d.setUTCDate(this.viewDate.getUTCDate()+7*b)),this.dateWithinRange(c)&&(this.date=c,this.viewDate=d,this.setValue(),this.update(),a.preventDefault(),e=!0);break;case 13:this.hide(),a.preventDefault();break;case 9:this.hide()}if(e){this.element.trigger({type:\"changeDate\",date:this.date});var f;this.isInput?f=this.element:this.component&&(f=this.element.find(\"input\")),f&&f.change()}},showMode:function(a){if(a){var b=Math.max(0,Math.min(e.modes.length-1,this.viewMode+a));b>=this.minView&&b<=this.maxView&&(this.viewMode=b)}this.picker.find(\">div\").hide().filter(\".datepicker-\"+e.modes[this.viewMode].clsName).css(\"display\",\"block\"),this.updateNavArrows()},reset:function(a){this._setDate(null,\"date\")}},a.fn.fdatepicker=function(b){var d=Array.apply(null,arguments);return d.shift(),this.each(function(){var e=a(this),f=e.data(\"datepicker\"),g=\"object\"==typeof b&&b;f||e.data(\"datepicker\",f=new c(this,a.extend({},a.fn.fdatepicker.defaults,g))),\"string\"==typeof b&&\"function\"==typeof f[b]&&f[b].apply(f,d)})},a.fn.fdatepicker.defaults={onRender:function(a){return\"\"}},a.fn.fdatepicker.Constructor=c;var d=a.fn.fdatepicker.dates={en:{days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],daysShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"],daysMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\",\"Su\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthsShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],today:\"Today\",titleFormat:\"MM yyyy\"}},e={modes:[{clsName:\"minutes\",navFnc:\"Hours\",navStep:1},{clsName:\"hours\",navFnc:\"Date\",navStep:1},{clsName:\"days\",navFnc:\"Month\",navStep:1},{clsName:\"months\",navFnc:\"FullYear\",navStep:1},{clsName:\"years\",navFnc:\"FullYear\",navStep:10}],isLeapYear:function(a){return a%4===0&&a%100!==0||a%400===0},getDaysInMonth:function(a,b){return[31,e.isLeapYear(a)?29:28,31,30,31,30,31,31,30,31,30,31][b]},validParts:/hh?|ii?|ss?|dd?|mm?|MM?|yy(?:yy)?/g,nonpunctuation:/[^ -\\/:-@\\[\\u3400-\\u9fff-`{-~\\t\\n\\r]+/g,parseFormat:function(a){var b=a.replace(this.validParts,\"\\0\").split(\"\\0\"),c=a.match(this.validParts);if(!b||!b.length||!c||0===c.length)throw new Error(\"Invalid date format.\");return this.formatText=a,{separators:b,parts:c}},parseDate:function(c,e,f){if(c instanceof Date)return new Date(c.valueOf()-6e4*c.getTimezoneOffset());if(/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/.test(c)&&(e=this.parseFormat(\"yyyy-mm-dd\")),/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}$/.test(c)&&(e=this.parseFormat(\"yyyy-mm-dd hh:ii\")),/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}\\:\\d{1,2}[Z]{0,1}$/.test(c)&&(e=this.parseFormat(\"yyyy-mm-dd hh:ii:ss\")),/^[-+]\\d+[dmwy]([\\s,]+[-+]\\d+[dmwy])*$/.test(c)){var g,h,i=/([-+]\\d+)([dmwy])/,j=c.match(/([-+]\\d+)([dmwy])/g);c=new Date;for(var k=0;k<j.length;k++)switch(g=i.exec(j[k]),h=parseInt(g[1]),g[2]){case\"d\":c.setUTCDate(c.getUTCDate()+h);break;case\"m\":c=Datetimepicker.prototype.moveMonth.call(Datetimepicker.prototype,c,h);break;case\"w\":c.setUTCDate(c.getUTCDate()+7*h);break;case\"y\":c=Datetimepicker.prototype.moveYear.call(Datetimepicker.prototype,c,h)}return b(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate(),c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds())}var l,m,g,j=c&&c.match(this.nonpunctuation)||[],c=new Date,n={},o=[\"hh\",\"h\",\"ii\",\"i\",\"ss\",\"s\",\"yyyy\",\"yy\",\"M\",\"MM\",\"m\",\"mm\",\"d\",\"dd\"],p={hh:function(a,b){return a.setUTCHours(b)},h:function(a,b){return a.setUTCHours(b)},ii:function(a,b){return a.setUTCMinutes(b)},i:function(a,b){return a.setUTCMinutes(b)},ss:function(a,b){return a.setUTCSeconds(b)},s:function(a,b){return a.setUTCSeconds(b)},yyyy:function(a,b){return a.setUTCFullYear(b)},yy:function(a,b){return a.setUTCFullYear(2e3+b)},m:function(a,b){for(b-=1;b<0;)b+=12;for(b%=12,a.setUTCMonth(b);a.getUTCMonth()!=b;)a.setUTCDate(a.getUTCDate()-1);return a},d:function(a,b){return a.setUTCDate(b)}};if(p.M=p.MM=p.mm=p.m,p.dd=p.d,c=b(c.getFullYear(),c.getMonth(),c.getDate(),0,0,0),j.length==e.parts.length){for(var k=0,q=e.parts.length;k<q;k++){if(l=parseInt(j[k],10),g=e.parts[k],isNaN(l))switch(g){case\"MM\":m=a(d[f].months).filter(function(){var a=this.slice(0,j[k].length),b=j[k].slice(0,a.length);return a==b}),l=a.inArray(m[0],d[f].months)+1;break;case\"M\":m=a(d[f].monthsShort).filter(function(){var a=this.slice(0,j[k].length),b=j[k].slice(0,a.length);return a==b}),l=a.inArray(m[0],d[f].monthsShort)+1}n[g]=l}for(var r,k=0;k<o.length;k++)r=o[k],r in n&&!isNaN(n[r])&&p[r](c,n[r])}return c},formatDate:function(b,c,e){if(null==b)return\"\";var f={h:b.getUTCHours(),i:b.getUTCMinutes(),s:b.getUTCSeconds(),d:b.getUTCDate(),m:b.getUTCMonth()+1,M:d[e].monthsShort[b.getUTCMonth()],MM:d[e].months[b.getUTCMonth()],yy:b.getUTCFullYear().toString().substring(2),yyyy:b.getUTCFullYear()};f.hh=(f.h<10?\"0\":\"\")+f.h,f.ii=(f.i<10?\"0\":\"\")+f.i,f.ss=(f.s<10?\"0\":\"\")+f.s,f.dd=(f.d<10?\"0\":\"\")+f.d,f.mm=(f.m<10?\"0\":\"\")+f.m;for(var b=[],g=a.extend([],c.separators),h=0,i=c.parts.length;h<i;h++)g.length&&b.push(g.shift()),b.push(f[c.parts[h]]);return b.join(\"\")},convertViewMode:function(a){switch(a){case 4:case\"decade\":a=4;break;case 3:case\"year\":a=3;break;case 2:case\"month\":a=2;break;case 1:case\"day\":a=1;break;case 0:case\"hour\":a=0}return a},headTemplate:function(a,b){return'<thead><tr><th class=\"prev\">'+a+'</th><th colspan=\"5\" class=\"date-switch\"></th><th class=\"next\">'+b+\"</th></tr></thead>\"},contTemplate:'<tbody><tr><td colspan=\"7\"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr></tfoot>'};e.template=function(a,b,c){return'<div class=\"datepicker\"><div class=\"datepicker-minutes\"><table class=\" table-condensed\">'+e.headTemplate(a,b)+e.contTemplate+e.footTemplate+'</table></div><div class=\"datepicker-hours\"><table class=\" table-condensed\">'+e.headTemplate(a,b)+e.contTemplate+e.footTemplate+'</table></div><div class=\"datepicker-days\"><table class=\" table-condensed\">'+e.headTemplate(a,b)+\"<tbody></tbody>\"+e.footTemplate+'</table></div><div class=\"datepicker-months\"><table class=\"table-condensed\">'+e.headTemplate(a,b)+e.contTemplate+e.footTemplate+'</table></div><div class=\"datepicker-years\"><table class=\"table-condensed\">'+e.headTemplate(a,b)+e.contTemplate+e.footTemplate+'</table></div><a class=\"button datepicker-close tiny alert right\" style=\"width:auto;\">'+c+\"</a></div>\"},a.fn.fdatepicker.DPGlobal=e}(window.jQuery);</script><script type=\"text/javascript\">function _classCallCheck(t, e) {\n    if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\")\n        }\n\n! function (t) {\n    \"use strict\";\n\n    function e(t) {\n        if (void 0 === Function.prototype.name) {\n            var e = /function\\s([^(]{1,})\\(/\n                , i = e.exec(t.toString());\n            return i && i.length > 1 ? i[1].trim() : \"\"\n        }\n        return void 0 === t.prototype ? t.constructor.name : t.prototype.constructor.name\n    }\n\n    function i(t) {\n        return /true/.test(t) ? !0 : /false/.test(t) ? !1 : isNaN(1 * t) ? t : parseFloat(t)\n    }\n\n    function n(t) {\n        return t.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()\n    }\n    var s = \"6.1.1\"\n        , o = {\n            version: s\n            , _plugins: {}\n            , _uuids: []\n            , _activePlugins: {}\n            , rtl: function () {\n                return \"rtl\" === t(\"html\").attr(\"dir\")\n            }\n            , plugin: function (t, i) {\n                var s = i || e(t)\n                    , o = n(s);\n                this._plugins[o] = this[s] = t\n            }\n            , registerPlugin: function (t, i) {\n                var s = i ? n(i) : e(t.constructor).toLowerCase();\n                t.uuid = this.GetYoDigits(6, s), t.$element.attr(\"data-\" + s) || t.$element.attr(\"data-\" + s, t.uuid), t.$element.data(\"zfPlugin\") || t.$element.data(\"zfPlugin\", t), t.$element.trigger(\"init.zf.\" + s), this._uuids.push(t.uuid)\n            }\n            , unregisterPlugin: function (t) {\n                var i = n(e(t.$element.data(\"zfPlugin\").constructor));\n                this._uuids.splice(this._uuids.indexOf(t.uuid), 1), t.$element.removeAttr(\"data-\" + i).removeData(\"zfPlugin\").trigger(\"destroyed.zf.\" + i);\n                for (var s in t) t[s] = null\n            }\n            , reInit: function (e) {\n                var i = e instanceof t;\n                try {\n                    if (i) e.each(function () {\n                        t(this).data(\"zfPlugin\")._init()\n                    });\n                    else {\n                        var n = typeof e\n                            , s = this\n                            , o = {\n                                object: function (e) {\n                                    e.forEach(function (e) {\n                                        t(\"[data-\" + e + \"]\").foundation(\"_init\")\n                                    })\n                                }\n                                , string: function () {\n                                    t(\"[data-\" + e + \"]\").foundation(\"_init\")\n                                }\n                                , undefined: function () {\n                                    this.object(Object.keys(s._plugins))\n                                }\n                            };\n                        o[n](e)\n                    }\n                }\n                catch (a) {\n                    console.error(a)\n                }\n                finally {\n                    return e\n                }\n            }\n            , GetYoDigits: function (t, e) {\n                return t = t || 6, Math.round(Math.pow(36, t + 1) - Math.random() * Math.pow(36, t)).toString(36).slice(1) + (e ? \"-\" + e : \"\")\n            }\n            , reflow: function (e, n) {\n                \"undefined\" == typeof n ? n = Object.keys(this._plugins) : \"string\" == typeof n && (n = [n]);\n                var s = this;\n                t.each(n, function (n, o) {\n                    var a = s._plugins[o]\n                        , r = t(e).find(\"[data-\" + o + \"]\").addBack(\"[data-\" + o + \"]\");\n                    r.each(function () {\n                        var e = t(this)\n                            , n = {};\n                        if (e.data(\"zfPlugin\")) return void console.warn(\"Tried to initialize \" + o + \" on an element that already has a Foundation plugin.\");\n                        if (e.attr(\"data-options\")) {\n                            e.attr(\"data-options\").split(\";\").forEach(function (t, e) {\n                                var s = t.split(\":\").map(function (t) {\n                                    return t.trim()\n                                });\n                                s[0] && (n[s[0]] = i(s[1]))\n                            })\n                        }\n                        try {\n                            e.data(\"zfPlugin\", new a(t(this), n))\n                        }\n                        catch (s) {\n                            console.error(s)\n                        }\n                        finally {\n                            return\n                        }\n                    })\n                })\n            }\n            , getFnName: e\n            , transitionend: function (t) {\n                var e, i = {\n                        transition: \"transitionend\"\n                        , WebkitTransition: \"webkitTransitionEnd\"\n                        , MozTransition: \"transitionend\"\n                        , OTransition: \"otransitionend\"\n                    }\n                    , n = document.createElement(\"div\");\n                for (var s in i) \"undefined\" != typeof n.style[s] && (e = i[s]);\n                return e ? e : (e = setTimeout(function () {\n                    t.triggerHandler(\"transitionend\", [t])\n                }, 1), \"transitionend\")\n            }\n        };\n    o.util = {\n        throttle: function (t, e) {\n            var i = null;\n            return function () {\n                var n = this\n                    , s = arguments;\n                null === i && (i = setTimeout(function () {\n                    t.apply(n, s), i = null\n                }, e))\n            }\n        }\n    };\n    var a = function (i) {\n        var n = typeof i\n            , s = t(\"meta.foundation-mq\")\n            , a = t(\".no-js\");\n        if (s.length || t('<meta class=\"foundation-mq\">').appendTo(document.head), a.length && a.removeClass(\"no-js\"), \"undefined\" === n) o.MediaQuery._init(), o.reflow(this);\n        else {\n            if (\"string\" !== n) throw new TypeError(\"We're sorry, '\" + n + \"' is not a valid parameter. You must use a string representing the method you wish to invoke.\");\n            var r = Array.prototype.slice.call(arguments, 1)\n                , l = this.data(\"zfPlugin\");\n            if (void 0 === l || void 0 === l[i]) throw new ReferenceError(\"We're sorry, '\" + i + \"' is not an available method for \" + (l ? e(l) : \"this element\") + \".\");\n            1 === this.length ? l[i].apply(l, r) : this.each(function (e, n) {\n                l[i].apply(t(n).data(\"zfPlugin\"), r)\n            })\n        }\n        return this\n    };\n    window.Foundation = o, t.fn.foundation = a\n        , function () {\n            Date.now && window.Date.now || (window.Date.now = Date.now = function () {\n                return (new Date).getTime()\n            });\n            for (var t = [\"webkit\", \"moz\"], e = 0; e < t.length && !window.requestAnimationFrame; ++e) {\n                var i = t[e];\n                window.requestAnimationFrame = window[i + \"RequestAnimationFrame\"], window.cancelAnimationFrame = window[i + \"CancelAnimationFrame\"] || window[i + \"CancelRequestAnimationFrame\"]\n            }\n            if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n                var n = 0;\n                window.requestAnimationFrame = function (t) {\n                    var e = Date.now()\n                        , i = Math.max(n + 16, e);\n                    return setTimeout(function () {\n                        t(n = i)\n                    }, i - e)\n                }, window.cancelAnimationFrame = clearTimeout\n            }\n            window.performance && window.performance.now || (window.performance = {\n                start: Date.now()\n                , now: function () {\n                    return Date.now() - this.start\n                }\n            })\n        }(), Function.prototype.bind || (Function.prototype.bind = function (t) {\n            if (\"function\" != typeof this) throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n            var e = Array.prototype.slice.call(arguments, 1)\n                , i = this\n                , n = function () {}\n                , s = function () {\n                    return i.apply(this instanceof n ? this : t, e.concat(Array.prototype.slice.call(arguments)))\n                };\n            return this.prototype && (n.prototype = this.prototype), s.prototype = new n, s\n        })\n}(jQuery), ! function (t, e) {\n    var i = function (t, e, i, s) {\n            var o, a, r, l, d = n(t);\n            if (e) {\n                var h = n(e);\n                a = d.offset.top + d.height <= h.height + h.offset.top, o = d.offset.top >= h.offset.top, r = d.offset.left >= h.offset.left, l = d.offset.left + d.width <= h.width\n            }\n            else a = d.offset.top + d.height <= d.windowDims.height + d.windowDims.offset.top, o = d.offset.top >= d.windowDims.offset.top, r = d.offset.left >= d.windowDims.offset.left, l = d.offset.left + d.width <= d.windowDims.width;\n            var u = [a, o, r, l];\n            return i ? r === l == !0 : s ? o === a == !0 : -1 === u.indexOf(!1)\n        }\n        , n = function (t, i) {\n            if (t = t.length ? t[0] : t, t === e || t === document) throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n            var n = t.getBoundingClientRect()\n                , s = t.parentNode.getBoundingClientRect()\n                , o = document.body.getBoundingClientRect()\n                , a = e.pageYOffset\n                , r = e.pageXOffset;\n            return {\n                width: n.width\n                , height: n.height\n                , offset: {\n                    top: n.top + a\n                    , left: n.left + r\n                }\n                , parentDims: {\n                    width: s.width\n                    , height: s.height\n                    , offset: {\n                        top: s.top + a\n                        , left: s.left + r\n                    }\n                }\n                , windowDims: {\n                    width: o.width\n                    , height: o.height\n                    , offset: {\n                        top: a\n                        , left: r\n                    }\n                }\n            }\n        }\n        , s = function (t, e, i, s, o, a) {\n            var r = n(t)\n                , l = e ? n(e) : null;\n            switch (i) {\n            case \"top\":\n                return {\n                    left: l.offset.left\n                    , top: l.offset.top - (r.height + s)\n                };\n            case \"left\":\n                return {\n                    left: l.offset.left - (r.width + o)\n                    , top: l.offset.top\n                };\n            case \"right\":\n                return {\n                    left: l.offset.left + l.width + o\n                    , top: l.offset.top\n                };\n            case \"center top\":\n                return {\n                    left: l.offset.left + l.width / 2 - r.width / 2\n                    , top: l.offset.top - (r.height + s)\n                };\n            case \"center bottom\":\n                return {\n                    left: a ? o : l.offset.left + l.width / 2 - r.width / 2\n                    , top: l.offset.top + l.height + s\n                };\n            case \"center left\":\n                return {\n                    left: l.offset.left - (r.width + o)\n                    , top: l.offset.top + l.height / 2 - r.height / 2\n                };\n            case \"center right\":\n                return {\n                    left: l.offset.left + l.width + o + 1\n                    , top: l.offset.top + l.height / 2 - r.height / 2\n                };\n            case \"center\":\n                return {\n                    left: r.windowDims.offset.left + r.windowDims.width / 2 - r.width / 2\n                    , top: r.windowDims.offset.top + r.windowDims.height / 2 - r.height / 2\n                };\n            case \"reveal\":\n                return {\n                    left: (r.windowDims.width - r.width) / 2\n                    , top: r.windowDims.offset.top + s\n                };\n            case \"reveal full\":\n                return {\n                    left: r.windowDims.offset.left\n                    , top: r.windowDims.offset.top\n                };\n            default:\n                return {\n                    left: l.offset.left\n                    , top: l.offset.top + l.height + s\n                }\n            }\n        };\n    t.Box = {\n        ImNotTouchingYou: i\n        , GetDimensions: n\n        , GetOffsets: s\n    }\n}(window.Foundation, window), ! function (t, e) {\n    \"use strict\";\n    e.Keyboard = {};\n    var i = {\n            9: \"TAB\"\n            , 13: \"ENTER\"\n            , 27: \"ESCAPE\"\n            , 32: \"SPACE\"\n            , 37: \"ARROW_LEFT\"\n            , 38: \"ARROW_UP\"\n            , 39: \"ARROW_RIGHT\"\n            , 40: \"ARROW_DOWN\"\n        }\n        , n = function (t) {\n            var e = {};\n            for (var i in t) e[t[i]] = t[i];\n            return e\n        }(i);\n    e.Keyboard.keys = n;\n    var s = function (t) {\n        var e = i[t.which || t.keyCode] || String.fromCharCode(t.which).toUpperCase();\n        return t.shiftKey && (e = \"SHIFT_\" + e), t.ctrlKey && (e = \"CTRL_\" + e), t.altKey && (e = \"ALT_\" + e), e\n    };\n    e.Keyboard.parseKey = s;\n    var o = {}\n        , a = function (i, n, a) {\n            var r, l, d, h = o[n]\n                , u = s(i);\n            return h ? (r = \"undefined\" == typeof h.ltr ? h : e.rtl() ? t.extend({}, h.ltr, h.rtl) : t.extend({}, h.rtl, h.ltr), l = r[u], d = a[l], void(d && \"function\" == typeof d ? (d.apply(), (a.handled || \"function\" == typeof a.handled) && a.handled.apply()) : (a.unhandled || \"function\" == typeof a.unhandled) && a.unhandled.apply())) : console.warn(\"Component not defined!\")\n        };\n    e.Keyboard.handleKey = a;\n    var r = function (e) {\n        return e.find(\"a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]\").filter(function () {\n            return !t(this).is(\":visible\") || t(this).attr(\"tabindex\") < 0 ? !1 : !0\n        })\n    };\n    e.Keyboard.findFocusable = r;\n    var l = function (t, e) {\n        o[t] = e\n    };\n    e.Keyboard.register = l\n}(jQuery, window.Foundation), ! function (t, e) {\n    function i(t) {\n        var e = {};\n        return \"string\" != typeof t ? e : (t = t.trim().slice(1, -1)) ? e = t.split(\"&\").reduce(function (t, e) {\n            var i = e.replace(/\\+/g, \" \").split(\"=\")\n                , n = i[0]\n                , s = i[1];\n            return n = decodeURIComponent(n), s = void 0 === s ? null : decodeURIComponent(s), t.hasOwnProperty(n) ? Array.isArray(t[n]) ? t[n].push(s) : t[n] = [t[n], s] : t[n] = s, t\n        }, {}) : e\n    }\n    var n = {\n        queries: []\n        , current: \"\"\n        , atLeast: function (t) {\n            var e = this.get(t);\n            return e ? window.matchMedia(e).matches : !1\n        }\n        , get: function (t) {\n            for (var e in this.queries) {\n                var i = this.queries[e];\n                if (t === i.name) return i.value\n            }\n            return null\n        }\n        , _init: function () {\n            var e, n = this\n                , s = t(\".foundation-mq\").css(\"font-family\");\n            e = i(s);\n            for (var o in e) n.queries.push({\n                name: o\n                , value: \"only screen and (min-width: \" + e[o] + \")\"\n            });\n            this.current = this._getCurrentSize(), this._watcher()\n        }\n        , _getCurrentSize: function () {\n            var t;\n            for (var e in this.queries) {\n                var i = this.queries[e];\n                window.matchMedia(i.value).matches && (t = i)\n            }\n            return \"object\" == typeof t ? t.name : t\n        }\n        , _watcher: function () {\n            var e = this;\n            t(window).on(\"resize.zf.mediaquery\", function () {\n                var i = e._getCurrentSize();\n                i !== e.current && (t(window).trigger(\"changed.zf.mediaquery\", [i, e.current]), e.current = i)\n            })\n        }\n    };\n    e.MediaQuery = n, window.matchMedia || (window.matchMedia = function () {\n        \"use strict\";\n        var t = window.styleMedia || window.media;\n        if (!t) {\n            var e = document.createElement(\"style\")\n                , i = document.getElementsByTagName(\"script\")[0]\n                , n = null;\n            e.type = \"text/css\", e.id = \"matchmediajs-test\", i.parentNode.insertBefore(e, i), n = \"getComputedStyle\" in window && window.getComputedStyle(e, null) || e.currentStyle, t = {\n                matchMedium: function (t) {\n                    var i = \"@media \" + t + \"{ #matchmediajs-test { width: 1px; } }\";\n                    return e.styleSheet ? e.styleSheet.cssText = i : e.textContent = i, \"1px\" === n.width\n                }\n            }\n        }\n        return function (e) {\n            return {\n                matches: t.matchMedium(e || \"all\")\n                , media: e || \"all\"\n            }\n        }\n    }())\n}(jQuery, Foundation), ! function (t, e) {\n    function i(i, o, a, r) {\n        function l() {\n            i || o.hide(), d(), r && r.apply(o)\n        }\n\n        function d() {\n            o[0].style.transitionDuration = 0, o.removeClass(h + \" \" + u + \" \" + a)\n        }\n        if (o = t(o).eq(0), o.length) {\n            var h = i ? n[0] : n[1]\n                , u = i ? s[0] : s[1];\n            d(), o.addClass(a).css(\"transition\", \"none\"), requestAnimationFrame(function () {\n                o.addClass(h), i && o.show()\n            }), requestAnimationFrame(function () {\n                o[0].offsetWidth, o.css(\"transition\", \"\"), o.addClass(u)\n            }), o.one(e.transitionend(o), l)\n        }\n    }\n    var n = [\"mui-enter\", \"mui-leave\"]\n        , s = [\"mui-enter-active\", \"mui-leave-active\"]\n        , o = {\n            animateIn: function (t, e, n) {\n                i(!0, t, e, n)\n            }\n            , animateOut: function (t, e, n) {\n                i(!1, t, e, n)\n            }\n        }\n        , a = function (t, e, i) {\n            function n(r) {\n                a || (a = window.performance.now()), o = r - a, i.apply(e), t > o ? s = window.requestAnimationFrame(n, e) : (window.cancelAnimationFrame(s), e.trigger(\"finished.zf.animate\", [e]).triggerHandler(\"finished.zf.animate\", [e]))\n            }\n            var s, o, a = null;\n            s = window.requestAnimationFrame(n)\n        };\n    e.Move = a, e.Motion = o\n}(jQuery, Foundation), ! function (t, e) {\n    \"use strict\";\n    e.Nest = {\n        Feather: function (e, i) {\n            e.attr(\"role\", \"menubar\"), i = i || \"zf\";\n            var n = e.find(\"li\").attr({\n                    role: \"menuitem\"\n                })\n                , s = \"is-\" + i + \"-submenu\"\n                , o = s + \"-item\"\n                , a = \"is-\" + i + \"-submenu-parent\";\n            e.find(\"a:first\").attr(\"tabindex\", 0), n.each(function () {\n                var e = t(this)\n                    , i = e.children(\"ul\");\n                i.length && (e.addClass(\"has-submenu \" + a).attr({\n                    \"aria-haspopup\": !0\n                    , \"aria-selected\": !1\n                    , \"aria-expanded\": !1\n                    , \"aria-label\": e.children(\"a:first\").text()\n                }), i.addClass(\"submenu \" + s).attr({\n                    \"data-submenu\": \"\"\n                    , \"aria-hidden\": !0\n                    , role: \"menu\"\n                })), e.parent(\"[data-submenu]\").length && e.addClass(\"is-submenu-item \" + o)\n            })\n        }\n        , Burn: function (t, e) {\n            var i = (t.find(\"li\").removeAttr(\"tabindex\"), \"is-\" + e + \"-submenu\")\n                , n = i + \"-item\"\n                , s = \"is-\" + e + \"-submenu-parent\";\n            t.find(\"*\").removeClass(i + \" \" + n + \" \" + s + \" has-submenu is-submenu-item submenu is-active\").removeAttr(\"data-submenu\").css(\"display\", \"\")\n        }\n    }\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n    var i = function (t, e, i) {\n            var n, s, o = this\n                , a = e.duration\n                , r = Object.keys(t.data())[0] || \"timer\"\n                , l = -1;\n            this.restart = function () {\n                l = -1, clearTimeout(s), this.start()\n            }, this.start = function () {\n                clearTimeout(s), l = 0 >= l ? a : l, t.data(\"paused\", !1), n = Date.now(), s = setTimeout(function () {\n                    e.infinite && o.restart(), i()\n                }, l), t.trigger(\"timerstart.zf.\" + r)\n            }, this.pause = function () {\n                clearTimeout(s), t.data(\"paused\", !0);\n                var e = Date.now();\n                l -= e - n, t.trigger(\"timerpaused.zf.\" + r)\n            }\n        }\n        , n = function (e, i) {\n            var n = e.length;\n            0 === n && i();\n            var s = function () {\n                n--, 0 === n && i()\n            };\n            e.each(function () {\n                this.complete ? s() : \"undefined\" != typeof this.naturalWidth && this.naturalWidth > 0 ? s() : t(this).one(\"load\", function () {\n                    s()\n                })\n            })\n        };\n    e.Timer = i, e.onImagesLoaded = n\n}(jQuery, window.Foundation)\n, function (t) {\n    function e() {\n        this.removeEventListener(\"touchmove\", i), this.removeEventListener(\"touchend\", e), d = !1\n    }\n\n    function i(i) {\n        if (t.spotSwipe.preventDefault && i.preventDefault(), d) {\n            var n, s = i.touches[0].pageX\n                , a = (i.touches[0].pageY, o - s);\n            l = (new Date).getTime() - r, Math.abs(a) >= t.spotSwipe.moveThreshold && l <= t.spotSwipe.timeThreshold && (n = a > 0 ? \"left\" : \"right\"), n && (i.preventDefault(), e.call(this), t(this).trigger(\"swipe\", n).trigger(\"swipe\" + n))\n        }\n    }\n\n    function n(t) {\n        1 == t.touches.length && (o = t.touches[0].pageX, a = t.touches[0].pageY, d = !0, r = (new Date).getTime(), this.addEventListener(\"touchmove\", i, !1), this.addEventListener(\"touchend\", e, !1))\n    }\n\n    function s() {\n        this.addEventListener && this.addEventListener(\"touchstart\", n, !1)\n    }\n    t.spotSwipe = {\n        version: \"1.0.0\"\n        , enabled: \"ontouchstart\" in document.documentElement\n        , preventDefault: !1\n        , moveThreshold: 75\n        , timeThreshold: 200\n    };\n    var o, a, r, l, d = !1;\n    t.event.special.swipe = {\n        setup: s\n    }, t.each([\"left\", \"up\", \"down\", \"right\"], function () {\n        t.event.special[\"swipe\" + this] = {\n            setup: function () {\n                t(this).on(\"swipe\", t.noop)\n            }\n        }\n    })\n}(jQuery), ! function (t) {\n    t.fn.addTouch = function () {\n        this.each(function (i, n) {\n            t(n).bind(\"touchstart touchmove touchend touchcancel\", function () {\n                e(event)\n            })\n        });\n        var e = function (t) {\n            var e = t.changedTouches\n                , i = e[0]\n                , n = {\n                    touchstart: \"mousedown\"\n                    , touchmove: \"mousemove\"\n                    , touchend: \"mouseup\"\n                }\n                , s = n[t.type]\n                , o = document.createEvent(\"MouseEvent\");\n            o.initMouseEvent(s, !0, !0, window, 1, i.screenX, i.screenY, i.clientX, i.clientY, !1, !1, !1, !1, 0, null), i.target.dispatchEvent(o)\n        }\n    }\n}(jQuery), ! function (t, e) {\n    \"use strict\";\n    e(document).on(\"click.zf.trigger\", \"[data-open]\", function () {\n        var t = e(this).data(\"open\");\n        e(\"#\" + t).triggerHandler(\"open.zf.trigger\", [e(this)])\n    }), e(document).on(\"click.zf.trigger\", \"[data-close]\", function () {\n        var t = e(this).data(\"close\");\n        t ? e(\"#\" + t).triggerHandler(\"close.zf.trigger\", [e(this)]) : e(this).trigger(\"close.zf.trigger\")\n    }), e(document).on(\"click.zf.trigger\", \"[data-toggle]\", function () {\n        var t = e(this).data(\"toggle\");\n        e(\"#\" + t).triggerHandler(\"toggle.zf.trigger\", [e(this)])\n    }), e(document).on(\"close.zf.trigger\", \"[data-closable]\", function () {\n        var i = e(this).data(\"closable\") || \"fade-out\";\n        t.Motion ? t.Motion.animateOut(e(this), i, function () {\n            e(this).trigger(\"closed.zf\")\n        }) : e(this).fadeOut().trigger(\"closed.zf\")\n    });\n    var i = function () {\n            for (var t = [\"WebKit\", \"Moz\", \"O\", \"Ms\", \"\"], e = 0; e < t.length; e++)\n                if (t[e] + \"MutationObserver\" in window) return window[t[e] + \"MutationObserver\"];\n            return !1\n        }()\n        , n = function () {\n            r(), o(), a(), s()\n        };\n    e(window).load(function () {\n        n()\n    });\n    var s = function (t) {\n            var i = e(\"[data-yeti-box]\")\n                , n = [\"dropdown\", \"tooltip\", \"reveal\"];\n            if (t && (\"string\" == typeof t ? n.push(t) : \"object\" == typeof t && \"string\" == typeof t[0] ? n.concat(t) : console.error(\"Plugin names must be strings\")), i.length) {\n                var s = n.map(function (t) {\n                    return \"closeme.zf.\" + t\n                }).join(\" \");\n                e(window).off(s).on(s, function (t, i) {\n                    var n = t.namespace.split(\".\")[0]\n                        , s = e(\"[data-\" + n + \"]\").not('[data-yeti-box=\"' + i + '\"]');\n                    s.each(function () {\n                        var t = e(this);\n                        t.triggerHandler(\"close.zf.trigger\", [t])\n                    })\n                })\n            }\n        }\n        , o = function (t) {\n            var n, s = e(\"[data-resize]\");\n            s.length && e(window).off(\"resize.zf.trigger\").on(\"resize.zf.trigger\", function (o) {\n                n && clearTimeout(n), n = setTimeout(function () {\n                    i || s.each(function () {\n                        e(this).triggerHandler(\"resizeme.zf.trigger\")\n                    }), s.attr(\"data-events\", \"resize\")\n                }, t || 10)\n            })\n        }\n        , a = function (t) {\n            var n, s = e(\"[data-scroll]\");\n            s.length && e(window).off(\"scroll.zf.trigger\").on(\"scroll.zf.trigger\", function (o) {\n                n && clearTimeout(n), n = setTimeout(function () {\n                    i || s.each(function () {\n                        e(this).triggerHandler(\"scrollme.zf.trigger\")\n                    }), s.attr(\"data-events\", \"scroll\")\n                }, t || 10)\n            })\n        }\n        , r = function () {\n            if (!i) return !1;\n            var t = document.querySelectorAll(\"[data-resize], [data-scroll], [data-mutate]\")\n                , n = function (t) {\n                    var i = e(t[0].target);\n                    switch (i.attr(\"data-events\")) {\n                    case \"resize\":\n                        i.triggerHandler(\"resizeme.zf.trigger\", [i]);\n                        break;\n                    case \"scroll\":\n                        i.triggerHandler(\"scrollme.zf.trigger\", [i, window.pageYOffset]);\n                        break;\n                    default:\n                        return !1\n                    }\n                };\n            if (t.length)\n                for (var s = 0; s <= t.length - 1; s++) {\n                    var o = new i(n);\n                    o.observe(t[s], {\n                        attributes: !0\n                        , childList: !1\n                        , characterData: !1\n                        , subtree: !1\n                        , attributeFilter: [\"data-events\"]\n                    })\n                }\n        };\n    t.IHearYou = n\n}(window.Foundation, window.jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, this.$element.data(), s), this._init(), t.registerPlugin(this, \"Abide\")\n    }\n    i.defaults = {\n        validateOn: \"fieldChange\"\n        , labelErrorClass: \"is-invalid-label\"\n        , inputErrorClass: \"is-invalid-input\"\n        , formErrorSelector: \".form-error\"\n        , formErrorClass: \"is-visible\"\n        , liveValidate: !1\n        , patterns: {\n            alpha: /^[a-zA-Z]+$/\n            , alpha_numeric: /^[a-zA-Z0-9]+$/\n            , integer: /^[-+]?\\d+$/\n            , number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/\n            , card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/\n            , cvv: /^([0-9]){3,4}$/\n            , email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/\n            , url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/\n            , domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/\n            , datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/\n            , date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/\n            , time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/\n            , dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/\n            , month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/\n            , day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/\n            , color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n        }\n        , validators: {\n            equalTo: function (t, i, n) {\n                return e(\"#\" + t.attr(\"data-equalto\")).val() === t.val()\n            }\n        }\n    }, i.prototype._init = function () {\n        this.$inputs = this.$element.find(\"input, textarea, select\").not(\"[data-abide-ignore]\"), this._events()\n    }, i.prototype._events = function () {\n        var t = this;\n        this.$element.off(\".abide\").on(\"reset.zf.abide\", function (e) {\n            t.resetForm()\n        }).on(\"submit.zf.abide\", function (e) {\n            return t.validateForm()\n        }), \"fieldChange\" === this.options.validateOn && this.$inputs.off(\"change.zf.abide\").on(\"change.zf.abide\", function (i) {\n            t.validateInput(e(this))\n        }), this.options.liveValidate && this.$inputs.off(\"input.zf.abide\").on(\"input.zf.abide\", function (i) {\n            t.validateInput(e(this))\n        })\n    }, i.prototype._reflow = function () {\n        this._init()\n    }, i.prototype.requiredCheck = function (t) {\n        if (!t.attr(\"required\")) return !0;\n        var e = !0;\n        switch (t[0].type) {\n        case \"checkbox\":\n        case \"radio\":\n            e = t[0].checked;\n            break;\n        case \"select\":\n        case \"select-one\":\n        case \"select-multiple\":\n            var i = t.find(\"option:selected\");\n            i.length && i.val() || (e = !1);\n            break;\n        default:\n            t.val() && t.val().length || (e = !1)\n        }\n        return e\n    }, i.prototype.findFormError = function (t) {\n        var e = t.siblings(this.options.formErrorSelector);\n        return e.length || (e = t.parent().find(this.options.formErrorSelector)), e\n    }, i.prototype.findLabel = function (t) {\n        var e = this.$element.find('label[for=\"' + t[0].id + '\"]');\n        return e.length ? e : t.closest(\"label\")\n    }, i.prototype.addErrorClasses = function (t) {\n        var e = this.findLabel(t)\n            , i = this.findFormError(t);\n        e.length && e.addClass(this.options.labelErrorClass), i.length && i.addClass(this.options.formErrorClass), t.addClass(this.options.inputErrorClass).attr(\"data-invalid\", \"\")\n    }, i.prototype.removeErrorClasses = function (t) {\n        var e = this.findLabel(t)\n            , i = this.findFormError(t);\n        e.length && e.removeClass(this.options.labelErrorClass), i.length && i.removeClass(this.options.formErrorClass), t.removeClass(this.options.inputErrorClass).removeAttr(\"data-invalid\")\n    }, i.prototype.validateInput = function (t) {\n        var e = this.requiredCheck(t)\n            , i = !1\n            , n = !0\n            , s = t.attr(\"data-validator\")\n            , o = !0;\n        switch (t[0].type) {\n        case \"radio\":\n            i = this.validateRadio(t.attr(\"name\"));\n            break;\n        case \"checkbox\":\n            i = e;\n            break;\n        case \"select\":\n        case \"select-one\":\n        case \"select-multiple\":\n            i = e;\n            break;\n        default:\n            i = this.validateText(t)\n        }\n        s && (n = this.matchValidation(t, s, t.attr(\"required\"))), t.attr(\"data-equalto\") && (o = this.options.validators.equalTo(t));\n        var a = -1 === [e, i, n, o].indexOf(!1)\n            , r = (a ? \"valid\" : \"invalid\") + \".zf.abide\";\n        return this[a ? \"removeErrorClasses\" : \"addErrorClasses\"](t), t.trigger(r, t[0]), a\n    }, i.prototype.validateForm = function () {\n        var t = []\n            , i = this;\n        this.$inputs.each(function () {\n            t.push(i.validateInput(e(this)))\n        });\n        var n = -1 === t.indexOf(!1);\n        return this.$element.find(\"[data-abide-error]\").css(\"display\", n ? \"none\" : \"block\"), this.$element.trigger((n ? \"formvalid\" : \"forminvalid\") + \".zf.abide\", [this.$element]), n\n    }, i.prototype.validateText = function (t, e) {\n        e = e || t.attr(\"pattern\") || t.attr(\"type\");\n        var i = t.val();\n        return i.length ? this.options.patterns.hasOwnProperty(e) ? this.options.patterns[e].test(i) : e && e !== t.attr(\"type\") ? new RegExp(e).test(i) : !0 : !0\n    }, i.prototype.validateRadio = function (t) {\n        var i = this.$element.find(':radio[name=\"' + t + '\"]')\n            , n = []\n            , s = this;\n        return i.each(function () {\n            var t = e(this)\n                , i = s.requiredCheck(t);\n            n.push(i), i && s.removeErrorClasses(t)\n        }), -1 === n.indexOf(!1)\n    }, i.prototype.matchValidation = function (t, e, i) {\n        var n = this;\n        i = i ? !0 : !1;\n        var s = e.split(\" \").map(function (e) {\n            return n.options.validators[e](t, i, t.parent())\n        });\n        return -1 === s.indexOf(!1)\n    }, i.prototype.resetForm = function () {\n        var t = this.$element\n            , i = this.options;\n        e(\".\" + i.labelErrorClass, t).not(\"small\").removeClass(i.labelErrorClass), e(\".\" + i.inputErrorClass, t).not(\"small\").removeClass(i.inputErrorClass), e(i.formErrorSelector + \".\" + i.formErrorClass).removeClass(i.formErrorClass), t.find(\"[data-abide-error]\").css(\"display\", \"none\"), e(\":input\", t).not(\":button, :submit, :reset, :hidden, [data-abide-ignore]\").val(\"\").removeAttr(\"data-invalid\"), t.trigger(\"formreset.zf.abide\", [t])\n    }, i.prototype.destroy = function () {\n        var i = this;\n        this.$element.off(\".abide\").find(\"[data-abide-error]\").css(\"display\", \"none\"), this.$inputs.off(\".abide\").each(function () {\n            i.removeErrorClasses(e(this))\n        }), t.unregisterPlugin(this)\n    }, t.plugin(i, \"Abide\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), e.registerPlugin(this, \"Accordion\"), e.Keyboard.register(\"Accordion\", {\n            ENTER: \"toggle\"\n            , SPACE: \"toggle\"\n            , ARROW_DOWN: \"next\"\n            , ARROW_UP: \"previous\"\n        })\n    }\n    i.defaults = {\n        slideSpeed: 250\n        , multiExpand: !1\n        , allowAllClosed: !1\n    }, i.prototype._init = function () {\n        this.$element.attr(\"role\", \"tablist\"), this.$tabs = this.$element.children(\"li\"), 0 == this.$tabs.length && (this.$tabs = this.$element.children(\"[data-accordion-item]\")), this.$tabs.each(function (i, n) {\n            var s = t(n)\n                , o = s.find(\"[data-tab-content]\")\n                , a = o[0].id || e.GetYoDigits(6, \"accordion\")\n                , r = n.id || a + \"-label\";\n            s.find(\"a:first\").attr({\n                \"aria-controls\": a\n                , role: \"tab\"\n                , id: r\n                , \"aria-expanded\": !1\n                , \"aria-selected\": !1\n            }), o.attr({\n                role: \"tabpanel\"\n                , \"aria-labelledby\": r\n                , \"aria-hidden\": !0\n                , id: a\n            })\n        });\n        var i = this.$element.find(\".is-active\").children(\"[data-tab-content]\");\n        i.length && this.down(i, !0), this._events()\n    }, i.prototype._events = function () {\n        var i = this;\n        this.$tabs.each(function () {\n            var n = t(this)\n                , s = n.children(\"[data-tab-content]\");\n            s.length && n.children(\"a\").off(\"click.zf.accordion keydown.zf.accordion\").on(\"click.zf.accordion\", function (t) {\n                t.preventDefault(), n.hasClass(\"is-active\") ? (i.options.allowAllClosed || n.siblings().hasClass(\"is-active\")) && i.up(s) : i.down(s)\n            }).on(\"keydown.zf.accordion\", function (t) {\n                e.Keyboard.handleKey(t, \"Accordion\", {\n                    toggle: function () {\n                        i.toggle(s)\n                    }\n                    , next: function () {\n                        n.next().find(\"a\").focus().trigger(\"click.zf.accordion\")\n                    }\n                    , previous: function () {\n                        n.prev().find(\"a\").focus().trigger(\"click.zf.accordion\")\n                    }\n                    , handled: function () {\n                        t.preventDefault(), t.stopPropagation()\n                    }\n                })\n            })\n        })\n    }, i.prototype.toggle = function (t) {\n        if (t.parent().hasClass(\"is-active\")) {\n            if (!this.options.allowAllClosed && !t.parent().siblings().hasClass(\"is-active\")) return;\n            this.up(t)\n        }\n        else this.down(t)\n    }, i.prototype.down = function (e, i) {\n        var n = this;\n        if (!this.options.multiExpand && !i) {\n            var s = this.$element.find(\".is-active\").children(\"[data-tab-content]\");\n            s.length && this.up(s)\n        }\n        e.attr(\"aria-hidden\", !1).parent(\"[data-tab-content]\").addBack().parent().addClass(\"is-active\"), e.slideDown(n.options.slideSpeed), t(\"#\" + e.attr(\"aria-labelledby\")).attr({\n            \"aria-expanded\": !0\n            , \"aria-selected\": !0\n        }), this.$element.trigger(\"down.zf.accordion\", [e])\n    }, i.prototype.up = function (e) {\n        var i = e.parent().siblings()\n            , n = this\n            , s = this.options.multiExpand ? i.hasClass(\"is-active\") : e.parent().hasClass(\"is-active\");\n        (this.options.allowAllClosed || s) && (e.slideUp(n.options.slideSpeed), e.attr(\"aria-hidden\", !0).parent().removeClass(\"is-active\"), t(\"#\" + e.attr(\"aria-labelledby\")).attr({\n            \"aria-expanded\": !1\n            , \"aria-selected\": !1\n        }), this.$element.trigger(\"up.zf.accordion\", [e]))\n    }, i.prototype.destroy = function () {\n        this.$element.find(\"[data-tab-content]\").slideUp(0).css(\"display\", \"\"), this.$element.find(\"a\").off(\".zf.accordion\"), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Accordion\")\n}(jQuery, window.Foundation), ! function (t) {\n    \"use strict\";\n\n    function e(i, n) {\n        this.$element = i, this.options = t.extend({}, e.defaults, this.$element.data(), n), Foundation.Nest.Feather(this.$element, \"accordion\"), this._init(), Foundation.registerPlugin(this, \"AccordionMenu\"), Foundation.Keyboard.register(\"AccordionMenu\", {\n            ENTER: \"toggle\"\n            , SPACE: \"toggle\"\n            , ARROW_RIGHT: \"open\"\n            , ARROW_UP: \"up\"\n            , ARROW_DOWN: \"down\"\n            , ARROW_LEFT: \"close\"\n            , ESCAPE: \"closeAll\"\n            , TAB: \"down\"\n            , SHIFT_TAB: \"up\"\n        })\n    }\n    e.defaults = {\n        slideSpeed: 250\n        , multiOpen: !0\n    }, e.prototype._init = function () {\n        this.$element.find(\"[data-submenu]\").not(\".is-active\").slideUp(0), this.$element.attr({\n            role: \"tablist\"\n            , \"aria-multiselectable\": this.options.multiOpen\n        }), this.$menuLinks = this.$element.find(\".has-submenu\"), this.$menuLinks.each(function () {\n            var e = this.id || Foundation.GetYoDigits(6, \"acc-menu-link\")\n                , i = t(this)\n                , n = i.children(\"[data-submenu]\")\n                , s = n[0].id || Foundation.GetYoDigits(6, \"acc-menu\")\n                , o = n.hasClass(\"is-active\");\n            i.attr({\n                \"aria-controls\": s\n                , \"aria-expanded\": o\n                , \"aria-selected\": !1\n                , role: \"tab\"\n                , id: e\n            }), n.attr({\n                \"aria-labelledby\": e\n                , \"aria-hidden\": !o\n                , role: \"tabpanel\"\n                , id: s\n            })\n        });\n        var e = this.$element.find(\".is-active\");\n        if (e.length) {\n            var i = this;\n            e.each(function () {\n                i.down(t(this))\n            })\n        }\n        this._events()\n    }, e.prototype._events = function () {\n        var e = this;\n        this.$element.find(\"li\").each(function () {\n            var i = t(this).children(\"[data-submenu]\");\n            i.length && t(this).children(\"a\").off(\"click.zf.accordionmenu\").on(\"click.zf.accordionmenu\", function (t) {\n                t.preventDefault(), e.toggle(i)\n            })\n        }).on(\"keydown.zf.accordionmenu\", function (i) {\n            var n, s, o = t(this)\n                , a = o.parent(\"ul\").children(\"li\")\n                , r = o.children(\"[data-submenu]\");\n            a.each(function (e) {\n                return t(this).is(o) ? (n = a.eq(Math.max(0, e - 1)), s = a.eq(Math.min(e + 1, a.length - 1)), t(this).children(\"[data-submenu]:visible\").length && (s = o.find(\"li:first-child\")), t(this).is(\":first-child\") ? n = o.parents(\"li\").first() : n.children(\"[data-submenu]:visible\").length && (n = n.find(\"li:last-child\")), void(t(this).is(\":last-child\") && (s = o.parents(\"li\").first().next(\"li\")))) : void 0\n            }), Foundation.Keyboard.handleKey(i, \"AccordionMenu\", {\n                open: function () {\n                    r.is(\":hidden\") && (e.down(r), r.find(\"li\").first().focus())\n                }\n                , close: function () {\n                    r.length && !r.is(\":hidden\") ? e.up(r) : o.parent(\"[data-submenu]\").length && (e.up(o.parent(\"[data-submenu]\")), o.parents(\"li\").first().focus())\n                }\n                , up: function () {\n                    n.focus()\n                }\n                , down: function () {\n                    s.focus()\n                }\n                , toggle: function () {\n                    o.children(\"[data-submenu]\").length && e.toggle(o.children(\"[data-submenu]\"))\n                }\n                , closeAll: function () {\n                    e.hideAll()\n                }\n                , handled: function () {\n                    i.preventDefault(), i.stopImmediatePropagation()\n                }\n            })\n        })\n    }, e.prototype.hideAll = function () {\n        this.$element.find(\"[data-submenu]\").slideUp(this.options.slideSpeed)\n    }, e.prototype.toggle = function (t) {\n        t.is(\":animated\") || (t.is(\":hidden\") ? this.down(t) : this.up(t))\n    }, e.prototype.down = function (t) {\n        var e = this;\n        this.options.multiOpen || this.up(this.$element.find(\".is-active\").not(t.parentsUntil(this.$element).add(t))), t.addClass(\"is-active\").attr({\n            \"aria-hidden\": !1\n        }).parent(\".has-submenu\").attr({\n            \"aria-expanded\": !0\n            , \"aria-selected\": !0\n        }), Foundation.Move(this.options.slideSpeed, t, function () {\n            t.slideDown(e.options.slideSpeed)\n        }), this.$element.trigger(\"down.zf.accordionMenu\", [t])\n    }, e.prototype.up = function (t) {\n        var e = this;\n        Foundation.Move(this.options.slideSpeed, t, function () {\n            t.slideUp(e.options.slideSpeed)\n        }), t.attr(\"aria-hidden\", !0).find(\"[data-submenu]\").slideUp(0).attr(\"aria-hidden\", !0).end().parent(\".has-submenu\").attr({\n            \"aria-expanded\": !1\n            , \"aria-selected\": !1\n        }), this.$element.trigger(\"up.zf.accordionMenu\", [t])\n    }, e.prototype.destroy = function () {\n        this.$element.find(\"[data-submenu]\").slideDown(0).css(\"display\", \"\"), this.$element.find(\"a\").off(\"click.zf.accordionMenu\"), Foundation.Nest.Burn(this.$element, \"accordion\"), Foundation.unregisterPlugin(this)\n    }, Foundation.plugin(e, \"AccordionMenu\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), e.Nest.Feather(this.$element, \"drilldown\"), this._init(), e.registerPlugin(this, \"Drilldown\"), e.Keyboard.register(\"Drilldown\", {\n            ENTER: \"open\"\n            , SPACE: \"open\"\n            , ARROW_RIGHT: \"next\"\n            , ARROW_UP: \"up\"\n            , ARROW_DOWN: \"down\"\n            , ARROW_LEFT: \"previous\"\n            , ESCAPE: \"close\"\n            , TAB: \"down\"\n            , SHIFT_TAB: \"up\"\n        })\n    }\n    i.defaults = {\n        backButton: '<li class=\"js-drilldown-back\"><a>Back</a></li>'\n        , wrapper: \"<div></div>\"\n        , closeOnClick: !1\n    }, i.prototype._init = function () {\n        this.$submenuAnchors = this.$element.find(\"li.has-submenu\"), this.$submenus = this.$submenuAnchors.children(\"[data-submenu]\"), this.$menuItems = this.$element.find(\"li\").not(\".js-drilldown-back\").attr(\"role\", \"menuitem\"), this._prepareMenu(), this._keyboardEvents()\n    }, i.prototype._prepareMenu = function () {\n        var e = this;\n        this.$submenuAnchors.each(function () {\n            var i = t(this)\n                , n = i.find(\"a:first\");\n            n.data(\"savedHref\", n.attr(\"href\")).removeAttr(\"href\"), i.children(\"[data-submenu]\").attr({\n                \"aria-hidden\": !0\n                , tabindex: 0\n                , role: \"menu\"\n            }), e._events(i)\n        }), this.$submenus.each(function () {\n            var i = t(this)\n                , n = i.find(\".js-drilldown-back\");\n            n.length || i.prepend(e.options.backButton), e._back(i)\n        }), this.$element.parent().hasClass(\"is-drilldown\") || (this.$wrapper = t(this.options.wrapper).addClass(\"is-drilldown\").css(this._getMaxDims()), this.$element.wrap(this.$wrapper))\n    }, i.prototype._events = function (e) {\n        var i = this;\n        e.off(\"click.zf.drilldown\").on(\"click.zf.drilldown\", function (n) {\n            if (t(n.target).parentsUntil(\"ul\", \"li\").hasClass(\"is-drilldown-submenu-parent\") && (n.stopImmediatePropagation(), n.preventDefault()), i._show(e), i.options.closeOnClick) {\n                var s = t(\"body\").not(i.$wrapper);\n                s.off(\".zf.drilldown\").on(\"click.zf.drilldown\", function (t) {\n                    t.preventDefault(), i._hideAll(), s.off(\".zf.drilldown\")\n                })\n            }\n        })\n    }, i.prototype._keyboardEvents = function () {\n        var i = this;\n        this.$menuItems.add(this.$element.find(\".js-drilldown-back\")).on(\"keydown.zf.drilldown\", function (n) {\n            var s, o, a = t(this)\n                , r = a.parent(\"ul\").children(\"li\");\n            r.each(function (e) {\n                return t(this).is(a) ? (s = r.eq(Math.max(0, e - 1)), void(o = r.eq(Math.min(e + 1, r.length - 1)))) : void 0\n            }), e.Keyboard.handleKey(n, \"Drilldown\", {\n                next: function () {\n                    a.is(i.$submenuAnchors) && (i._show(a), a.on(e.transitionend(a), function () {\n                        a.find(\"ul li\").filter(i.$menuItems).first().focus()\n                    }))\n                }\n                , previous: function () {\n                    i._hide(a.parent(\"ul\")), a.parent(\"ul\").on(e.transitionend(a), function () {\n                        setTimeout(function () {\n                            a.parent(\"ul\").parent(\"li\").focus()\n                        }, 1)\n                    })\n                }\n                , up: function () {\n                    s.focus()\n                }\n                , down: function () {\n                    o.focus()\n                }\n                , close: function () {\n                    i._back()\n                }\n                , open: function () {\n                    a.is(i.$menuItems) ? a.is(i.$submenuAnchors) && (i._show(a), setTimeout(function () {\n                        a.find(\"ul li\").filter(i.$menuItems).first().focus()\n                    }, 1)) : (i._hide(a.parent(\"ul\")), setTimeout(function () {\n                        a.parent(\"ul\").parent(\"li\").focus()\n                    }, 1))\n                }\n                , handled: function () {\n                    n.preventDefault(), n.stopImmediatePropagation()\n                }\n            })\n        })\n    }, i.prototype._hideAll = function () {\n        var t = this.$element.find(\".is-drilldown-sub.is-active\").addClass(\"is-closing\");\n        t.one(e.transitionend(t), function (e) {\n            t.removeClass(\"is-active is-closing\")\n        }), this.$element.trigger(\"closed.zf.drilldown\")\n    }, i.prototype._back = function (t) {\n        var e = this;\n        t.off(\"click.zf.drilldown\"), t.children(\".js-drilldown-back\").on(\"click.zf.drilldown\", function (i) {\n            i.stopImmediatePropagation(), e._hide(t)\n        })\n    }, i.prototype._menuLinkEvents = function () {\n        var t = this;\n        this.$menuItems.not(\".has-submenu\").off(\"click.zf.drilldown\").on(\"click.zf.drilldown\", function (e) {\n            setTimeout(function () {\n                t._hideAll()\n            }, 0)\n        })\n    }, i.prototype._show = function (t) {\n        var _childUl = t.children(\"[data-submenu]\"),\n            _childNodesCount = _childUl[0].children.length,\n            _parent = t.parents(\".is-drilldown\"),\n            _parentHeight = t.outerHeight() * _childNodesCount;     \n        this._autoHeight(_parentHeight,_parent);    \n        t.children(\"[data-submenu]\").addClass(\"is-active\"), this.$element.trigger(\"open.zf.drilldown\", [t])\n    }, i.prototype._hide = function (t) {\n        var _parentUl = t.parents(\"ul\"),\n            _parentNodesCount = _parentUl[0].children.length,\n            _parent = t.parents(\".is-drilldown\"),\n            _parentHeight = _parentUl.children(\"li\").outerHeight() * _parentNodesCount;\n        \n        this._autoHeight(_parentHeight,_parent);    \n        \n        t.addClass(\"is-closing\").one(e.transitionend(t), function () {\n            t.removeClass(\"is-active is-closing\")\n        }), t.trigger(\"hide.zf.drilldown\", [t])\n    }, i.prototype._autoHeight = function(height,_parent){\n        _parent[0].style.height = height + \"px\";\n    }, i.prototype._getMaxDims = function () {\n        var e = 0\n            , i = {};\n        return this.$submenus.add(this.$element).each(function () {\n            var i = t(this).children(\"li\").length;\n            e = i > e ? i : e\n        }), i.height = e * this.$menuItems[0].getBoundingClientRect().height + \"px\", i.width = this.$element[0].getBoundingClientRect().width + \"px\", i\n    }, i.prototype.destroy = function () {\n        this._hideAll(), e.Nest.Burn(this.$element, \"drilldown\"), this.$element.unwrap().find(\".js-drilldown-back\").remove().end().find(\".is-active, .is-closing, .is-drilldown-sub\").removeClass(\"is-active is-closing is-drilldown-sub\").end().find(\"[data-submenu]\").removeAttr(\"aria-hidden tabindex role\").off(\".zf.drilldown\").end().off(\"zf.drilldown\"), this.$element.find(\"a\").each(function () {\n            var e = t(this);\n            e.data(\"savedHref\") && e.attr(\"href\", e.data(\"savedHref\")).removeData(\"savedHref\")\n        }), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Drilldown\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), e.registerPlugin(this, \"Dropdown\"), e.Keyboard.register(\"Dropdown\", {\n            ENTER: \"open\"\n            , SPACE: \"open\"\n            , ESCAPE: \"close\"\n            , TAB: \"tab_forward\"\n            , SHIFT_TAB: \"tab_backward\"\n        })\n    }\n    i.defaults = {\n        hoverDelay: 250\n        , hover: !1\n        , hoverPane: !1\n        , vOffset: 1\n        , hOffset: 1\n        , positionClass: \"\"\n        , trapFocus: !1\n        , autoFocus: !1\n        , closeOnClick: !1\n    }, i.prototype._init = function () {\n        var i = this.$element.attr(\"id\");\n        this.$anchor = t('[data-toggle=\"' + i + '\"]') || t('[data-open=\"' + i + '\"]'), this.$anchor.attr({\n            \"aria-controls\": i\n            , \"data-is-focus\": !1\n            , \"data-yeti-box\": i\n            , \"aria-haspopup\": !0\n            , \"aria-expanded\": !1\n        }), this.options.positionClass = this.getPositionClass(), this.counter = 4, this.usedPositions = [], this.$element.attr({\n            \"aria-hidden\": \"true\"\n            , \"data-yeti-box\": i\n            , \"data-resize\": i\n            , \"aria-labelledby\": this.$anchor[0].id || e.GetYoDigits(6, \"dd-anchor\")\n        }), this._events()\n    }, i.prototype.getPositionClass = function () {\n        var t = this.$element[0].className.match(/(top|left|right)/g);\n        return t = t ? t[0] : \"\"\n    }, i.prototype._reposition = function (t) {\n        this.usedPositions.push(t ? t : \"bottom\"), !t && this.usedPositions.indexOf(\"top\") < 0 ? this.$element.addClass(\"top\") : \"top\" === t && this.usedPositions.indexOf(\"bottom\") < 0 ? this.$element.removeClass(t) : \"left\" === t && this.usedPositions.indexOf(\"right\") < 0 ? this.$element.removeClass(t).addClass(\"right\") : \"right\" === t && this.usedPositions.indexOf(\"left\") < 0 ? this.$element.removeClass(t).addClass(\"left\") : !t && this.usedPositions.indexOf(\"top\") > -1 && this.usedPositions.indexOf(\"left\") < 0 ? this.$element.addClass(\"left\") : \"top\" === t && this.usedPositions.indexOf(\"bottom\") > -1 && this.usedPositions.indexOf(\"left\") < 0 ? this.$element.removeClass(t).addClass(\"left\") : \"left\" === t && this.usedPositions.indexOf(\"right\") > -1 && this.usedPositions.indexOf(\"bottom\") < 0 ? this.$element.removeClass(t) : \"right\" === t && this.usedPositions.indexOf(\"left\") > -1 && this.usedPositions.indexOf(\"bottom\") < 0 ? this.$element.removeClass(t) : this.$element.removeClass(t), this.classChanged = !0, this.counter--\n    }, i.prototype._setPosition = function () {\n        if (\"false\" === this.$anchor.attr(\"aria-expanded\")) return !1;\n        var t = this.getPositionClass()\n            , i = e.Box.GetDimensions(this.$element)\n            , n = (e.Box.GetDimensions(this.$anchor), \"left\" === t ? \"left\" : \"right\" === t ? \"left\" : \"top\")\n            , s = \"top\" === n ? \"height\" : \"width\";\n        \"height\" === s ? this.options.vOffset : this.options.hOffset;\n        if (i.width >= i.windowDims.width || !this.counter && !e.Box.ImNotTouchingYou(this.$element)) return this.$element.offset(e.Box.GetOffsets(this.$element, this.$anchor, \"center bottom\", this.options.vOffset, this.options.hOffset, !0)).css({\n            width: i.windowDims.width - 2 * this.options.hOffset\n            , height: \"auto\"\n        }), this.classChanged = !0, !1;\n        for (this.$element.offset(e.Box.GetOffsets(this.$element, this.$anchor, t, this.options.vOffset, this.options.hOffset)); !e.Box.ImNotTouchingYou(this.$element) && this.counter;) this._reposition(t), this._setPosition()\n    }, i.prototype._events = function () {\n        var i = this;\n        this.$element.on({\n            \"open.zf.trigger\": this.open.bind(this)\n            , \"close.zf.trigger\": this.close.bind(this)\n            , \"toggle.zf.trigger\": this.toggle.bind(this)\n            , \"resizeme.zf.trigger\": this._setPosition.bind(this)\n        }), this.options.hover && (this.$anchor.off(\"mouseenter.zf.dropdown mouseleave.zf.dropdown\").on(\"mouseenter.zf.dropdown\", function () {\n            clearTimeout(i.timeout), i.timeout = setTimeout(function () {\n                i.open(), i.$anchor.data(\"hover\", !0)\n            }, i.options.hoverDelay)\n        }).on(\"mouseleave.zf.dropdown\", function () {\n            clearTimeout(i.timeout), i.timeout = setTimeout(function () {\n                i.close(), i.$anchor.data(\"hover\", !1)\n            }, i.options.hoverDelay)\n        }), this.options.hoverPane && this.$element.off(\"mouseenter.zf.dropdown mouseleave.zf.dropdown\").on(\"mouseenter.zf.dropdown\", function () {\n            clearTimeout(i.timeout)\n        }).on(\"mouseleave.zf.dropdown\", function () {\n            clearTimeout(i.timeout), i.timeout = setTimeout(function () {\n                i.close(), i.$anchor.data(\"hover\", !1)\n            }, i.options.hoverDelay)\n        })), this.$anchor.add(this.$element).on(\"keydown.zf.dropdown\", function (n) {\n            var s = t(this)\n                , o = e.Keyboard.findFocusable(i.$element);\n            e.Keyboard.handleKey(n, \"Dropdown\", {\n                tab_forward: function () {\n                    i.$element.find(\":focus\").is(o.eq(-1)) && (i.options.trapFocus ? (o.eq(0).focus(), n.preventDefault()) : i.close())\n                }\n                , tab_backward: function () {\n                    (i.$element.find(\":focus\").is(o.eq(0)) || i.$element.is(\":focus\")) && (i.options.trapFocus ? (o.eq(-1).focus(), n.preventDefault()) : i.close())\n                }\n                , open: function () {\n                    s.is(i.$anchor) && (i.open(), i.$element.attr(\"tabindex\", -1).focus(), n.preventDefault())\n                }\n                , close: function () {\n                    i.close(), i.$anchor.focus()\n                }\n            })\n        })\n    }, i.prototype._addBodyHandler = function () {\n        var e = t(document.body).not(this.$element)\n            , i = this;\n        e.off(\"click.zf.dropdown\").on(\"click.zf.dropdown\", function (t) {\n            i.$anchor.is(t.target) || i.$anchor.find(t.target).length || i.$element.find(t.target).length || (i.close(), e.off(\"click.zf.dropdown\"))\n        })\n    }, i.prototype.open = function () {\n        if (this.$element.trigger(\"closeme.zf.dropdown\", this.$element.attr(\"id\")), this.$anchor.addClass(\"hover\").attr({\n                \"aria-expanded\": !0\n            }), this._setPosition(), this.$element.addClass(\"is-open\").attr({\n                \"aria-hidden\": !1\n            }), this.options.autoFocus) {\n            var t = e.Keyboard.findFocusable(this.$element);\n            t.length && t.eq(0).focus()\n        }\n        this.options.closeOnClick && this._addBodyHandler(), this.$element.trigger(\"show.zf.dropdown\", [this.$element])\n    }, i.prototype.close = function () {\n        if (!this.$element.hasClass(\"is-open\")) return !1;\n        if (this.$element.removeClass(\"is-open\").attr({\n                \"aria-hidden\": !0\n            }), this.$anchor.removeClass(\"hover\").attr(\"aria-expanded\", !1), this.classChanged) {\n            var t = this.getPositionClass();\n            t && this.$element.removeClass(t), this.$element.addClass(this.options.positionClass).css({\n                height: \"\"\n                , width: \"\"\n            }), this.classChanged = !1, this.counter = 4, this.usedPositions.length = 0\n        }\n        this.$element.trigger(\"hide.zf.dropdown\", [this.$element])\n    }, i.prototype.toggle = function () {\n        if (this.$element.hasClass(\"is-open\")) {\n            if (this.$anchor.data(\"hover\")) return;\n            this.close()\n        }\n        else this.open()\n    }, i.prototype.destroy = function () {\n        this.$element.off(\".zf.trigger\").hide(), this.$anchor.off(\".zf.dropdown\"), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Dropdown\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), e.Nest.Feather(this.$element, \"dropdown\"), this._init(), e.registerPlugin(this, \"DropdownMenu\"), e.Keyboard.register(\"DropdownMenu\", {\n            ENTER: \"open\"\n            , SPACE: \"open\"\n            , ARROW_RIGHT: \"next\"\n            , ARROW_UP: \"up\"\n            , ARROW_DOWN: \"down\"\n            , ARROW_LEFT: \"previous\"\n            , ESCAPE: \"close\"\n        })\n    }\n    i.defaults = {\n        disableHover: !1\n        , autoclose: !0\n        , hoverDelay: 50\n        , clickOpen: !1\n        , closingTime: 500\n        , alignment: \"left\"\n        , closeOnClick: !0\n        , verticalClass: \"vertical\"\n        , rightClass: \"align-right\"\n        , forceFollow: !0\n    }, i.prototype._init = function () {\n        var t = this.$element.find(\"li.is-dropdown-submenu-parent\");\n        this.$element.children(\".is-dropdown-submenu-parent\").children(\".is-dropdown-submenu\").addClass(\"first-sub\"), this.$menuItems = this.$element.find('[role=\"menuitem\"]'), this.$tabs = this.$element.children('[role=\"menuitem\"]'), this.isVert = this.$element.hasClass(this.options.verticalClass), this.$tabs.find(\"ul.is-dropdown-submenu\").addClass(this.options.verticalClass), this.$element.hasClass(this.options.rightClass) || \"right\" === this.options.alignment ? (this.options.alignment = \"right\", t.addClass(\"is-left-arrow opens-left\")) : t.addClass(\"is-right-arrow opens-right\"), this.isVert || this.$tabs.filter(\".is-dropdown-submenu-parent\").removeClass(\"is-right-arrow is-left-arrow opens-right opens-left\").addClass(\"is-down-arrow\"), this.changed = !1, this._events()\n    }, i.prototype._events = function () {\n        var i, n = this\n            , s = \"ontouchstart\" in window || \"undefined\" != typeof window.ontouchstart\n            , o = \"is-dropdown-submenu-parent\";\n        (this.options.clickOpen || s) && this.$menuItems.on(\"click.zf.dropdownmenu touchstart.zf.dropdownmenu\", function (e) {\n            var i = t(e.target).parentsUntil(\"ul\", \".\" + o)\n                , a = i.hasClass(o)\n                , r = \"true\" === i.attr(\"data-is-click\");\n            i.children(\".is-dropdown-submenu\");\n            if (a)\n                if (r) {\n                    if (!n.options.closeOnClick || !n.options.clickOpen && !s || n.options.forceFollow && s) return;\n                    e.stopImmediatePropagation(), e.preventDefault(), n._hide(i)\n                }\n                else e.preventDefault(), e.stopImmediatePropagation(), n._show(i.children(\".is-dropdown-submenu\")), i.add(i.parentsUntil(n.$element, \".\" + o)).attr(\"data-is-click\", !0)\n        }), this.options.disableHover || this.$menuItems.on(\"mouseenter.zf.dropdownmenu\", function (e) {\n            e.stopImmediatePropagation();\n            var s = t(this)\n                , a = s.hasClass(o);\n            a && (clearTimeout(i), i = setTimeout(function () {\n                n._show(s.children(\".is-dropdown-submenu\"))\n            }, n.options.hoverDelay))\n        }).on(\"mouseleave.zf.dropdownmenu\", function (e) {\n            var s = t(this)\n                , a = s.hasClass(o);\n            if (a && n.options.autoclose) {\n                if (\"true\" === s.attr(\"data-is-click\") && n.options.clickOpen) return !1;\n                i = setTimeout(function () {\n                    n._hide(s)\n                }, n.options.closingTime)\n            }\n        }), this.$menuItems.on(\"keydown.zf.dropdownmenu\", function (i) {\n            var s, o, a = t(i.target).parentsUntil(\"ul\", '[role=\"menuitem\"]')\n                , r = n.$tabs.index(a) > -1\n                , l = r ? n.$tabs : a.siblings(\"li\").add(a);\n            l.each(function (e) {\n                return t(this).is(a) ? (s = l.eq(e - 1), void(o = l.eq(e + 1))) : void 0\n            });\n            var d = function () {\n                    a.is(\":last-child\") || o.children(\"a:first\").focus()\n                }\n                , h = function () {\n                    s.children(\"a:first\").focus()\n                }\n                , u = function () {\n                    var t = a.children(\"ul.is-dropdown-submenu\");\n                    t.length && (n._show(t), a.find(\"li > a:first\").focus())\n                }\n                , f = function () {\n                    var t = a.parent(\"ul\").parent(\"li\");\n                    t.children(\"a:first\").focus(), n._hide(t)\n                }\n                , c = {\n                    open: u\n                    , close: function () {\n                        n._hide(n.$element), n.$menuItems.find(\"a:first\").focus()\n                    }\n                    , handled: function () {\n                        i.preventDefault(), i.stopImmediatePropagation()\n                    }\n                };\n            r ? n.vertical ? \"left\" === n.options.alignment ? t.extend(c, {\n                down: d\n                , up: h\n                , next: u\n                , previous: f\n            }) : t.extend(c, {\n                down: d\n                , up: h\n                , next: f\n                , previous: u\n            }) : t.extend(c, {\n                next: d\n                , previous: h\n                , down: u\n                , up: f\n            }) : \"left\" === n.options.alignment ? t.extend(c, {\n                next: u\n                , previous: f\n                , down: d\n                , up: h\n            }) : t.extend(c, {\n                next: f\n                , previous: u\n                , down: d\n                , up: h\n            }), e.Keyboard.handleKey(i, \"DropdownMenu\", c)\n        })\n    }, i.prototype._addBodyHandler = function () {\n        var e = t(document.body)\n            , i = this;\n        e.off(\"mouseup.zf.dropdownmenu touchend.zf.dropdownmenu\").on(\"mouseup.zf.dropdownmenu touchend.zf.dropdownmenu\", function (t) {\n            var n = i.$element.find(t.target);\n            n.length || (i._hide(), e.off(\"mouseup.zf.dropdownmenu touchend.zf.dropdownmenu\"))\n        })\n    }, i.prototype._show = function (i) {\n        var n = this.$tabs.index(this.$tabs.filter(function (e, n) {\n                return t(n).find(i).length > 0\n            }))\n            , s = i.parent(\"li.is-dropdown-submenu-parent\").siblings(\"li.is-dropdown-submenu-parent\");\n        this._hide(s, n), i.css(\"visibility\", \"hidden\").addClass(\"js-dropdown-active\").attr({\n            \"aria-hidden\": !1\n        }).parent(\"li.is-dropdown-submenu-parent\").addClass(\"is-active\").attr({\n            \"aria-selected\": !0\n            , \"aria-expanded\": !0\n        });\n        var o = e.Box.ImNotTouchingYou(i, null, !0);\n        if (!o) {\n            var a = \"left\" === this.options.alignment ? \"-right\" : \"-left\"\n                , r = i.parent(\".is-dropdown-submenu-parent\");\n            r.removeClass(\"opens\" + a).addClass(\"opens-\" + this.options.alignment), o = e.Box.ImNotTouchingYou(i, null, !0), o || r.removeClass(\"opens-\" + this.options.alignment).addClass(\"opens-inner\"), this.changed = !0\n        }\n        i.css(\"visibility\", \"\"), this.options.closeOnClick && this._addBodyHandler(), this.$element.trigger(\"show.zf.dropdownmenu\", [i])\n    }, i.prototype._hide = function (t, e) {\n        var i;\n        i = t && t.length ? t : void 0 !== e ? this.$tabs.not(function (t, i) {\n            return t === e\n        }) : this.$element;\n        var n = i.hasClass(\"is-active\") || i.find(\".is-active\").length > 0;\n        if (n) {\n            if (i.find(\"li.is-active\").add(i).attr({\n                    \"aria-selected\": !1\n                    , \"aria-expanded\": !1\n                    , \"data-is-click\": !1\n                }).removeClass(\"is-active\"), i.find(\"ul.js-dropdown-active\").attr({\n                    \"aria-hidden\": !0\n                }).removeClass(\"js-dropdown-active\"), this.changed || i.find(\"opens-inner\").length) {\n                var s = \"left\" === this.options.alignment ? \"right\" : \"left\";\n                i.find(\"li.is-dropdown-submenu-parent\").add(i).removeClass(\"opens-inner opens-\" + this.options.alignment).addClass(\"opens-\" + s), this.changed = !1\n            }\n            this.$element.trigger(\"hide.zf.dropdownmenu\", [i])\n        }\n    }, i.prototype.destroy = function () {\n        this.$menuItems.off(\".zf.dropdownmenu\").removeAttr(\"data-is-click\").removeClass(\"is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner\"), e.Nest.Burn(this.$element, \"dropdown\"), e.unregisterPlugin(this)\n    }, e.plugin(i, \"DropdownMenu\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, this.$element.data(), s), this._init(), t.registerPlugin(this, \"Equalizer\")\n    }\n    i.defaults = {\n        equalizeOnStack: !0\n        , equalizeByRow: !1\n        , equalizeOn: \"\"\n    }, i.prototype._init = function () {\n        var i = this.$element.attr(\"data-equalizer\") || \"\"\n            , n = this.$element.find('[data-equalizer-watch=\"' + i + '\"]');\n        this.$watched = n.length ? n : this.$element.find(\"[data-equalizer-watch]\"), this.$element.attr(\"data-resize\", i || t.GetYoDigits(6, \"eq\")), this.hasNested = this.$element.find(\"[data-equalizer]\").length > 0, this.isNested = this.$element.parentsUntil(document.body, \"[data-equalizer]\").length > 0, this.isOn = !1;\n        var s, o = this.$element.find(\"img\");\n        this.options.equalizeOn ? (s = this._checkMQ(), e(window).on(\"changed.zf.mediaquery\", this._checkMQ.bind(this))) : this._events(), (void 0 !== s && s === !1 || void 0 === s) && (o.length ? t.onImagesLoaded(o, this._reflow.bind(this)) : this._reflow())\n    }, i.prototype._pauseEvents = function () {\n        this.isOn = !1, this.$element.off(\".zf.equalizer resizeme.zf.trigger\")\n    }, i.prototype._events = function () {\n        var t = this;\n        this._pauseEvents(), this.hasNested ? this.$element.on(\"postequalized.zf.equalizer\", function (e) {\n            e.target !== t.$element[0] && t._reflow()\n        }) : this.$element.on(\"resizeme.zf.trigger\", this._reflow.bind(this)), this.isOn = !0\n    }, i.prototype._checkMQ = function () {\n        var e = !t.MediaQuery.atLeast(this.options.equalizeOn);\n        return e ? this.isOn && (this._pauseEvents(), this.$watched.css(\"height\", \"auto\")) : this.isOn || this._events(), e\n    }, i.prototype._killswitch = function () {}, i.prototype._reflow = function () {\n        return !this.options.equalizeOnStack && this._isStacked() ? (this.$watched.css(\"height\", \"auto\"), !1) : void(this.options.equalizeByRow ? this.getHeightsByRow(this.applyHeightByRow.bind(this)) : this.getHeights(this.applyHeight.bind(this)))\n    }, i.prototype._isStacked = function () {\n        return this.$watched[0].offsetTop !== this.$watched[1].offsetTop\n    }, i.prototype.getHeights = function (t) {\n        for (var e = [], i = 0, n = this.$watched.length; n > i; i++) this.$watched[i].style.height = \"auto\", e.push(this.$watched[i].offsetHeight);\n        t(e)\n    }, i.prototype.getHeightsByRow = function (t) {\n        var i = this.$watched.first().offset().top\n            , n = []\n            , s = 0;\n        n[s] = [];\n        for (var o = 0, a = this.$watched.length; a > o; o++) {\n            this.$watched[o].style.height = \"auto\";\n            var r = e(this.$watched[o]).offset().top;\n            r != i && (s++, n[s] = [], i = r), n[s].push([this.$watched[o], this.$watched[o].offsetHeight])\n        }\n        for (var o = 0, a = n.length; a > o; o++) {\n            var l = e(n[o]).map(function () {\n                    return this[1]\n                }).get()\n                , d = Math.max.apply(null, l);\n            n[o].push(d)\n        }\n        t(n)\n    }, i.prototype.applyHeight = function (t) {\n        var e = Math.max.apply(null, t);\n        this.$element.trigger(\"preequalized.zf.equalizer\"), this.$watched.css(\"height\", e), this.$element.trigger(\"postequalized.zf.equalizer\")\n    }, i.prototype.applyHeightByRow = function (t) {\n        this.$element.trigger(\"preequalized.zf.equalizer\");\n        for (var i = 0, n = t.length; n > i; i++) {\n            var s = t[i].length\n                , o = t[i][s - 1];\n            if (2 >= s) e(t[i][0][0]).css({\n                height: \"auto\"\n            });\n            else {\n                this.$element.trigger(\"preequalizedrow.zf.equalizer\");\n                for (var a = 0, r = s - 1; r > a; a++) e(t[i][a][0]).css({\n                    height: o\n                });\n                this.$element.trigger(\"postequalizedrow.zf.equalizer\")\n            }\n        }\n        this.$element.trigger(\"postequalized.zf.equalizer\")\n    }, i.prototype.destroy = function () {\n        this._pauseEvents(), this.$watched.css(\"height\", \"auto\"), t.unregisterPlugin(this)\n    }, t.plugin(i, \"Equalizer\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, s), this.rules = [], this.currentPath = \"\", this._init(), this._events(), t.registerPlugin(this, \"Interchange\")\n    }\n    i.defaults = {\n        rules: null\n    }, i.SPECIAL_QUERIES = {\n        landscape: \"screen and (orientation: landscape)\"\n        , portrait: \"screen and (orientation: portrait)\"\n        , retina: \"only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)\"\n    }, i.prototype._init = function () {\n        this._addBreakpoints(), this._generateRules(), this._reflow()\n    }, i.prototype._events = function () {\n        e(window).on(\"resize.zf.interchange\", t.util.throttle(this._reflow.bind(this), 50))\n    }, i.prototype._reflow = function () {\n        var t;\n        for (var e in this.rules) {\n            var i = this.rules[e];\n            window.matchMedia(i.query).matches && (t = i)\n        }\n        t && this.replace(t.path)\n    }, i.prototype._addBreakpoints = function () {\n        for (var e in t.MediaQuery.queries) {\n            var n = t.MediaQuery.queries[e];\n            i.SPECIAL_QUERIES[n.name] = n.value\n        }\n    }, i.prototype._generateRules = function () {\n        var t, e = [];\n        t = this.options.rules ? this.options.rules : this.$element.data(\"interchange\").match(/\\[.*?\\]/g);\n        for (var n in t) {\n            var s = t[n].slice(1, -1).split(\", \")\n                , o = s.slice(0, -1).join(\"\")\n                , a = s[s.length - 1];\n            i.SPECIAL_QUERIES[a] && (a = i.SPECIAL_QUERIES[a]), e.push({\n                path: o\n                , query: a\n            })\n        }\n        this.rules = e\n    }, i.prototype.replace = function (t) {\n        if (this.currentPath !== t) {\n            var i = this;\n            \"IMG\" === this.$element[0].nodeName ? this.$element.attr(\"src\", t).load(function () {\n                i.currentPath = t\n            }) : t.match(/\\.(gif|jpg|jpeg|tiff|png)([?#].*)?/i) ? this.$element.css({\n                \"background-image\": \"url(\" + t + \")\"\n            }) : e.get(t, function (n) {\n                i.$element.html(n), e(n).foundation(), i.currentPath = t\n            }), this.$element.trigger(\"replaced.zf.interchange\")\n        }\n    }, i.prototype.destroy = function () {}, t.plugin(i, \"Interchange\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, this.$element.data(), s), this._init(), t.registerPlugin(this, \"Magellan\")\n    }\n    i.defaults = {\n        animationDuration: 500\n        , animationEasing: \"linear\"\n        , threshold: 50\n        , activeClass: \"active\"\n        , deepLinking: !1\n        , barOffset: 0\n    }, i.prototype._init = function () {\n        var i = this.$element[0].id || t.GetYoDigits(6, \"magellan\");\n        this.$targets = e(\"[data-magellan-target]\"), this.$links = this.$element.find(\"a\"), this.$element.attr({\n            \"data-resize\": i\n            , \"data-scroll\": i\n            , id: i\n        }), this.$active = e(), this.scrollPos = parseInt(window.pageYOffset, 10), this._events()\n    }, i.prototype.calcPoints = function () {\n        var t = this\n            , i = document.body\n            , n = document.documentElement;\n        this.points = [], this.winHeight = Math.round(Math.max(window.innerHeight, n.clientHeight)), this.docHeight = Math.round(Math.max(i.scrollHeight, i.offsetHeight, n.clientHeight, n.scrollHeight, n.offsetHeight)), this.$targets.each(function () {\n            var i = e(this)\n                , n = Math.round(i.offset().top - t.options.threshold);\n            i.targetPoint = n, t.points.push(n)\n        })\n    }, i.prototype._events = function () {\n        var t = this\n            , i = e(\"html, body\")\n            , n = {\n                duration: t.options.animationDuration\n                , easing: t.options.animationEasing\n            };\n        e(window).one(\"load\", function () {\n            t.calcPoints(), t._updateActive()\n        }), this.$element.on({\n            \"resizeme.zf.trigger\": this.reflow.bind(this)\n            , \"scrollme.zf.trigger\": this._updateActive.bind(this)\n        }).on(\"click.zf.magellan\", 'a[href^=\"#\"]', function (s) {\n            s.preventDefault();\n            var o = this.getAttribute(\"href\")\n                , a = e(o).offset().top - t.options.threshold / 2 - t.options.barOffset;\n            i.stop(!0).animate({\n                scrollTop: a\n            }, n)\n        })\n    }, i.prototype.reflow = function () {\n        this.calcPoints(), this._updateActive()\n    }, i.prototype._updateActive = function () {\n        var t, e = parseInt(window.pageYOffset, 10);\n        if (e + this.winHeight === this.docHeight) t = this.points.length - 1;\n        else if (e < this.points[0]) t = 0;\n        else {\n            var i = this.scrollPos < e\n                , n = this\n                , s = this.points.filter(function (t, s) {\n                    return i ? e >= t : t - n.options.threshold <= e\n                });\n            t = s.length ? s.length - 1 : 0\n        }\n        if (this.$active.removeClass(this.options.activeClass), this.$active = this.$links.eq(t).addClass(this.options.activeClass), this.options.deepLinking) {\n            var o = this.$active[0].getAttribute(\"href\");\n            window.history.pushState ? window.history.pushState(null, null, o) : window.location.hash = o\n        }\n        this.scrollPos = e, this.$element.trigger(\"update.zf.magellan\", [this.$active])\n    }, i.prototype.destroy = function () {\n        if (this.$element.off(\".zf.trigger .zf.magellan\").find(\".\" + this.options.activeClass).removeClass(this.options.activeClass), this.options.deepLinking) {\n            var e = this.$active[0].getAttribute(\"href\");\n            window.location.hash.replace(e, \"\")\n        }\n        t.unregisterPlugin(this)\n    }, t.plugin(i, \"Magellan\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this.$lastTrigger = t(), this._init(), this._events(), e.registerPlugin(this, \"OffCanvas\")\n    }\n    i.defaults = {\n        closeOnClick: !0\n        , transitionTime: 0\n        , position: \"left\"\n        , forceTop: !0\n        , isRevealed: !1\n        , revealOn: null\n        , autoFocus: !0\n        , revealClass: \"reveal-for-\"\n        , trapFocus: !1\n    }, i.prototype._init = function () {\n        var e = this.$element.attr(\"id\");\n        if (this.$element.attr(\"aria-hidden\", \"true\"), t(document).find('[data-open=\"' + e + '\"], [data-close=\"' + e + '\"], [data-toggle=\"' + e + '\"]').attr(\"aria-expanded\", \"false\").attr(\"aria-controls\", e), this.options.closeOnClick)\n            if (t(\".js-off-canvas-exit\").length) this.$exiter = t(\".js-off-canvas-exit\");\n            else {\n                var i = document.createElement(\"div\");\n                i.setAttribute(\"class\", \"js-off-canvas-exit\"), t(\"[data-off-canvas-content]\").append(i), this.$exiter = t(i)\n            }\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, \"g\").test(this.$element[0].className), this.options.isRevealed && (this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split(\"-\")[2], this._setMQChecker()), this.options.transitionTime || (this.options.transitionTime = 1e3 * parseFloat(window.getComputedStyle(t(\"[data-off-canvas-wrapper]\")[0]).transitionDuration))\n    }, i.prototype._events = function () {\n        if (this.$element.off(\".zf.trigger .zf.offcanvas\").on({\n                \"open.zf.trigger\": this.open.bind(this)\n                , \"close.zf.trigger\": this.close.bind(this)\n                , \"toggle.zf.trigger\": this.toggle.bind(this)\n                , \"keydown.zf.offcanvas\": this._handleKeyboard.bind(this)\n            }), this.$exiter.length) {\n            this.$exiter.on({\n                \"click.zf.offcanvas\": this.close.bind(this)\n            })\n        }\n    }, i.prototype._setMQChecker = function () {\n        var i = this;\n        t(window).on(\"changed.zf.mediaquery\", function () {\n            e.MediaQuery.atLeast(i.options.revealOn) ? i.reveal(!0) : i.reveal(!1)\n        }).one(\"load.zf.offcanvas\", function () {\n            e.MediaQuery.atLeast(i.options.revealOn) && i.reveal(!0)\n        })\n    }, i.prototype.reveal = function (t) {\n        var e = this.$element.find(\"[data-close]\");\n        t ? (this.close(), this.isRevealed = !0, this.$element.off(\"open.zf.trigger toggle.zf.trigger\"), e.length && e.hide()) : (this.isRevealed = !1, this.$element.on({\n            \"open.zf.trigger\": this.open.bind(this)\n            , \"toggle.zf.trigger\": this.toggle.bind(this)\n        }), e.length && e.show())\n    }, i.prototype.open = function (i, n) {\n        if (!this.$element.hasClass(\"is-open\") && !this.isRevealed) {\n            var s = this;\n            t(document.body);\n            t(\"body\").scrollTop(0), e.Move(this.options.transitionTime, this.$element, function () {\n                t(\"[data-off-canvas-wrapper]\").addClass(\"is-off-canvas-open is-open-\" + s.options.position), s.$element.addClass(\"is-open\")\n            }), this.$element.attr(\"aria-hidden\", \"false\").trigger(\"opened.zf.offcanvas\"), n && (this.$lastTrigger = n.attr(\"aria-expanded\", \"true\")), this.options.autoFocus && this.$element.one(\"finished.zf.animate\", function () {\n                s.$element.find(\"a, button\").eq(0).focus()\n            }), this.options.trapFocus && (t(\"[data-off-canvas-content]\").attr(\"tabindex\", \"-1\"), this._trapFocus())\n        }\n    }, i.prototype._trapFocus = function () {\n        var t = e.Keyboard.findFocusable(this.$element)\n            , i = t.eq(0)\n            , n = t.eq(-1);\n        t.off(\".zf.offcanvas\").on(\"keydown.zf.offcanvas\", function (t) {\n            (9 === t.which || 9 === t.keycode) && (t.target !== n[0] || t.shiftKey || (t.preventDefault(), i.focus()), t.target === i[0] && t.shiftKey && (t.preventDefault(), n.focus()))\n        })\n    }, i.prototype.close = function (e) {\n        if (this.$element.hasClass(\"is-open\") && !this.isRevealed) {\n            var i = this;\n            t(\"[data-off-canvas-wrapper]\").removeClass(\"is-off-canvas-open is-open-\" + i.options.position), i.$element.removeClass(\"is-open\"), this.$element.attr(\"aria-hidden\", \"true\").trigger(\"closed.zf.offcanvas\"), this.$lastTrigger.attr(\"aria-expanded\", \"false\"), this.options.trapFocus && t(\"[data-off-canvas-content]\").removeAttr(\"tabindex\")\n        }\n    }, i.prototype.toggle = function (t, e) {\n        this.$element.hasClass(\"is-open\") ? this.close(t, e) : this.open(t, e)\n    }, i.prototype._handleKeyboard = function (t) {\n        27 === t.which && (t.stopPropagation(), t.preventDefault(), this.close(), this.$lastTrigger.focus())\n    }, i.prototype.destroy = function () {\n        this.close(), this.$element.off(\".zf.trigger .zf.offcanvas\"), this.$exiter.off(\".zf.offcanvas\"), e.unregisterPlugin(this)\n    }, e.plugin(i, \"OffCanvas\")\n}(jQuery, Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), e.registerPlugin(this, \"Orbit\"), e.Keyboard.register(\"Orbit\", {\n            ltr: {\n                ARROW_RIGHT: \"next\"\n                , ARROW_LEFT: \"previous\"\n            }\n            , rtl: {\n                ARROW_LEFT: \"next\"\n                , ARROW_RIGHT: \"previous\"\n            }\n        })\n    }\n    i.defaults = {\n        bullets: !0\n        , navButtons: !0\n        , animInFromRight: \"slide-in-right\"\n        , animOutToRight: \"slide-out-right\"\n        , animInFromLeft: \"slide-in-left\"\n        , animOutToLeft: \"slide-out-left\"\n        , autoPlay: !0\n        , timerDelay: 5e3\n        , infiniteWrap: !0\n        , swipe: !0\n        , pauseOnHover: !0\n        , accessible: !0\n        , containerClass: \"orbit-container\"\n        , slideClass: \"orbit-slide\"\n        , boxOfBullets: \"orbit-bullets\"\n        , nextClass: \"orbit-next\"\n        , prevClass: \"orbit-previous\"\n        , useMUI: !0\n    }, i.prototype._init = function () {\n        this.$wrapper = this.$element.find(\".\" + this.options.containerClass), this.$slides = this.$element.find(\".\" + this.options.slideClass);\n        var t = this.$element.find(\"img\")\n            , i = this.$slides.filter(\".is-active\");\n        i.length || this.$slides.eq(0).addClass(\"is-active\"), this.options.useMUI || this.$slides.addClass(\"no-motionui\"), t.length ? e.onImagesLoaded(t, this._prepareForOrbit.bind(this)) : this._prepareForOrbit(), this.options.bullets && this._loadBullets(), this._events(), this.options.autoPlay && this.geoSync(), this.options.accessible && this.$wrapper.attr(\"tabindex\", 0)\n    }, i.prototype._loadBullets = function () {\n        this.$bullets = this.$element.find(\".\" + this.options.boxOfBullets).find(\"button\")\n    }, i.prototype.geoSync = function () {\n        var t = this;\n        this.timer = new e.Timer(this.$element, {\n            duration: this.options.timerDelay\n            , infinite: !1\n        }, function () {\n            t.changeSlide(!0)\n        }), this.timer.start()\n    }, i.prototype._prepareForOrbit = function () {\n        var t = this;\n        this._setWrapperHeight(function (e) {\n            t._setSlideHeight(e)\n        })\n    }, i.prototype._setWrapperHeight = function (e) {\n        var i, n = 0\n            , s = 0;\n        this.$slides.each(function () {\n            i = this.getBoundingClientRect().height, t(this).attr(\"data-slide\", s), s && t(this).css({\n                position: \"relative\"\n                , display: \"none\"\n            }), n = i > n ? i : n, s++\n        }), s === this.$slides.length && (this.$wrapper.css({\n            height: n\n        }), e(n))\n    }, i.prototype._setSlideHeight = function (e) {\n        this.$slides.each(function () {\n            t(this).css(\"max-height\", e)\n        })\n    }, i.prototype._events = function () {\n        var i = this;\n        if (this.options.swipe && this.$slides.off(\"swipeleft.zf.orbit swiperight.zf.orbit\").on(\"swipeleft.zf.orbit\", function (t) {\n                t.preventDefault(), i.changeSlide(!0)\n            }).on(\"swiperight.zf.orbit\", function (t) {\n                t.preventDefault(), i.changeSlide(!1)\n            }), this.options.autoPlay && (this.$slides.on(\"click.zf.orbit\", function () {\n                i.$element.data(\"clickedOn\", i.$element.data(\"clickedOn\") ? !1 : !0), i.timer[i.$element.data(\"clickedOn\") ? \"pause\" : \"start\"]()\n            }), this.options.pauseOnHover && this.$element.on(\"mouseenter.zf.orbit\", function () {\n                i.timer.pause()\n            }).on(\"mouseleave.zf.orbit\", function () {\n                i.$element.data(\"clickedOn\") || i.timer.start()\n            })), this.options.navButtons) {\n            var n = this.$element.find(\".\" + this.options.nextClass + \", .\" + this.options.prevClass);\n            n.attr(\"tabindex\", 0).on(\"click.zf.orbit touchend.zf.orbit\", function () {\n                i.changeSlide(t(this).hasClass(i.options.nextClass))\n            })\n        }\n        this.options.bullets && this.$bullets.on(\"click.zf.orbit touchend.zf.orbit\", function () {\n            if (/is-active/g.test(this.className)) return !1;\n            var e = t(this).data(\"slide\")\n                , n = e > i.$slides.filter(\".is-active\").data(\"slide\")\n                , s = i.$slides.eq(e);\n            i.changeSlide(n, s, e)\n        }), this.$wrapper.add(this.$bullets).on(\"keydown.zf.orbit\", function (n) {\n            e.Keyboard.handleKey(n, \"Orbit\", {\n                next: function () {\n                    i.changeSlide(!0)\n                }\n                , previous: function () {\n                    i.changeSlide(!1)\n                }\n                , handled: function () {\n                    t(n.target).is(i.$bullets) && i.$bullets.filter(\".is-active\").focus()\n                }\n            })\n        })\n    }, i.prototype.changeSlide = function (t, i, n) {\n        var s = this.$slides.filter(\".is-active\").eq(0);\n        if (/mui/g.test(s[0].className)) return !1;\n        var o, a = this.$slides.first()\n            , r = this.$slides.last()\n            , l = t ? \"Right\" : \"Left\"\n            , d = t ? \"Left\" : \"Right\"\n            , h = this;\n        o = i ? i : t ? this.options.infiniteWrap ? s.next(\".\" + this.options.slideClass).length ? s.next(\".\" + this.options.slideClass) : a : s.next(\".\" + this.options.slideClass) : this.options.infiniteWrap ? s.prev(\".\" + this.options.slideClass).length ? s.prev(\".\" + this.options.slideClass) : r : s.prev(\".\" + this.options.slideClass), o.length && (this.options.bullets && (n = n || this.$slides.index(o), this._updateBullets(n)), this.options.useMUI ? (e.Motion.animateIn(o.addClass(\"is-active\").css({\n            position: \"absolute\"\n            , top: 0\n        }), this.options[\"animInFrom\" + l], function () {\n            o.css({\n                position: \"relative\"\n                , display: \"block\"\n            }).attr(\"aria-live\", \"polite\")\n        }), e.Motion.animateOut(s.removeClass(\"is-active\"), this.options[\"animOutTo\" + d], function () {\n            s.removeAttr(\"aria-live\"), h.options.autoPlay && h.timer.restart()\n        })) : (s.removeClass(\"is-active is-in\").removeAttr(\"aria-live\").hide(), o.addClass(\"is-active is-in\").attr(\"aria-live\", \"polite\").show(), this.options.autoPlay && this.timer.restart()), this.$element.trigger(\"slidechange.zf.orbit\", [o]))\n    }, i.prototype._updateBullets = function (t) {\n        var e = this.$element.find(\".\" + this.options.boxOfBullets).find(\".is-active\").removeClass(\"is-active\").blur()\n            , i = e.find(\"span:last\").detach();\n        this.$bullets.eq(t).addClass(\"is-active\").append(i)\n    }, i.prototype.destroy = function () {\n        delete this.timer, this.$element.off(\".zf.orbit\").find(\"*\").off(\".zf.orbit\").end().hide(), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Orbit\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(i) {\n        this.$element = e(i), this.rules = this.$element.data(\"responsive-menu\"), this.currentMq = null, this.currentPlugin = null, this._init(), this._events(), t.registerPlugin(this, \"ResponsiveMenu\")\n    }\n    var n = {\n        dropdown: {\n            cssClass: \"dropdown\"\n            , plugin: t._plugins[\"dropdown-menu\"] || null\n        }\n        , drilldown: {\n            cssClass: \"drilldown\"\n            , plugin: t._plugins.drilldown || null\n        }\n        , accordion: {\n            cssClass: \"accordion-menu\"\n            , plugin: t._plugins[\"accordion-menu\"] || null\n        }\n    };\n    i.defaults = {}, i.prototype._init = function () {\n        for (var t = {}, i = this.rules.split(\" \"), s = 0; s < i.length; s++) {\n            var o = i[s].split(\"-\")\n                , a = o.length > 1 ? o[0] : \"small\"\n                , r = o.length > 1 ? o[1] : o[0];\n            null !== n[r] && (t[a] = n[r])\n        }\n        this.rules = t, e.isEmptyObject(t) || this._checkMediaQueries()\n    }, i.prototype._events = function () {\n        var t = this;\n        e(window).on(\"changed.zf.mediaquery\", function () {\n            t._checkMediaQueries()\n        })\n    }, i.prototype._checkMediaQueries = function () {\n        var i, s = this;\n        e.each(this.rules, function (e) {\n            t.MediaQuery.atLeast(e) && (i = e)\n        }), i && (this.currentPlugin instanceof this.rules[i].plugin || (e.each(n, function (t, e) {\n            s.$element.removeClass(e.cssClass)\n        }), this.$element.addClass(this.rules[i].cssClass), this.currentPlugin && this.currentPlugin.destroy(), this.currentPlugin = new this.rules[i].plugin(this.$element, {})))\n    }, i.prototype.destroy = function () {\n        this.currentPlugin.destroy(), e(window).off(\".zf.ResponsiveMenu\"), t.unregisterPlugin(this)\n    }, t.plugin(i, \"ResponsiveMenu\")\n}(Foundation, jQuery), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = t(n), this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), this._events(), e.registerPlugin(this, \"ResponsiveToggle\")\n    }\n    i.defaults = {\n        hideFor: \"medium\"\n    }, i.prototype._init = function () {\n        var e = this.$element.data(\"responsive-toggle\");\n        e || console.error(\"Your tab bar needs an ID of a Menu as the value of data-tab-bar.\"), this.$targetMenu = t(\"#\" + e), this.$toggler = this.$element.find(\"[data-toggle]\"), this._update()\n    }, i.prototype._events = function () {\n        t(window).on(\"changed.zf.mediaquery\", this._update.bind(this)), this.$toggler.on(\"click.zf.responsiveToggle\", this.toggleMenu.bind(this))\n    }, i.prototype._update = function () {\n        e.MediaQuery.atLeast(this.options.hideFor) ? (this.$element.hide(), this.$targetMenu.show()) : (this.$element.show(), this.$targetMenu.hide())\n    }, i.prototype.toggleMenu = function () {\n        e.MediaQuery.atLeast(this.options.hideFor) || (this.$targetMenu.toggle(0), this.$element.trigger(\"toggled.zf.responsiveToggle\"))\n    }, i.prototype.destroy = function () {}, e.plugin(i, \"ResponsiveToggle\")\n}(jQuery, Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, this.$element.data(), s), this._init(), t.registerPlugin(this, \"Reveal\"), t.Keyboard.register(\"Reveal\", {\n            ENTER: \"open\"\n            , SPACE: \"open\"\n            , ESCAPE: \"close\"\n            , TAB: \"tab_forward\"\n            , SHIFT_TAB: \"tab_backward\"\n        })\n    }\n    i.defaults = {\n        animationIn: \"\"\n        , animationOut: \"\"\n        , showDelay: 0\n        , hideDelay: 0\n        , closeOnClick: !0\n        , closeOnEsc: !0\n        , multipleOpened: !1\n        , vOffset: 100\n        , hOffset: 0\n        , fullScreen: !1\n        , btmOffsetPct: 10\n        , overlay: !0\n        , resetOnClose: !1\n    }, i.prototype._init = function () {\n        if (this.id = this.$element.attr(\"id\"), this.isActive = !1, this.$anchor = e(e('[data-open=\"' + this.id + '\"]').length ? '[data-open=\"' + this.id + '\"]' : '[data-toggle=\"' + this.id + '\"]'), this.$anchor.length) {\n            var i = this.$anchor[0].id || t.GetYoDigits(6, \"reveal\");\n            this.$anchor.attr({\n                \"aria-controls\": this.id\n                , id: i\n                , \"aria-haspopup\": !0\n                , tabindex: 0\n            }), this.$element.attr({\n                \"aria-labelledby\": i\n            })\n        }(this.options.fullScreen || this.$element.hasClass(\"full\")) && (this.options.fullScreen = !0, this.options.overlay = !1), this.options.overlay && !this.$overlay && (this.$overlay = this._makeOverlay(this.id)), this.$element.attr({\n            role: \"dialog\"\n            , \"aria-hidden\": !0\n            , \"data-yeti-box\": this.id\n            , \"data-resize\": this.id\n        }), this._events()\n    }, i.prototype._makeOverlay = function (t) {\n        var i = e(\"<div></div>\").addClass(\"reveal-overlay\").attr({\n            tabindex: -1\n            , \"aria-hidden\": !0\n        }).appendTo(\"body\");\n        return this.options.closeOnClick && i.attr({\n            \"data-close\": t\n        }), i\n    }, i.prototype._events = function () {\n        var t = this;\n        this.$element.on({\n            \"open.zf.trigger\": this.open.bind(this)\n            , \"close.zf.trigger\": this.close.bind(this)\n            , \"toggle.zf.trigger\": this.toggle.bind(this)\n            , \"resizeme.zf.trigger\": function () {\n                t.$element.is(\":visible\") && t._setPosition(function () {})\n            }\n        }), this.$anchor.length && this.$anchor.on(\"keydown.zf.reveal\", function (e) {\n            (13 === e.which || 32 === e.which) && (e.stopPropagation(), e.preventDefault(), t.open())\n        }), this.options.closeOnClick && this.options.overlay && this.$overlay.off(\".zf.reveal\").on(\"click.zf.reveal\", this.close.bind(this))\n    }, i.prototype._setPosition = function (e) {\n        var i = t.Box.GetDimensions(this.$element)\n            , n = this.options.fullScreen ? \"reveal full\" : i.height >= .5 * i.windowDims.height ? \"reveal\" : \"center\";\n        \"reveal full\" === n ? this.$element.offset(t.Box.GetOffsets(this.$element, null, n, this.options.vOffset)).css({\n            height: i.windowDims.height\n            , width: i.windowDims.width\n        }) : t.MediaQuery.atLeast(\"medium\") && t.Box.ImNotTouchingYou(this.$element, null, !0, !1) ? this.$element.css({\n            \"max-height\": i.windowDims.height - this.options.vOffset * (this.options.btmOffsetPct / 100 + 1)\n            , width: \"\"\n        }).offset(t.Box.GetOffsets(this.$element, null, n, this.options.vOffset)) : (this.$element.css({\n            width: i.windowDims.width - 2 * this.options.hOffset\n        }).offset(t.Box.GetOffsets(this.$element, null, \"center\", this.options.vOffset, this.options.hOffset)), this.changedSize = !0), e()\n    }, i.prototype.open = function () {\n        var i = this;\n        this.isActive = !0, this.$element.css({\n            visibility: \"hidden\"\n        }).show().scrollTop(0), this._setPosition(function () {\n            i.$element.hide().css({\n                visibility: \"\"\n            }), i.options.multipleOpened || i.$element.trigger(\"closeme.zf.reveal\", i.id), i.options.animationIn ? i.options.overlay ? t.Motion.animateIn(i.$overlay, \"fade-in\", function () {\n                t.Motion.animateIn(i.$element, i.options.animationIn, function () {\n                    i.focusableElements = t.Keyboard.findFocusable(i.$element)\n                })\n            }) : t.Motion.animateIn(i.$element, i.options.animationIn, function () {\n                i.focusableElements = t.Keyboard.findFocusable(i.$element)\n            }) : i.options.overlay ? i.$overlay.show(0, function () {\n                i.$element.show(i.options.showDelay, function () {})\n            }) : i.$element.show(i.options.showDelay, function () {})\n        }), this.$element.attr({\n            \"aria-hidden\": !1\n        }).attr(\"tabindex\", -1).focus().trigger(\"open.zf.reveal\"), e(\"body\").addClass(\"is-reveal-open\").attr({\n            \"aria-hidden\": this.options.overlay || this.options.fullScreen ? !0 : !1\n        }), setTimeout(function () {\n            i._extraHandlers()\n        }, 0)\n    }, i.prototype._extraHandlers = function () {\n        var i = this;\n        this.focusableElements = t.Keyboard.findFocusable(this.$element), this.options.overlay || !this.options.closeOnClick || this.options.fullScreen || e(\"body\").on(\"click.zf.reveal\", function (t) {\n            i.close()\n        }), this.options.closeOnEsc && e(window).on(\"keydown.zf.reveal\", function (e) {\n            t.Keyboard.handleKey(e, \"Reveal\", {\n                close: function () {\n                    i.options.closeOnEsc && (i.close(), i.$anchor.focus())\n                }\n            }), 0 === i.focusableElements.length && e.preventDefault()\n        }), this.$element.on(\"keydown.zf.reveal\", function (n) {\n            var s = e(this);\n            t.Keyboard.handleKey(n, \"Reveal\", {\n                tab_forward: function () {\n                    i.$element.find(\":focus\").is(i.focusableElements.eq(-1)) && (i.focusableElements.eq(0).focus(), n.preventDefault())\n                }\n                , tab_backward: function () {\n                    (i.$element.find(\":focus\").is(i.focusableElements.eq(0)) || i.$element.is(\":focus\")) && (i.focusableElements.eq(-1).focus(), n.preventDefault())\n                }\n                , open: function () {\n                    i.$element.find(\":focus\").is(i.$element.find(\"[data-close]\")) ? setTimeout(function () {\n                        i.$anchor.focus()\n                    }, 1) : s.is(i.focusableElements) && i.open()\n                }\n                , close: function () {\n                    i.options.closeOnEsc && (i.close(), i.$anchor.focus())\n                }\n            })\n        })\n    }, i.prototype.close = function () {\n        if (!this.isActive || !this.$element.is(\":visible\")) return !1;\n        var i = this;\n        this.options.animationOut ? t.Motion.animateOut(this.$element, this.options.animationOut, function () {\n            i.options.overlay && t.Motion.animateOut(i.$overlay, \"fade-out\", function () {})\n        }) : this.$element.hide(i.options.hideDelay, function () {\n            i.options.overlay && i.$overlay.hide(0, function () {})\n        }), this.options.closeOnEsc && e(window).off(\"keydown.zf.reveal\"), !this.options.overlay && this.options.closeOnClick && e(\"body\").off(\"click.zf.reveal\"), this.$element.off(\"keydown.zf.reveal\"), this.changedSize && this.$element.css({\n            height: \"\"\n            , width: \"\"\n        }), e(\"body\").removeClass(\"is-reveal-open\").attr({\n            \"aria-hidden\": !1\n            , tabindex: \"\"\n        }), this.options.resetOnClose && this.$element.html(this.$element.html()), this.isActive = !1, this.$element.attr({\n            \"aria-hidden\": !0\n        }).trigger(\"closed.zf.reveal\")\n    }, i.prototype.toggle = function () {\n        this.isActive ? this.close() : this.open()\n    }, i.prototype.destroy = function () {\n        this.options.overlay && this.$overlay.hide().off().remove(), this.$element.hide(), this.$anchor.off(), t.unregisterPlugin(this)\n    }, t.plugin(i, \"Reveal\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery);\n    var _createClass = function () {\n        function t(t, e) {\n            for (var i = 0; i < e.length; i++) {\n                var n = e[i];\n                n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)\n            }\n        }\n        return function (e, i, n) {\n            return i && t(e.prototype, i), n && t(e, n), e\n        }\n    }();\n! function (t) {\n    function e(t, e) {\n        return t / e\n    }\n\n    function i(t, e, i, n) {\n        return Math.abs(t.position()[e] + t[n]() / 2 - i)\n    }\n    var n = function () {\n        function n(e, i) {\n            _classCallCheck(this, n), this.$element = e, this.options = t.extend({}, n.defaults, this.$element.data(), i), this._init(), Foundation.registerPlugin(this, \"Slider\"), Foundation.Keyboard.register(\"Slider\", {\n                ltr: {\n                    ARROW_RIGHT: \"increase\"\n                    , ARROW_UP: \"increase\"\n                    , ARROW_DOWN: \"decrease\"\n                    , ARROW_LEFT: \"decrease\"\n                    , SHIFT_ARROW_RIGHT: \"increase_fast\"\n                    , SHIFT_ARROW_UP: \"increase_fast\"\n                    , SHIFT_ARROW_DOWN: \"decrease_fast\"\n                    , SHIFT_ARROW_LEFT: \"decrease_fast\"\n                }\n                , rtl: {\n                    ARROW_LEFT: \"increase\"\n                    , ARROW_RIGHT: \"decrease\"\n                    , SHIFT_ARROW_LEFT: \"increase_fast\"\n                    , SHIFT_ARROW_RIGHT: \"decrease_fast\"\n                }\n            })\n        }\n        return _createClass(n, [{\n            key: \"_init\"\n            , value: function () {\n                this.inputs = this.$element.find(\"input\"), this.handles = this.$element.find(\"[data-slider-handle]\"), this.$handle = this.handles.eq(0), this.$input = this.inputs.length ? this.inputs.eq(0) : t(\"#\" + this.$handle.attr(\"aria-controls\")), this.$fill = this.$element.find(\"[data-slider-fill]\").css(this.options.vertical ? \"height\" : \"width\", 0);\n                var e = !1\n                , i = this;\n                (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) && (this.options.disabled = !0, this.$element.addClass(this.options.disabledClass)), this.inputs.length || (this.inputs = t().add(this.$input), this.options.binding = !0), this._setInitAttr(0), this._events(this.$handle), this.handles[1] && (this.options.doubleSided = !0, this.$handle2 = this.handles.eq(1), this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : t(\"#\" + this.$handle2.attr(\"aria-controls\")), this.inputs[1] || (this.inputs = this.inputs.add(this.$input2)), e = !0, this._setHandlePos(this.$handle, this.options.initialStart, !0, function () {\n                    i._setHandlePos(i.$handle2, i.options.initialEnd, !0)\n                }), this._setInitAttr(1), this._events(this.$handle2)), e || this._setHandlePos(this.$handle, this.options.initialStart, !0)\n            }\n        }, {\n            key: \"_setHandlePos\"\n            , value: function (t, i, n, s) {\n                if (!this.$element.hasClass(this.options.disabledClass)) {\n                    i = parseFloat(i), i < this.options.start ? i = this.options.start : i > this.options.end && (i = this.options.end);\n                    var o = this.options.doubleSided;\n                    if (o)\n                        if (0 === this.handles.index(t)) {\n                            var a = parseFloat(this.$handle2.attr(\"aria-valuenow\"));\n                            i = i >= a ? a - this.options.step : i\n                        }\n                        else {\n                            var r = parseFloat(this.$handle.attr(\"aria-valuenow\"));\n                            i = i <= r ? r + this.options.step : i\n                        }\n                    this.options.vertical && !n && (i = this.options.end - i);\n                    var l = this\n                    , u = this.options.vertical\n                    , d = u ? \"height\" : \"width\"\n                    , h = u ? \"top\" : \"left\"\n                    , c = t[0].getBoundingClientRect()[d]\n                    , f = this.$element[0].getBoundingClientRect()[d]\n                    , p = e(i - this.options.start, this.options.end - this.options.start).toFixed(2)\n                    , m = (f - c) * p\n                    , v = (100 * e(m, f)).toFixed(this.options.decimal);\n                    i = parseFloat(i.toFixed(this.options.decimal));\n                    var g = {};\n                    if (this._setValues(t, i), o) {\n                        var w, y = 0 === this.handles.index(t)\n                        , b = ~~(100 * e(c, f));\n                        if (y) g[h] = v + \"%\", w = parseFloat(this.$handle2[0].style[h]) - v + b, s && \"function\" == typeof s && s();\n                        else {\n                            var $ = parseFloat(this.$handle[0].style[h]);\n                            w = v - (isNaN($) ? this.options.initialStart / ((this.options.end - this.options.start) / 100) : $) + b\n                        }\n                        g[\"min-\" + d] = w + \"%\"\n                    }\n                    this.$element.one(\"finished.zf.animate\", function () {\n                        l.$element.trigger(\"moved.zf.slider\", [t])\n                    });\n                    var C = this.$element.data(\"dragging\") ? 1e3 / 60 : this.options.moveTime;\n                    Foundation.Move(C, t, function () {\n                        t.css(h, v + \"%\"), l.options.doubleSided ? l.$fill.css(g) : l.$fill.css(d, 100 * p + \"%\")\n                    }), clearTimeout(l.timeout), l.timeout = setTimeout(function () {\n                        l.$element.trigger(\"changed.zf.slider\", [t])\n                    }, l.options.changedDelay)\n                }\n            }\n        }, {\n            key: \"_setInitAttr\"\n            , value: function (t) {\n                var e = this.inputs.eq(t).attr(\"id\") || Foundation.GetYoDigits(6, \"slider\");\n                this.inputs.eq(t).attr({\n                    id: e\n                    , max: this.options.end\n                    , min: this.options.start\n                    , step: this.options.step\n                }), this.handles.eq(t).attr({\n                    role: \"slider\"\n                    , \"aria-controls\": e\n                    , \"aria-valuemax\": this.options.end\n                    , \"aria-valuemin\": this.options.start\n                    , \"aria-valuenow\": 0 === t ? this.options.initialStart : this.options.initialEnd\n                    , \"aria-orientation\": this.options.vertical ? \"vertical\" : \"horizontal\"\n                    , tabindex: 0\n                })\n            }\n        }, {\n            key: \"_setValues\"\n            , value: function (t, e) {\n                var i = this.options.doubleSided ? this.handles.index(t) : 0;\n                this.inputs.eq(i).val(e), t.attr(\"aria-valuenow\", e)\n            }\n        }, {\n            key: \"_handleEvent\"\n            , value: function (n, s, o) {\n                var a, r;\n                if (o) a = this._adjustValue(null, o), r = !0;\n                else {\n                    n.preventDefault();\n                    var l = this\n                    , u = this.options.vertical\n                    , d = u ? \"height\" : \"width\"\n                    , h = u ? \"top\" : \"left\"\n                    , c = u ? n.pageY : n.pageX\n                    , f = (this.$handle[0].getBoundingClientRect()[d] / 2, this.$element[0].getBoundingClientRect()[d])\n                    , p = u ? t(window).scrollTop() : t(window).scrollLeft()\n                    , m = this.$element.offset()[h];\n                    n.clientY === n.pageY && (c += p);\n                    var v, g = c - m;\n                    v = g < 0 ? 0 : g > f ? f : g;\n                    var w = e(v, f);\n                    if (a = (this.options.end - this.options.start) * w + this.options.start, Foundation.rtl() && !this.options.vertical && (a = this.options.end - a), a = l._adjustValue(null, a), r = !1, !s) {\n                        var y = i(this.$handle, h, v, d)\n                        , b = i(this.$handle2, h, v, d);\n                        s = y <= b ? this.$handle : this.$handle2\n                    }\n                }\n                this._setHandlePos(s, a, r)\n            }\n        }, {\n            key: \"_adjustValue\"\n            , value: function (t, e) {\n                var i, n, s, o, a = this.options.step\n                , r = parseFloat(a / 2);\n                return i = t ? parseFloat(t.attr(\"aria-valuenow\")) : e, n = i % a, s = i - n, o = s + a, 0 === n ? i : i = i >= s + r ? o : s\n            }\n        }, {\n            key: \"_events\"\n            , value: function (e) {\n                var i, n = this;\n                if (this.inputs.off(\"change.zf.slider\").on(\"change.zf.slider\", function (e) {\n                    var i = n.inputs.index(t(this));\n                    n._handleEvent(e, n.handles.eq(i), t(this).val())\n                }), this.options.clickSelect && this.$element.off(\"click.zf.slider\").on(\"click.zf.slider\", function (e) {\n                    return !n.$element.data(\"dragging\") && void(t(e.target).is(\"[data-slider-handle]\") || (n.options.doubleSided ? n._handleEvent(e) : n._handleEvent(e, n.$handle)))\n                }), this.options.draggable) {\n                    this.handles.addTouch();\n                    var s = t(\"body\");\n                    e.off(\"mousedown.zf.slider\").on(\"mousedown.zf.slider\", function (o) {\n                        e.addClass(\"is-dragging\"), n.$fill.addClass(\"is-dragging\"), n.$element.data(\"dragging\", !0), i = t(o.currentTarget), s.on(\"mousemove.zf.slider\", function (t) {\n                            t.preventDefault(), n._handleEvent(t, i)\n                        }).on(\"mouseup.zf.slider\", function (t) {\n                            n._handleEvent(t, i), e.removeClass(\"is-dragging\"), n.$fill.removeClass(\"is-dragging\"), n.$element.data(\"dragging\", !1), s.off(\"mousemove.zf.slider mouseup.zf.slider\")\n                        })\n                    }).on(\"selectstart.zf.slider touchmove.zf.slider\", function (t) {\n                        t.preventDefault()\n                    })\n                }\n                e.off(\"keydown.zf.slider\").on(\"keydown.zf.slider\", function (e) {\n                    var i, s = t(this)\n                    , o = n.options.doubleSided ? n.handles.index(s) : 0\n                    , a = parseFloat(n.inputs.eq(o).val());\n                    Foundation.Keyboard.handleKey(e, \"Slider\", {\n                        decrease: function () {\n                            i = a - n.options.step\n                        }\n                        , increase: function () {\n                            i = a + n.options.step\n                        }\n                        , decrease_fast: function () {\n                            i = a - 10 * n.options.step\n                        }\n                        , increase_fast: function () {\n                            i = a + 10 * n.options.step\n                        }\n                        , handled: function () {\n                            e.preventDefault(), n._setHandlePos(s, i, !0)\n                        }\n                    })\n                })\n            }\n        }, {\n            key: \"destroy\"\n            , value: function () {\n                this.handles.off(\".zf.slider\"), this.inputs.off(\".zf.slider\"), this.$element.off(\".zf.slider\"), Foundation.unregisterPlugin(this)\n            }\n        }]), n\n    }();\n    n.defaults = {\n        start: 0\n        , end: 100\n        , step: 1\n        , initialStart: 0\n        , initialEnd: 100\n        , binding: !1\n        , clickSelect: !0\n        , vertical: !1\n        , draggable: !0\n        , disabled: !1\n        , doubleSided: !1\n        , decimal: 2\n        , moveTime: 200\n        , disabledClass: \"disabled\"\n        , invertVertical: !1\n        , changedDelay: 500\n    }, Foundation.plugin(n, \"Slider\")\n}(jQuery);\nvar _createClass = function () {\n    function t(t, e) {\n        for (var i = 0; i < e.length; i++) {\n            var n = e[i];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)\n        }\n    }\n    return function (e, i, n) {\n        return i && t(e.prototype, i), n && t(e, n), e\n    }\n}();\n    \n ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), e.registerPlugin(this, \"Sticky\")\n    }\n\n    function n(t) {\n        return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * t\n    }\n    i.defaults = {\n        container: \"<div data-sticky-container></div>\"\n        , stickTo: \"top\"\n        , anchor: \"\"\n        , topAnchor: \"\"\n        , btmAnchor: \"\"\n        , marginTop: 1\n        , marginBottom: 1\n        , stickyOn: \"medium\"\n        , stickyClass: \"sticky\"\n        , containerClass: \"sticky-container\"\n        , checkEvery: -1\n    }, i.prototype._init = function () {\n        var i = this.$element.parent(\"[data-sticky-container]\")\n            , n = this.$element[0].id || e.GetYoDigits(6, \"sticky\")\n            , s = this;\n        i.length || (this.wasWrapped = !0), this.$container = i.length ? i : t(this.options.container).wrapInner(this.$element), this.$container.addClass(this.options.containerClass), this.$element.addClass(this.options.stickyClass).attr({\n            \"data-resize\": n\n        }), this.scrollCount = this.options.checkEvery, this.isStuck = !1, \"\" !== this.options.anchor ? this.$anchor = t(\"#\" + this.options.anchor) : this._parsePoints(), this._setSizes(function () {\n            s._calc(!1)\n        }), this._events(n.split(\"-\").reverse().join(\"-\"))\n    }, i.prototype._parsePoints = function () {\n        var e = this.options.topAnchor\n            , i = this.options.btmAnchor\n            , n = [e, i]\n            , s = {};\n        if (e && i)\n            for (var o = 0, a = n.length; a > o && n[o]; o++) {\n                var r;\n                if (\"number\" == typeof n[o]) r = n[o];\n                else {\n                    var l = n[o].split(\":\")\n                        , d = t(\"#\" + l[0]);\n                    r = d.offset().top, l[1] && \"bottom\" === l[1].toLowerCase() && (r += d[0].getBoundingClientRect().height)\n                }\n                s[o] = r\n            }\n        else s = {\n            0: 1\n            , 1: document.documentElement.scrollHeight\n        };\n        this.points = s\n    }, i.prototype._events = function (e) {\n        var i = this\n            , n = this.scrollListener = \"scroll.zf.\" + e;\n        this.isOn || (this.canStick && (this.isOn = !0, t(window).off(n).on(n, function (t) {\n            0 === i.scrollCount ? (i.scrollCount = i.options.checkEvery, i._setSizes(function () {\n                i._calc(!1, window.pageYOffset)\n            })) : (i.scrollCount--, i._calc(!1, window.pageYOffset))\n        })), this.$element.off(\"resizeme.zf.trigger\").on(\"resizeme.zf.trigger\", function (t, s) {\n            i._setSizes(function () {\n                i._calc(!1), i.canStick ? i.isOn || i._events(e) : i.isOn && i._pauseListeners(n)\n            })\n        }))\n    }, i.prototype._pauseListeners = function (e) {\n        this.isOn = !1, t(window).off(e), this.$element.trigger(\"pause.zf.sticky\")\n    }, i.prototype._calc = function (t, e) {\n        return t && this._setSizes(), this.canStick ? (e || (e = window.pageYOffset), void(e >= this.topPoint ? e <= this.bottomPoint ? this.isStuck || this._setSticky() : this.isStuck && this._removeSticky(!1) : this.isStuck && this._removeSticky(!0))) : (this.isStuck && this._removeSticky(!0), !1)\n    }, i.prototype._setSticky = function () {\n        var t = this.options.stickTo\n            , e = \"top\" === t ? \"marginTop\" : \"marginBottom\"\n            , i = \"top\" === t ? \"bottom\" : \"top\"\n            , n = {};\n        n[e] = this.options[e] + \"em\", n[t] = 0, n[i] = \"auto\", n.left = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10), this.isStuck = !0, this.$element.removeClass(\"is-anchored is-at-\" + i).addClass(\"is-stuck is-at-\" + t).css(n).trigger(\"sticky.zf.stuckto:\" + t)\n    }, i.prototype._removeSticky = function (t) {\n        var e = this.options.stickTo\n            , i = \"top\" === e\n            , n = {}\n            , s = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight\n            , o = i ? \"marginTop\" : \"marginBottom\"\n            , a = i ? \"bottom\" : \"top\"\n            , r = t ? \"top\" : \"bottom\";\n        n[o] = 0, t && !i || i && !t ? (n[e] = s, n[a] = 0) : (n[e] = 0, n[a] = s), n.left = \"\", this.isStuck = !1, this.$element.removeClass(\"is-stuck is-at-\" + e).addClass(\"is-anchored is-at-\" + r).css(n).trigger(\"sticky.zf.unstuckfrom:\" + r)\n    }, i.prototype._setSizes = function (t) {\n        this.canStick = e.MediaQuery.atLeast(this.options.stickyOn), this.canStick || t();\n        var i = this.$container[0].getBoundingClientRect().width\n            , n = window.getComputedStyle(this.$container[0])\n            , s = parseInt(n[\"padding-right\"], 10);\n        this.$anchor && this.$anchor.length ? this.anchorHeight = this.$anchor[0].getBoundingClientRect().height : this._parsePoints(), this.$element.css({\n            \"max-width\": i - s + \"px\"\n        });\n        var o = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        this.containerHeight = o, this.$container.css({\n            height: o\n        }), this.elemHeight = o, this.isStuck && this.$element.css({\n            left: this.$container.offset().left + parseInt(n[\"padding-left\"], 10)\n        }), this._setBreakPoints(o, function () {\n            t && t()\n        })\n    }, i.prototype._setBreakPoints = function (t, e) {\n        if (!this.canStick) {\n            if (!e) return !1;\n            e()\n        }\n        var i = n(this.options.marginTop)\n            , s = n(this.options.marginBottom)\n            , o = this.points ? this.points[0] : this.$anchor.offset().top\n            , a = this.points ? this.points[1] : o + this.anchorHeight\n            , r = window.innerHeight;\n        \"top\" === this.options.stickTo ? (o -= i, a -= t + i) : \"bottom\" === this.options.stickTo && (o -= r - (t + s), a -= r - s), this.topPoint = o, this.bottomPoint = a, e && e()\n    }, i.prototype.destroy = function () {\n        this._removeSticky(!0), this.$element.removeClass(this.options.stickyClass + \" is-anchored is-at-top\").css({\n            height: \"\"\n            , top: \"\"\n            , bottom: \"\"\n            , \"max-width\": \"\"\n        }).off(\"resizeme.zf.trigger\"), this.$anchor.off(\"change.zf.sticky\"), t(window).off(this.scrollListener), this.wasWrapped ? this.$element.unwrap() : this.$container.removeClass(this.options.containerClass).css({\n            height: \"\"\n        }), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Sticky\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = t.extend({}, i.defaults, this.$element.data(), s), this._init(), e.registerPlugin(this, \"Tabs\"), e.Keyboard.register(\"Tabs\", {\n            ENTER: \"open\"\n            , SPACE: \"open\"\n            , ARROW_RIGHT: \"next\"\n            , ARROW_UP: \"previous\"\n            , ARROW_DOWN: \"next\"\n            , ARROW_LEFT: \"previous\"\n        })\n    }\n    i.defaults = {\n        autoFocus: !1\n        , wrapOnKeys: !0\n        , matchHeight: !1\n        , linkClass: \"tabs-title\"\n        , panelClass: \"tabs-panel\"\n    }, i.prototype._init = function () {\n        var i = this;\n        if (this.$tabTitles = this.$element.find(\".\" + this.options.linkClass), this.$tabContent = t('[data-tabs-content=\"' + this.$element[0].id + '\"]'), this.$tabTitles.each(function () {\n                var e = t(this)\n                    , n = e.find(\"a\")\n                    , s = e.hasClass(\"is-active\")\n                    , o = n.attr(\"href\").slice(1)\n                    , a = o + \"-label\"\n                    , r = t(o);\n                e.attr({\n                    role: \"presentation\"\n                }), n.attr({\n                    role: \"tab\"\n                    , \"aria-controls\": o\n                    , \"aria-selected\": s\n                    , id: a\n                }), r.attr({\n                    role: \"tabpanel\"\n                    , \"aria-hidden\": !s\n                    , \"aria-labelledby\": a\n                }), s && i.options.autoFocus && n.focus()\n            }), this.options.matchHeight) {\n            var n = this.$tabContent.find(\"img\");\n            n.length ? e.onImagesLoaded(n, this._setHeight.bind(this)) : this._setHeight()\n        }\n        this._events()\n    }, i.prototype._events = function () {\n        this._addKeyHandler(), this._addClickHandler(), this.options.matchHeight && t(window).on(\"changed.zf.mediaquery\", this._setHeight.bind(this))\n    }, i.prototype._addClickHandler = function () {\n        var e = this;\n        this.$element.off(\"click.zf.tabs\").on(\"click.zf.tabs\", \".\" + this.options.linkClass, function (i) {\n            i.preventDefault(), i.stopPropagation(), t(this).hasClass(\"is-active\") || e._handleTabChange(t(this))\n        })\n    }, i.prototype._addKeyHandler = function () {\n        var i = this;\n        i.$element.find(\"li:first-of-type\"), i.$element.find(\"li:last-of-type\");\n        this.$tabTitles.off(\"keydown.zf.tabs\").on(\"keydown.zf.tabs\", function (n) {\n            if (9 !== n.which) {\n                n.stopPropagation(), n.preventDefault();\n                var s, o, a = t(this)\n                    , r = a.parent(\"ul\").children(\"li\");\n                r.each(function (e) {\n                    return t(this).is(a) ? void(i.options.wrapOnKeys ? (s = 0 === e ? r.last() : r.eq(e - 1), o = e === r.length - 1 ? r.first() : r.eq(e + 1)) : (s = r.eq(Math.max(0, e - 1)), o = r.eq(Math.min(e + 1, r.length - 1)))) : void 0\n                }), e.Keyboard.handleKey(n, \"Tabs\", {\n                    open: function () {\n                        a.find('[role=\"tab\"]').focus(), i._handleTabChange(a)\n                    }\n                    , previous: function () {\n                        s.find('[role=\"tab\"]').focus(), i._handleTabChange(s)\n                    }\n                    , next: function () {\n                        o.find('[role=\"tab\"]').focus(), i._handleTabChange(o)\n                    }\n                })\n            }\n        })\n    }, i.prototype._handleTabChange = function (e) {\n        var i = e.find('[role=\"tab\"]')\n            , n = i.attr(\"href\")\n            , s = t(n)\n            , o = this.$element.find(\".\" + this.options.linkClass + \".is-active\").removeClass(\"is-active\").find('[role=\"tab\"]').attr({\n                \"aria-selected\": \"false\"\n            }).attr(\"href\");\n        t(o).removeClass(\"is-active\").attr({\n            \"aria-hidden\": \"true\"\n        }), e.addClass(\"is-active\"), i.attr({\n            \"aria-selected\": \"true\"\n        }), s.addClass(\"is-active\").attr({\n            \"aria-hidden\": \"false\"\n        }), this.$element.trigger(\"change.zf.tabs\", [e])\n    }, i.prototype.selectTab = function (t) {\n        var e;\n        e = \"object\" == typeof t ? t[0].id : t, e.indexOf(\"#\") < 0 && (e = \"#\" + e);\n        var i = this.$tabTitles.find('[href=\"' + e + '\"]').parent(\".\" + this.options.linkClass);\n        this._handleTabChange(i)\n    }, i.prototype._setHeight = function () {\n        var e = 0;\n        this.$tabContent.find(\".\" + this.options.panelClass).css(\"height\", \"\").each(function () {\n            var i = t(this)\n                , n = i.hasClass(\"is-active\");\n            n || i.css({\n                visibility: \"hidden\"\n                , display: \"block\"\n            });\n            var s = this.getBoundingClientRect().height;\n            n || i.css({\n                visibility: \"\"\n                , display: \"\"\n            }), e = s > e ? s : e\n        }).css(\"height\", e + \"px\")\n    }, i.prototype.destroy = function () {\n        this.$element.find(\".\" + this.options.linkClass).off(\".zf.tabs\").hide().end().find(\".\" + this.options.panelClass).hide(), this.options.matchHeight && t(window).off(\"changed.zf.mediaquery\"), e.unregisterPlugin(this)\n    }, e.plugin(i, \"Tabs\")\n}(jQuery, window.Foundation), ! function (t, e) {\n    \"use strict\";\n\n    function i(n, s) {\n        this.$element = n, this.options = e.extend({}, i.defaults, n.data(), s), this.className = \"\", this._init(), this._events(), t.registerPlugin(this, \"Toggler\")\n    }\n    i.defaults = {\n        animate: !1\n    }, i.prototype._init = function () {\n        var t;\n        this.options.animate ? (t = this.options.animate.split(\" \"), this.animationIn = t[0], this.animationOut = t[1] || null) : (t = this.$element.data(\"toggler\"), this.className = \".\" === t[0] ? t.slice(1) : t);\n        var i = this.$element[0].id;\n        e('[data-open=\"' + i + '\"], [data-close=\"' + i + '\"], [data-toggle=\"' + i + '\"]').attr(\"aria-controls\", i), this.$element.attr(\"aria-expanded\", this.$element.is(\":hidden\") ? !1 : !0)\n    }, i.prototype._events = function () {\n        this.$element.off(\"toggle.zf.trigger\").on(\"toggle.zf.trigger\", this.toggle.bind(this))\n    }, i.prototype.toggle = function () {\n        this[this.options.animate ? \"_toggleAnimate\" : \"_toggleClass\"]()\n    }, i.prototype._toggleClass = function () {\n        this.$element.toggleClass(this.className);\n        var t = this.$element.hasClass(this.className);\n        t ? this.$element.trigger(\"on.zf.toggler\") : this.$element.trigger(\"off.zf.toggler\"), this._updateARIA(t)\n    }, i.prototype._toggleAnimate = function () {\n        var e = this;\n        this.$element.is(\":hidden\") ? t.Motion.animateIn(this.$element, this.animationIn, function () {\n            this.trigger(\"on.zf.toggler\"), e._updateARIA(!0)\n        }) : t.Motion.animateOut(this.$element, this.animationOut, function () {\n            this.trigger(\"off.zf.toggler\"), e._updateARIA(!1)\n        })\n    }, i.prototype._updateARIA = function (t) {\n        this.$element.attr(\"aria-expanded\", t ? !0 : !1)\n    }, i.prototype.destroy = function () {\n        this.$element.off(\".zf.toggler\"), t.unregisterPlugin(this)\n    }, t.plugin(i, \"Toggler\"), \"undefined\" != typeof module && \"undefined\" != typeof module.exports && (module.exports = i), \"function\" == typeof define && define([\"foundation\"], function () {\n        return i\n    })\n}(Foundation, jQuery), ! function (t, e, i) {\n    \"use strict\";\n\n    function n(e, s) {\n        this.$element = e, this.options = t.extend({}, n.defaults, this.$element.data(), s), this.isActive = !1, this.isClick = !1, this._init(), i.registerPlugin(this, \"Tooltip\")\n    }\n    n.defaults = {\n        disableForTouch: !1\n        , hoverDelay: 200\n        , fadeInDuration: 150\n        , fadeOutDuration: 150\n        , disableHover: !1\n        , templateClasses: \"\"\n        , tooltipClass: \"tooltip\"\n        , triggerClass: \"has-tip\"\n        , showOn: \"small\"\n        , template: \"\"\n        , tipText: \"\"\n        , touchCloseText: \"Tap to close.\"\n        , clickOpen: !0\n        , positionClass: \"\"\n        , vOffset: 10\n        , hOffset: 12\n    }, n.prototype._init = function () {\n        var n = this.$element.attr(\"aria-describedby\") || i.GetYoDigits(6, \"tooltip\");\n        this.options.positionClass = this._getPositionClass(this.$element), this.options.tipText = this.options.tipText || this.$element.attr(\"title\"), this.template = this.options.template ? t(this.options.template) : this._buildTemplate(n), this.template.appendTo(e.body).text(this.options.tipText).hide(), this.$element.attr({\n            title: \"\"\n            , \"aria-describedby\": n\n            , \"data-yeti-box\": n\n            , \"data-toggle\": n\n            , \"data-resize\": n\n        }).addClass(this.triggerClass), this.usedPositions = [], this.counter = 4, this.classChanged = !1, this._events()\n    }, n.prototype._getPositionClass = function (t) {\n        if (!t) return \"\";\n        var e = t[0].className.match(/(top|left|right)/g);\n        return e = e ? e[0] : \"\"\n    }, n.prototype._buildTemplate = function (e) {\n        var i = (this.options.tooltipClass + \" \" + this.options.positionClass).trim()\n            , n = t(\"<div></div>\").addClass(i).attr({\n                role: \"tooltip\"\n                , \"aria-hidden\": !0\n                , \"data-is-active\": !1\n                , \"data-is-focus\": !1\n                , id: e\n            });\n        return n\n    }, n.prototype._reposition = function (t) {\n        this.usedPositions.push(t ? t : \"bottom\"), !t && this.usedPositions.indexOf(\"top\") < 0 ? this.template.addClass(\"top\") : \"top\" === t && this.usedPositions.indexOf(\"bottom\") < 0 ? this.template.removeClass(t) : \"left\" === t && this.usedPositions.indexOf(\"right\") < 0 ? this.template.removeClass(t).addClass(\"right\") : \"right\" === t && this.usedPositions.indexOf(\"left\") < 0 ? this.template.removeClass(t).addClass(\"left\") : !t && this.usedPositions.indexOf(\"top\") > -1 && this.usedPositions.indexOf(\"left\") < 0 ? this.template.addClass(\"left\") : \"top\" === t && this.usedPositions.indexOf(\"bottom\") > -1 && this.usedPositions.indexOf(\"left\") < 0 ? this.template.removeClass(t).addClass(\"left\") : \"left\" === t && this.usedPositions.indexOf(\"right\") > -1 && this.usedPositions.indexOf(\"bottom\") < 0 ? this.template.removeClass(t) : \"right\" === t && this.usedPositions.indexOf(\"left\") > -1 && this.usedPositions.indexOf(\"bottom\") < 0 ? this.template.removeClass(t) : this.template.removeClass(t), this.classChanged = !0, this.counter--\n    }, n.prototype._setPosition = function () {\n        var t = this._getPositionClass(this.template)\n            , e = i.Box.GetDimensions(this.template)\n            , n = i.Box.GetDimensions(this.$element)\n            , s = \"left\" === t ? \"left\" : \"right\" === t ? \"left\" : \"top\"\n            , o = \"top\" === s ? \"height\" : \"width\";\n        \"height\" === o ? this.options.vOffset : this.options.hOffset;\n        if (e.width >= e.windowDims.width || !this.counter && !i.Box.ImNotTouchingYou(this.template)) return this.template.offset(i.Box.GetOffsets(this.template, this.$element, \"center bottom\", this.options.vOffset, this.options.hOffset, !0)).css({\n            width: n.windowDims.width - 2 * this.options.hOffset\n            , height: \"auto\"\n        }), !1;\n        for (this.template.offset(i.Box.GetOffsets(this.template, this.$element, \"center \" + (t || \"bottom\"), this.options.vOffset, this.options.hOffset)); !i.Box.ImNotTouchingYou(this.template) && this.counter;) this._reposition(t), this._setPosition()\n    }, n.prototype.show = function () {\n        if (\"all\" !== this.options.showOn && !i.MediaQuery.atLeast(this.options.showOn)) return !1;\n        var t = this;\n        this.template.css(\"visibility\", \"hidden\").show(), this._setPosition(), this.$element.trigger(\"closeme.zf.tooltip\", this.template.attr(\"id\")), this.template.attr({\n            \"data-is-active\": !0\n            , \"aria-hidden\": !1\n        }), t.isActive = !0, this.template.stop().hide().css(\"visibility\", \"\").fadeIn(this.options.fadeInDuration, function () {}), this.$element.trigger(\"show.zf.tooltip\")\n    }, n.prototype.hide = function () {\n        var t = this;\n        this.template.stop().attr({\n            \"aria-hidden\": !0\n            , \"data-is-active\": !1\n        }).fadeOut(this.options.fadeOutDuration, function () {\n            t.isActive = !1, t.isClick = !1, t.classChanged && (t.template.removeClass(t._getPositionClass(t.template)).addClass(t.options.positionClass), t.usedPositions = [], t.counter = 4, t.classChanged = !1)\n        }), this.$element.trigger(\"hide.zf.tooltip\")\n    }, n.prototype._events = function () {\n        var t = this\n            , e = (this.template, !1);\n        this.options.disableHover || this.$element.on(\"mouseenter.zf.tooltip\", function (e) {\n            t.isActive || (t.timeout = setTimeout(function () {\n                t.show()\n            }, t.options.hoverDelay))\n        }).on(\"mouseleave.zf.tooltip\", function (i) {\n            clearTimeout(t.timeout), (!e || !t.isClick && t.options.clickOpen) && t.hide()\n        }), this.options.clickOpen && this.$element.on(\"mousedown.zf.tooltip\", function (e) {\n            e.stopImmediatePropagation(), t.isClick ? t.hide() : (t.isClick = !0, !t.options.disableHover && t.$element.attr(\"tabindex\") || t.isActive || t.show())\n        }), this.options.disableForTouch || this.$element.on(\"tap.zf.tooltip touchend.zf.tooltip\", function (e) {\n            t.isActive ? t.hide() : t.show()\n        }), this.$element.on({\n            \"close.zf.trigger\": this.hide.bind(this)\n        }), this.$element.on(\"focus.zf.tooltip\", function (i) {\n            return e = !0, t.isClick ? !1 : void t.show()\n        }).on(\"focusout.zf.tooltip\", function (i) {\n            e = !1, t.isClick = !1, t.hide()\n        }).on(\"resizeme.zf.trigger\", function () {\n            t.isActive && t._setPosition()\n        })\n    }, n.prototype.toggle = function () {\n        this.isActive ? this.hide() : this.show()\n    }, n.prototype.destroy = function () {\n        this.$element.attr(\"title\", this.template.text()).off(\".zf.trigger .zf.tootip\").removeAttr(\"aria-describedby\").removeAttr(\"data-yeti-box\").removeAttr(\"data-toggle\").removeAttr(\"data-resize\"), this.template.remove(), i.unregisterPlugin(this)\n    }, i.plugin(n, \"Tooltip\")\n}(jQuery, window.document, window.Foundation);</script><script type=\"text/javascript\">var timeoutMinutes = 10;\nvar timeoutMilliseconds = timeoutMinutes * 60000;\nvar warnMilliseconds = timeoutMinutes * 60000 - 60000;\nvar timeoutTimer;\nvar timeoutTimer2;\nvar timeOutWin = null;\n\n//window.onerror = function() { return true;};\n\nfunction setSecurityTimer() {\n    timeoutTimer = window.setTimeout(\"location.href='/logout?result=timeout'\", timeoutMilliseconds);\n    timeoutTimer2 = window.setTimeout(\"closePrinterFriendly();\", timeoutMilliseconds);\n   console.log(\"timer started:\");\n}\n\nfunction CCBLoadPage() {\n    window.setTimeout('displayAlert()', warnMilliseconds);\n    setSecurityTimer();\n}\n\nfunction displayAlert() {\n   console.log(\"opening window...\");\n    timeOutWin = window.open(\"/TimeOutPopup.aspx\", \"smallwindow\", 'toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=no,resizable=no,width=600,height=400');\n    if (timeOutWin) {\n        timeOutWin.focus();\n    }\n}\n\nfunction keepalive() {\n    window.setTimeout('displayAlert()', warnMilliseconds);\n    window.clearTimeout(timeoutTimer);\n    setSecurityTimer();\n}\n\nfunction closePrinterFriendly() {\n    if (timeOutWin != null && !timeOutWin.closed)\n        timeOutWin.close();\n}</script><script type=\"text/javascript\"></script><script type=\"text/javascript\">!function(e,n,t){function r(e){var n=w.className,t=Modernizr._config.classPrefix||\"\";if(x&&(n=n.baseVal),Modernizr._config.enableJSClass){var r=new RegExp(\"(^|\\\\s)\"+t+\"no-js(\\\\s|$)\");n=n.replace(r,\"$1\"+t+\"js$2\")}Modernizr._config.enableClasses&&(n+=\" \"+t+e.join(\" \"+t),x?w.className.baseVal=n:w.className=n)}function s(e,n){return typeof e===n}function o(){var e,n,t,r,o,i,a;for(var f in C)if(C.hasOwnProperty(f)){if(e=[],n=C[f],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(r=s(n.fn,\"function\")?n.fn():n.fn,o=0;o<e.length;o++)i=e[o],a=i.split(\".\"),1===a.length?Modernizr[a[0]]=r:(!Modernizr[a[0]]||Modernizr[a[0]]instanceof Boolean||(Modernizr[a[0]]=new Boolean(Modernizr[a[0]])),Modernizr[a[0]][a[1]]=r),y.push((r?\"\":\"no-\")+a.join(\"-\"))}}function i(){return\"function\"!=typeof n.createElement?n.createElement(arguments[0]):x?n.createElementNS.call(n,\"http://www.w3.org/2000/svg\",arguments[0]):n.createElement.apply(n,arguments)}function a(){var e=n.body;return e||(e=i(x?\"svg\":\"body\"),e.fake=!0),e}function f(e,t,r,s){var o,f,l,u,d=\"modernizr\",p=i(\"div\"),c=a();if(parseInt(r,10))for(;r--;)l=i(\"div\"),l.id=s?s[r]:d+(r+1),p.appendChild(l);return o=i(\"style\"),o.type=\"text/css\",o.id=\"s\"+d,(c.fake?c:p).appendChild(o),c.appendChild(p),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(n.createTextNode(e)),p.id=d,c.fake&&(c.style.background=\"\",c.style.overflow=\"hidden\",u=w.style.overflow,w.style.overflow=\"hidden\",w.appendChild(c)),f=t(p,e),c.fake?(c.parentNode.removeChild(c),w.style.overflow=u,w.offsetHeight):p.parentNode.removeChild(p),!!f}function l(e,n){return function(){return e.apply(n,arguments)}}function u(e,n,t){var r;for(var o in e)if(e[o]in n)return t===!1?e[o]:(r=n[e[o]],s(r,\"function\")?l(r,t||n):r);return!1}function d(e,n){return!!~(\"\"+e).indexOf(n)}function p(e){return e.replace(/([a-z])-([a-z])/g,function(e,n,t){return n+t.toUpperCase()}).replace(/^-/,\"\")}function c(e){return e.replace(/([A-Z])/g,function(e,n){return\"-\"+n.toLowerCase()}).replace(/^ms-/,\"-ms-\")}function m(n,r){var s=n.length;if(\"CSS\"in e&&\"supports\"in e.CSS){for(;s--;)if(e.CSS.supports(c(n[s]),r))return!0;return!1}if(\"CSSSupportsRule\"in e){for(var o=[];s--;)o.push(\"(\"+c(n[s])+\":\"+r+\")\");return o=o.join(\" or \"),f(\"@supports (\"+o+\") { #modernizr { position: absolute; } }\",function(e){return\"absolute\"==getComputedStyle(e,null).position})}return t}function h(e,n,r,o){function a(){l&&(delete k.style,delete k.modElem)}if(o=s(o,\"undefined\")?!1:o,!s(r,\"undefined\")){var f=m(e,r);if(!s(f,\"undefined\"))return f}for(var l,u,c,h,v,g=[\"modernizr\",\"tspan\"];!k.style;)l=!0,k.modElem=i(g.shift()),k.style=k.modElem.style;for(c=e.length,u=0;c>u;u++)if(h=e[u],v=k.style[h],d(h,\"-\")&&(h=p(h)),k.style[h]!==t){if(o||s(r,\"undefined\"))return a(),\"pfx\"==n?h:!0;try{k.style[h]=r}catch(y){}if(k.style[h]!=v)return a(),\"pfx\"==n?h:!0}return a(),!1}function v(e,n,t,r,o){var i=e.charAt(0).toUpperCase()+e.slice(1),a=(e+\" \"+T.join(i+\" \")+i).split(\" \");return s(n,\"string\")||s(n,\"undefined\")?h(a,n,r,o):(a=(e+\" \"+E.join(i+\" \")+i).split(\" \"),u(a,n,t))}function g(e,n,r){return v(e,t,t,n,r)}var y=[],C=[],S={_version:\"3.2.0\",_config:{classPrefix:\"\",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){C.push({name:e,fn:n,options:t})},addAsyncTest:function(e){C.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=S,Modernizr=new Modernizr;var w=n.documentElement,x=\"svg\"===w.nodeName.toLowerCase(),_=\"CSS\"in e&&\"supports\"in e.CSS,b=\"supportsCSS\"in e;Modernizr.addTest(\"supports\",_||b);var P=S.testStyles=f,z=\"Moz O ms Webkit\",T=S._config.usePrefixes?z.split(\" \"):[];S._cssomPrefixes=T;var E=S._config.usePrefixes?z.toLowerCase().split(\" \"):[];S._domPrefixes=E;var N={elem:i(\"modernizr\")};Modernizr._q.push(function(){delete N.elem});var k={style:N.elem.style};Modernizr._q.unshift(function(){delete k.style}),S.testAllProps=v,S.testAllProps=g,Modernizr.addTest(\"csstransforms\",function(){return-1===navigator.userAgent.indexOf(\"Android 2.\")&&g(\"transform\",\"scale(1)\",!0)}),Modernizr.addTest(\"preserve3d\",g(\"transformStyle\",\"preserve-3d\")),Modernizr.addTest(\"csstransforms3d\",function(){var e=!!g(\"perspective\",\"1px\",!0),n=Modernizr._config.usePrefixes;if(e&&(!n||\"webkitPerspective\"in w.style)){var t,r=\"#modernizr{width:0;height:0}\";Modernizr.supports?t=\"@supports (perspective: 1px)\":(t=\"@media (transform-3d)\",n&&(t+=\",(-webkit-transform-3d)\")),t+=\"{#modernizr{width:7px;height:18px;margin:0;padding:0;border:0}}\",P(r+t,function(n){e=7===n.offsetWidth&&18===n.offsetHeight})}return e}),o(),r(y),delete S.addTest,delete S.addAsyncTest;for(var A=0;A<Modernizr._q.length;A++)Modernizr._q[A]();e.Modernizr=Modernizr}(window,document);</script><script type=\"text/javascript\">!function(a,b,c,d){function e(b,c){this.settings=null,this.options=a.extend({},e.Defaults,c),this.$element=a(b),this.drag=a.extend({},m),this.state=a.extend({},n),this.e=a.extend({},o),this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._invalidated={},this._pipe=[],a.each(e.Plugins,a.proxy(function(a,b){this._plugins[a[0].toLowerCase()+a.slice(1)]=new b(this)},this)),a.each(e.Pipe,a.proxy(function(b,c){this._pipe.push({filter:c.filter,run:a.proxy(c.run,this)})},this)),this.setup(),this.initialize()}function f(a){if(a.touches!==d)return{x:a.touches[0].pageX,y:a.touches[0].pageY};if(a.touches===d){if(a.pageX!==d)return{x:a.pageX,y:a.pageY};if(a.pageX===d)return{x:a.clientX,y:a.clientY}}}function g(a){var b,d,e=c.createElement(\"div\"),f=a;for(b in f)if(d=f[b],\"undefined\"!=typeof e.style[d])return e=null,[d,b];return[!1]}function h(){return g([\"transition\",\"WebkitTransition\",\"MozTransition\",\"OTransition\"])[1]}function i(){return g([\"transform\",\"WebkitTransform\",\"MozTransform\",\"OTransform\",\"msTransform\"])[0]}function j(){return g([\"perspective\",\"webkitPerspective\",\"MozPerspective\",\"OPerspective\",\"MsPerspective\"])[0]}function k(){return\"ontouchstart\"in b||!!navigator.msMaxTouchPoints}function l(){return b.navigator.msPointerEnabled}var m,n,o;m={start:0,startX:0,startY:0,current:0,currentX:0,currentY:0,offsetX:0,offsetY:0,distance:null,startTime:0,endTime:0,updatedX:0,targetEl:null},n={isTouch:!1,isScrolling:!1,isSwiping:!1,direction:!1,inMotion:!1},o={_onDragStart:null,_onDragMove:null,_onDragEnd:null,_transitionEnd:null,_resizer:null,_responsiveCall:null,_goToLoop:null,_checkVisibile:null},e.Defaults={items:3,loop:!1,center:!1,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:b,responsiveClass:!1,fallbackEasing:\"swing\",info:!1,nestedItemSelector:!1,itemElement:\"div\",stageElement:\"div\",themeClass:\"owl-theme\",baseClass:\"owl-carousel\",itemClass:\"owl-item\",centerClass:\"center\",activeClass:\"active\"},e.Width={Default:\"default\",Inner:\"inner\",Outer:\"outer\"},e.Plugins={},e.Pipe=[{filter:[\"width\",\"items\",\"settings\"],run:function(a){a.current=this._items&&this._items[this.relative(this._current)]}},{filter:[\"items\",\"settings\"],run:function(){var a=this._clones,b=this.$stage.children(\".cloned\");(b.length!==a.length||!this.settings.loop&&a.length>0)&&(this.$stage.children(\".cloned\").remove(),this._clones=[])}},{filter:[\"items\",\"settings\"],run:function(){var a,b,c=this._clones,d=this._items,e=this.settings.loop?c.length-Math.max(2*this.settings.items,2):0;for(a=0,b=Math.abs(e/2);b>a;a++)e>0?(this.$stage.children().eq(d.length+c.length-1).remove(),c.pop(),this.$stage.children().eq(0).remove(),c.pop()):(c.push(c.length/2),this.$stage.append(d[c[c.length-1]].clone().addClass(\"cloned\")),c.push(d.length-1-(c.length-1)/2),this.$stage.prepend(d[c[c.length-1]].clone().addClass(\"cloned\")))}},{filter:[\"width\",\"items\",\"settings\"],run:function(){var a,b,c,d=this.settings.rtl?1:-1,e=(this.width()/this.settings.items).toFixed(3),f=0;for(this._coordinates=[],b=0,c=this._clones.length+this._items.length;c>b;b++)a=this._mergers[this.relative(b)],a=this.settings.mergeFit&&Math.min(a,this.settings.items)||a,f+=(this.settings.autoWidth?this._items[this.relative(b)].width()+this.settings.margin:e*a)*d,this._coordinates.push(f)}},{filter:[\"width\",\"items\",\"settings\"],run:function(){var b,c,d=(this.width()/this.settings.items).toFixed(3),e={width:Math.abs(this._coordinates[this._coordinates.length-1])+2*this.settings.stagePadding,\"padding-left\":this.settings.stagePadding||\"\",\"padding-right\":this.settings.stagePadding||\"\"};if(this.$stage.css(e),e={width:this.settings.autoWidth?\"auto\":d-this.settings.margin},e[this.settings.rtl?\"margin-left\":\"margin-right\"]=this.settings.margin,!this.settings.autoWidth&&a.grep(this._mergers,function(a){return a>1}).length>0)for(b=0,c=this._coordinates.length;c>b;b++)e.width=Math.abs(this._coordinates[b])-Math.abs(this._coordinates[b-1]||0)-this.settings.margin,this.$stage.children().eq(b).css(e);else this.$stage.children().css(e)}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){a.current&&this.reset(this.$stage.children().index(a.current))}},{filter:[\"position\"],run:function(){this.animate(this.coordinates(this._current))}},{filter:[\"width\",\"position\",\"items\",\"settings\"],run:function(){var a,b,c,d,e=this.settings.rtl?1:-1,f=2*this.settings.stagePadding,g=this.coordinates(this.current())+f,h=g+this.width()*e,i=[];for(c=0,d=this._coordinates.length;d>c;c++)a=this._coordinates[c-1]||0,b=Math.abs(this._coordinates[c])+f*e,(this.op(a,\"<=\",g)&&this.op(a,\">\",h)||this.op(b,\"<\",g)&&this.op(b,\">\",h))&&i.push(c);this.$stage.children(\".\"+this.settings.activeClass).removeClass(this.settings.activeClass),this.$stage.children(\":eq(\"+i.join(\"), :eq(\")+\")\").addClass(this.settings.activeClass),this.settings.center&&(this.$stage.children(\".\"+this.settings.centerClass).removeClass(this.settings.centerClass),this.$stage.children().eq(this.current()).addClass(this.settings.centerClass))}}],e.prototype.initialize=function(){if(this.trigger(\"initialize\"),this.$element.addClass(this.settings.baseClass).addClass(this.settings.themeClass).toggleClass(\"owl-rtl\",this.settings.rtl),this.browserSupport(),this.settings.autoWidth&&this.state.imagesLoaded!==!0){var b,c,e;if(b=this.$element.find(\"img\"),c=this.settings.nestedItemSelector?\".\"+this.settings.nestedItemSelector:d,e=this.$element.children(c).width(),b.length&&0>=e)return this.preloadAutoWidthImages(b),!1}this.$element.addClass(\"owl-loading\"),this.$stage=a(\"<\"+this.settings.stageElement+' class=\"owl-stage\"/>').wrap('<div class=\"owl-stage-outer\">'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this._width=this.$element.width(),this.refresh(),this.$element.removeClass(\"owl-loading\").addClass(\"owl-loaded\"),this.eventsCall(),this.internalEvents(),this.addTriggerableEvents(),this.trigger(\"initialized\")},e.prototype.setup=function(){var b=this.viewport(),c=this.options.responsive,d=-1,e=null;c?(a.each(c,function(a){b>=a&&a>d&&(d=Number(a))}),e=a.extend({},this.options,c[d]),delete e.responsive,e.responsiveClass&&this.$element.attr(\"class\",function(a,b){return b.replace(/\\b owl-responsive-\\S+/g,\"\")}).addClass(\"owl-responsive-\"+d)):e=a.extend({},this.options),(null===this.settings||this._breakpoint!==d)&&(this.trigger(\"change\",{property:{name:\"settings\",value:e}}),this._breakpoint=d,this.settings=e,this.invalidate(\"settings\"),this.trigger(\"changed\",{property:{name:\"settings\",value:this.settings}}))},e.prototype.optionsLogic=function(){this.$element.toggleClass(\"owl-center\",this.settings.center),this.settings.loop&&this._items.length<this.settings.items&&(this.settings.loop=!1),this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},e.prototype.prepare=function(b){var c=this.trigger(\"prepare\",{content:b});return c.data||(c.data=a(\"<\"+this.settings.itemElement+\"/>\").addClass(this.settings.itemClass).append(b)),this.trigger(\"prepared\",{content:c.data}),c.data},e.prototype.update=function(){for(var b=0,c=this._pipe.length,d=a.proxy(function(a){return this[a]},this._invalidated),e={};c>b;)(this._invalidated.all||a.grep(this._pipe[b].filter,d).length>0)&&this._pipe[b].run(e),b++;this._invalidated={}},e.prototype.width=function(a){switch(a=a||e.Width.Default){case e.Width.Inner:case e.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},e.prototype.refresh=function(){if(0===this._items.length)return!1;(new Date).getTime();this.trigger(\"refresh\"),this.setup(),this.optionsLogic(),this.$stage.addClass(\"owl-refresh\"),this.update(),this.$stage.removeClass(\"owl-refresh\"),this.state.orientation=b.orientation,this.watchVisibility(),this.trigger(\"refreshed\")},e.prototype.eventsCall=function(){this.e._onDragStart=a.proxy(function(a){this.onDragStart(a)},this),this.e._onDragMove=a.proxy(function(a){this.onDragMove(a)},this),this.e._onDragEnd=a.proxy(function(a){this.onDragEnd(a)},this),this.e._onResize=a.proxy(function(a){this.onResize(a)},this),this.e._transitionEnd=a.proxy(function(a){this.transitionEnd(a)},this),this.e._preventClick=a.proxy(function(a){this.preventClick(a)},this)},e.prototype.onThrottledResize=function(){b.clearTimeout(this.resizeTimer),this.resizeTimer=b.setTimeout(this.e._onResize,this.settings.responsiveRefreshRate)},e.prototype.onResize=function(){return this._items.length?this._width===this.$element.width()?!1:this.trigger(\"resize\").isDefaultPrevented()?!1:(this._width=this.$element.width(),this.invalidate(\"width\"),this.refresh(),void this.trigger(\"resized\")):!1},e.prototype.eventsRouter=function(a){var b=a.type;\"mousedown\"===b||\"touchstart\"===b?this.onDragStart(a):\"mousemove\"===b||\"touchmove\"===b?this.onDragMove(a):\"mouseup\"===b||\"touchend\"===b?this.onDragEnd(a):\"touchcancel\"===b&&this.onDragEnd(a)},e.prototype.internalEvents=function(){var c=(k(),l());this.settings.mouseDrag?(this.$stage.on(\"mousedown\",a.proxy(function(a){this.eventsRouter(a)},this)),this.$stage.on(\"dragstart\",function(){return!1}),this.$stage.get(0).onselectstart=function(){return!1}):this.$element.addClass(\"owl-text-select-on\"),this.settings.touchDrag&&!c&&this.$stage.on(\"touchstart touchcancel\",a.proxy(function(a){this.eventsRouter(a)},this)),this.transitionEndVendor&&this.on(this.$stage.get(0),this.transitionEndVendor,this.e._transitionEnd,!1),this.settings.responsive!==!1&&this.on(b,\"resize\",a.proxy(this.onThrottledResize,this))},e.prototype.onDragStart=function(d){var e,g,h,i;if(e=d.originalEvent||d||b.event,3===e.which||this.state.isTouch)return!1;if(\"mousedown\"===e.type&&this.$stage.addClass(\"owl-grab\"),this.trigger(\"drag\"),this.drag.startTime=(new Date).getTime(),this.speed(0),this.state.isTouch=!0,this.state.isScrolling=!1,this.state.isSwiping=!1,this.drag.distance=0,g=f(e).x,h=f(e).y,this.drag.offsetX=this.$stage.position().left,this.drag.offsetY=this.$stage.position().top,this.settings.rtl&&(this.drag.offsetX=this.$stage.position().left+this.$stage.width()-this.width()+this.settings.margin),this.state.inMotion&&this.support3d)i=this.getTransformProperty(),this.drag.offsetX=i,this.animate(i),this.state.inMotion=!0;else if(this.state.inMotion&&!this.support3d)return this.state.inMotion=!1,!1;this.drag.startX=g-this.drag.offsetX,this.drag.startY=h-this.drag.offsetY,this.drag.start=g-this.drag.startX,this.drag.targetEl=e.target||e.srcElement,this.drag.updatedX=this.drag.start,(\"IMG\"===this.drag.targetEl.tagName||\"A\"===this.drag.targetEl.tagName)&&(this.drag.targetEl.draggable=!1),a(c).on(\"mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents\",a.proxy(function(a){this.eventsRouter(a)},this))},e.prototype.onDragMove=function(a){var c,e,g,h,i,j;this.state.isTouch&&(this.state.isScrolling||(c=a.originalEvent||a||b.event,e=f(c).x,g=f(c).y,this.drag.currentX=e-this.drag.startX,this.drag.currentY=g-this.drag.startY,this.drag.distance=this.drag.currentX-this.drag.offsetX,this.drag.distance<0?this.state.direction=this.settings.rtl?\"right\":\"left\":this.drag.distance>0&&(this.state.direction=this.settings.rtl?\"left\":\"right\"),this.settings.loop?this.op(this.drag.currentX,\">\",this.coordinates(this.minimum()))&&\"right\"===this.state.direction?this.drag.currentX-=(this.settings.center&&this.coordinates(0))-this.coordinates(this._items.length):this.op(this.drag.currentX,\"<\",this.coordinates(this.maximum()))&&\"left\"===this.state.direction&&(this.drag.currentX+=(this.settings.center&&this.coordinates(0))-this.coordinates(this._items.length)):(h=this.coordinates(this.settings.rtl?this.maximum():this.minimum()),i=this.coordinates(this.settings.rtl?this.minimum():this.maximum()),j=this.settings.pullDrag?this.drag.distance/5:0,this.drag.currentX=Math.max(Math.min(this.drag.currentX,h+j),i+j)),(this.drag.distance>8||this.drag.distance<-8)&&(c.preventDefault!==d?c.preventDefault():c.returnValue=!1,this.state.isSwiping=!0),this.drag.updatedX=this.drag.currentX,(this.drag.currentY>16||this.drag.currentY<-16)&&this.state.isSwiping===!1&&(this.state.isScrolling=!0,this.drag.updatedX=this.drag.start),this.animate(this.drag.updatedX)))},e.prototype.onDragEnd=function(b){var d,e,f;if(this.state.isTouch){if(\"mouseup\"===b.type&&this.$stage.removeClass(\"owl-grab\"),this.trigger(\"dragged\"),this.drag.targetEl.removeAttribute(\"draggable\"),this.state.isTouch=!1,this.state.isScrolling=!1,this.state.isSwiping=!1,0===this.drag.distance&&this.state.inMotion!==!0)return this.state.inMotion=!1,!1;this.drag.endTime=(new Date).getTime(),d=this.drag.endTime-this.drag.startTime,e=Math.abs(this.drag.distance),(e>3||d>300)&&this.removeClick(this.drag.targetEl),f=this.closest(this.drag.updatedX),this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(f),this.invalidate(\"position\"),this.update(),this.settings.pullDrag||this.drag.updatedX!==this.coordinates(f)||this.transitionEnd(),this.drag.distance=0,a(c).off(\".owl.dragEvents\")}},e.prototype.removeClick=function(c){this.drag.targetEl=c,a(c).on(\"click.preventClick\",this.e._preventClick),b.setTimeout(function(){a(c).off(\"click.preventClick\")},300)},e.prototype.preventClick=function(b){b.preventDefault?b.preventDefault():b.returnValue=!1,b.stopPropagation&&b.stopPropagation(),a(b.target).off(\"click.preventClick\")},e.prototype.getTransformProperty=function(){var a,c;return a=b.getComputedStyle(this.$stage.get(0),null).getPropertyValue(this.vendorName+\"transform\"),a=a.replace(/matrix(3d)?\\(|\\)/g,\"\").split(\",\"),c=16===a.length,c!==!0?a[4]:a[12]},e.prototype.closest=function(b){var c=-1,d=30,e=this.width(),f=this.coordinates();return this.settings.freeDrag||a.each(f,a.proxy(function(a,g){return b>g-d&&g+d>b?c=a:this.op(b,\"<\",g)&&this.op(b,\">\",f[a+1]||g-e)&&(c=\"left\"===this.state.direction?a+1:a),-1===c},this)),this.settings.loop||(this.op(b,\">\",f[this.minimum()])?c=b=this.minimum():this.op(b,\"<\",f[this.maximum()])&&(c=b=this.maximum())),c},e.prototype.animate=function(b){this.trigger(\"translate\"),this.state.inMotion=this.speed()>0,this.support3d?this.$stage.css({transform:\"translate3d(\"+b+\"px,0px, 0px)\",transition:this.speed()/1e3+\"s\"}):this.state.isTouch?this.$stage.css({left:b+\"px\"}):this.$stage.animate({left:b},this.speed()/1e3,this.settings.fallbackEasing,a.proxy(function(){this.state.inMotion&&this.transitionEnd()},this))},e.prototype.current=function(a){if(a===d)return this._current;if(0===this._items.length)return d;if(a=this.normalize(a),this._current!==a){var b=this.trigger(\"change\",{property:{name:\"position\",value:a}});b.data!==d&&(a=this.normalize(b.data)),this._current=a,this.invalidate(\"position\"),this.trigger(\"changed\",{property:{name:\"position\",value:this._current}})}return this._current},e.prototype.invalidate=function(a){this._invalidated[a]=!0},e.prototype.reset=function(a){a=this.normalize(a),a!==d&&(this._speed=0,this._current=a,this.suppress([\"translate\",\"translated\"]),this.animate(this.coordinates(a)),this.release([\"translate\",\"translated\"]))},e.prototype.normalize=function(b,c){var e=c?this._items.length:this._items.length+this._clones.length;return!a.isNumeric(b)||1>e?d:b=this._clones.length?(b%e+e)%e:Math.max(this.minimum(c),Math.min(this.maximum(c),b))},e.prototype.relative=function(a){return a=this.normalize(a),a-=this._clones.length/2,this.normalize(a,!0)},e.prototype.maximum=function(a){var b,c,d,e=0,f=this.settings;if(a)return this._items.length-1;if(!f.loop&&f.center)b=this._items.length-1;else if(f.loop||f.center)if(f.loop||f.center)b=this._items.length+f.items;else{if(!f.autoWidth&&!f.merge)throw\"Can not detect maximum absolute position.\";for(revert=f.rtl?1:-1,c=this.$stage.width()-this.$element.width();(d=this.coordinates(e))&&!(d*revert>=c);)b=++e}else b=this._items.length-f.items;return b},e.prototype.minimum=function(a){return a?0:this._clones.length/2},e.prototype.items=function(a){return a===d?this._items.slice():(a=this.normalize(a,!0),this._items[a])},e.prototype.mergers=function(a){return a===d?this._mergers.slice():(a=this.normalize(a,!0),this._mergers[a])},e.prototype.clones=function(b){var c=this._clones.length/2,e=c+this._items.length,f=function(a){return a%2===0?e+a/2:c-(a+1)/2};return b===d?a.map(this._clones,function(a,b){return f(b)}):a.map(this._clones,function(a,c){return a===b?f(c):null})},e.prototype.speed=function(a){return a!==d&&(this._speed=a),this._speed},e.prototype.coordinates=function(b){var c=null;return b===d?a.map(this._coordinates,a.proxy(function(a,b){return this.coordinates(b)},this)):(this.settings.center?(c=this._coordinates[b],c+=(this.width()-c+(this._coordinates[b-1]||0))/2*(this.settings.rtl?-1:1)):c=this._coordinates[b-1]||0,c)},e.prototype.duration=function(a,b,c){return Math.min(Math.max(Math.abs(b-a),1),6)*Math.abs(c||this.settings.smartSpeed)},e.prototype.to=function(c,d){if(this.settings.loop){var e=c-this.relative(this.current()),f=this.current(),g=this.current(),h=this.current()+e,i=0>g-h?!0:!1,j=this._clones.length+this._items.length;h<this.settings.items&&i===!1?(f=g+this._items.length,this.reset(f)):h>=j-this.settings.items&&i===!0&&(f=g-this._items.length,this.reset(f)),b.clearTimeout(this.e._goToLoop),this.e._goToLoop=b.setTimeout(a.proxy(function(){this.speed(this.duration(this.current(),f+e,d)),this.current(f+e),this.update()},this),30)}else this.speed(this.duration(this.current(),c,d)),this.current(c),this.update()},e.prototype.next=function(a){a=a||!1,this.to(this.relative(this.current())+1,a)},e.prototype.prev=function(a){a=a||!1,this.to(this.relative(this.current())-1,a)},e.prototype.transitionEnd=function(a){return a!==d&&(a.stopPropagation(),(a.target||a.srcElement||a.originalTarget)!==this.$stage.get(0))?!1:(this.state.inMotion=!1,void this.trigger(\"translated\"))},e.prototype.viewport=function(){var d;if(this.options.responsiveBaseElement!==b)d=a(this.options.responsiveBaseElement).width();else if(b.innerWidth)d=b.innerWidth;else{if(!c.documentElement||!c.documentElement.clientWidth)throw\"Can not detect viewport width.\";d=c.documentElement.clientWidth}return d},e.prototype.replace=function(b){this.$stage.empty(),this._items=[],b&&(b=b instanceof jQuery?b:a(b)),this.settings.nestedItemSelector&&(b=b.find(\".\"+this.settings.nestedItemSelector)),b.filter(function(){return 1===this.nodeType}).each(a.proxy(function(a,b){b=this.prepare(b),this.$stage.append(b),this._items.push(b),this._mergers.push(1*b.find(\"[data-merge]\").andSelf(\"[data-merge]\").attr(\"data-merge\")||1)},this)),this.reset(a.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate(\"items\")},e.prototype.add=function(a,b){b=b===d?this._items.length:this.normalize(b,!0),this.trigger(\"add\",{content:a,position:b}),0===this._items.length||b===this._items.length?(this.$stage.append(a),this._items.push(a),this._mergers.push(1*a.find(\"[data-merge]\").andSelf(\"[data-merge]\").attr(\"data-merge\")||1)):(this._items[b].before(a),this._items.splice(b,0,a),this._mergers.splice(b,0,1*a.find(\"[data-merge]\").andSelf(\"[data-merge]\").attr(\"data-merge\")||1)),this.invalidate(\"items\"),this.trigger(\"added\",{content:a,position:b})},e.prototype.remove=function(a){a=this.normalize(a,!0),a!==d&&(this.trigger(\"remove\",{content:this._items[a],position:a}),this._items[a].remove(),this._items.splice(a,1),this._mergers.splice(a,1),this.invalidate(\"items\"),this.trigger(\"removed\",{content:null,position:a}))},e.prototype.addTriggerableEvents=function(){var b=a.proxy(function(b,c){return a.proxy(function(a){a.relatedTarget!==this&&(this.suppress([c]),b.apply(this,[].slice.call(arguments,1)),this.release([c]))},this)},this);a.each({next:this.next,prev:this.prev,to:this.to,destroy:this.destroy,refresh:this.refresh,replace:this.replace,add:this.add,remove:this.remove},a.proxy(function(a,c){this.$element.on(a+\".owl.carousel\",b(c,a+\".owl.carousel\"))},this))},e.prototype.watchVisibility=function(){function c(a){return a.offsetWidth>0&&a.offsetHeight>0}function d(){c(this.$element.get(0))&&(this.$element.removeClass(\"owl-hidden\"),this.refresh(),b.clearInterval(this.e._checkVisibile))}c(this.$element.get(0))||(this.$element.addClass(\"owl-hidden\"),b.clearInterval(this.e._checkVisibile),this.e._checkVisibile=b.setInterval(a.proxy(d,this),500))},e.prototype.preloadAutoWidthImages=function(b){var c,d,e,f;c=0,d=this,b.each(function(g,h){e=a(h),f=new Image,f.onload=function(){c++,e.attr(\"src\",f.src),e.css(\"opacity\",1),c>=b.length&&(d.state.imagesLoaded=!0,d.initialize())},f.src=e.attr(\"src\")||e.attr(\"data-src\")||e.attr(\"data-src-retina\")})},e.prototype.destroy=function(){this.$element.hasClass(this.settings.themeClass)&&this.$element.removeClass(this.settings.themeClass),this.settings.responsive!==!1&&a(b).off(\"resize.owl.carousel\"),this.transitionEndVendor&&this.off(this.$stage.get(0),this.transitionEndVendor,this.e._transitionEnd);for(var d in this._plugins)this._plugins[d].destroy();(this.settings.mouseDrag||this.settings.touchDrag)&&(this.$stage.off(\"mousedown touchstart touchcancel\"),a(c).off(\".owl.dragEvents\"),this.$stage.get(0).onselectstart=function(){},this.$stage.off(\"dragstart\",function(){return!1})),this.$element.off(\".owl\"),this.$stage.children(\".cloned\").remove(),this.e=null,this.$element.removeData(\"owlCarousel\"),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.unwrap()},e.prototype.op=function(a,b,c){var d=this.settings.rtl;switch(b){case\"<\":return d?a>c:c>a;case\">\":return d?c>a:a>c;case\">=\":return d?c>=a:a>=c;case\"<=\":return d?a>=c:c>=a}},e.prototype.on=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,d):a.attachEvent&&a.attachEvent(\"on\"+b,c)},e.prototype.off=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,d):a.detachEvent&&a.detachEvent(\"on\"+b,c)},e.prototype.trigger=function(b,c,d){var e={item:{count:this._items.length,index:this.current()}},f=a.camelCase(a.grep([\"on\",b,d],function(a){return a}).join(\"-\").toLowerCase()),g=a.Event([b,\"owl\",d||\"carousel\"].join(\".\").toLowerCase(),a.extend({relatedTarget:this},e,c));return this._supress[b]||(a.each(this._plugins,function(a,b){b.onTrigger&&b.onTrigger(g)}),this.$element.trigger(g),this.settings&&\"function\"==typeof this.settings[f]&&this.settings[f].apply(this,g)),g},e.prototype.suppress=function(b){a.each(b,a.proxy(function(a,b){this._supress[b]=!0},this))},e.prototype.release=function(b){a.each(b,a.proxy(function(a,b){delete this._supress[b]},this))},e.prototype.browserSupport=function(){if(this.support3d=j(),this.support3d){this.transformVendor=i();var a=[\"transitionend\",\"webkitTransitionEnd\",\"transitionend\",\"oTransitionEnd\"];this.transitionEndVendor=a[h()],this.vendorName=this.transformVendor.replace(/Transform/i,\"\"),this.vendorName=\"\"!==this.vendorName?\"-\"+this.vendorName.toLowerCase()+\"-\":\"\"}this.state.orientation=b.orientation},a.fn.owlCarousel=function(b){return this.each(function(){a(this).data(\"owlCarousel\")||a(this).data(\"owlCarousel\",new e(this,b))})},a.fn.owlCarousel.Constructor=e}(window.Zepto||window.jQuery,window,document),function(a,b){var c=function(b){this._core=b,this._loaded=[],this._handlers={\"initialized.owl.carousel change.owl.carousel\":a.proxy(function(b){if(b.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(b.property&&\"position\"==b.property.name||\"initialized\"==b.type))for(var c=this._core.settings,d=c.center&&Math.ceil(c.items/2)||c.items,e=c.center&&-1*d||0,f=(b.property&&b.property.value||this._core.current())+e,g=this._core.clones().length,h=a.proxy(function(a,b){this.load(b)},this);e++<d;)this.load(g/2+this._core.relative(f)),g&&a.each(this._core.clones(this._core.relative(f++)),h)},this)},this._core.options=a.extend({},c.Defaults,this._core.options),this._core.$element.on(this._handlers)};c.Defaults={lazyLoad:!1},c.prototype.load=function(c){var d=this._core.$stage.children().eq(c),e=d&&d.find(\".owl-lazy\");!e||a.inArray(d.get(0),this._loaded)>-1||(e.each(a.proxy(function(c,d){var e,f=a(d),g=b.devicePixelRatio>1&&f.attr(\"data-src-retina\")||f.attr(\"data-src\");this._core.trigger(\"load\",{element:f,url:g},\"lazy\"),f.is(\"img\")?f.one(\"load.owl.lazy\",a.proxy(function(){f.css(\"opacity\",1),this._core.trigger(\"loaded\",{element:f,url:g},\"lazy\")},this)).attr(\"src\",g):(e=new Image,e.onload=a.proxy(function(){f.css({\"background-image\":\"url(\"+g+\")\",opacity:\"1\"}),this._core.trigger(\"loaded\",{element:f,url:g},\"lazy\")},this),e.src=g)},this)),this._loaded.push(d.get(0)))},c.prototype.destroy=function(){var a,b;for(a in this.handlers)this._core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=c}(window.Zepto||window.jQuery,window,document),function(a){var b=function(c){this._core=c,this._handlers={\"initialized.owl.carousel\":a.proxy(function(){this._core.settings.autoHeight&&this.update()},this),\"changed.owl.carousel\":a.proxy(function(a){this._core.settings.autoHeight&&\"position\"==a.property.name&&this.update()},this),\"loaded.owl.lazy\":a.proxy(function(a){this._core.settings.autoHeight&&a.element.closest(\".\"+this._core.settings.itemClass)===this._core.$stage.children().eq(this._core.current())&&this.update()},this)},this._core.options=a.extend({},b.Defaults,this._core.options),this._core.$element.on(this._handlers)};b.Defaults={autoHeight:!1,autoHeightClass:\"owl-height\"},b.prototype.update=function(){this._core.$stage.parent().height(this._core.$stage.children().eq(this._core.current()).height()).addClass(this._core.settings.autoHeightClass)},b.prototype.destroy=function(){var a,b;for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.AutoHeight=b}(window.Zepto||window.jQuery,window,document),function(a,b,c){var d=function(b){this._core=b,this._videos={},this._playing=null,this._fullscreen=!1,this._handlers={\"resize.owl.carousel\":a.proxy(function(a){this._core.settings.video&&!this.isInFullScreen()&&a.preventDefault()},this),\"refresh.owl.carousel changed.owl.carousel\":a.proxy(function(){this._playing&&this.stop()},this),\"prepared.owl.carousel\":a.proxy(function(b){var c=a(b.content).find(\".owl-video\");c.length&&(c.css(\"display\",\"none\"),this.fetch(c,a(b.content)))},this)},this._core.options=a.extend({},d.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on(\"click.owl.video\",\".owl-video-play-icon\",a.proxy(function(a){this.play(a)},this))};d.Defaults={video:!1,videoHeight:!1,videoWidth:!1},d.prototype.fetch=function(a,b){var c=a.attr(\"data-vimeo-id\")?\"vimeo\":\"youtube\",d=a.attr(\"data-vimeo-id\")||a.attr(\"data-youtube-id\"),e=a.attr(\"data-width\")||this._core.settings.videoWidth,f=a.attr(\"data-height\")||this._core.settings.videoHeight,g=a.attr(\"href\");if(!g)throw new Error(\"Missing video URL.\");if(d=g.match(/(http:|https:|)\\/\\/(player.|www.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com))\\/(video\\/|embed\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/),d[3].indexOf(\"youtu\")>-1)c=\"youtube\";else{if(!(d[3].indexOf(\"vimeo\")>-1))throw new Error(\"Video URL not supported.\");c=\"vimeo\"}d=d[6],this._videos[g]={type:c,id:d,width:e,height:f},b.attr(\"data-video\",g),this.thumbnail(a,this._videos[g])},d.prototype.thumbnail=function(b,c){var d,e,f,g=c.width&&c.height?'style=\"width:'+c.width+\"px;height:\"+c.height+'px;\"':\"\",h=b.find(\"img\"),i=\"src\",j=\"\",k=this._core.settings,l=function(a){e='<div class=\"owl-video-play-icon\"></div>',d=k.lazyLoad?'<div class=\"owl-video-tn '+j+'\" '+i+'=\"'+a+'\"></div>':'<div class=\"owl-video-tn\" style=\"opacity:1;background-image:url('+a+')\"></div>',b.after(d),b.after(e)};return b.wrap('<div class=\"owl-video-wrapper\"'+g+\"></div>\"),this._core.settings.lazyLoad&&(i=\"data-src\",j=\"owl-lazy\"),h.length?(l(h.attr(i)),h.remove(),!1):void(\"youtube\"===c.type?(f=\"http://img.youtube.com/vi/\"+c.id+\"/hqdefault.jpg\",l(f)):\"vimeo\"===c.type&&a.ajax({type:\"GET\",url:\"http://vimeo.com/api/v2/video/\"+c.id+\".json\",jsonp:\"callback\",dataType:\"jsonp\",success:function(a){f=a[0].thumbnail_large,l(f)}}))},d.prototype.stop=function(){this._core.trigger(\"stop\",null,\"video\"),this._playing.find(\".owl-video-frame\").remove(),this._playing.removeClass(\"owl-video-playing\"),this._playing=null},d.prototype.play=function(b){this._core.trigger(\"play\",null,\"video\"),this._playing&&this.stop();var c,d,e=a(b.target||b.srcElement),f=e.closest(\".\"+this._core.settings.itemClass),g=this._videos[f.attr(\"data-video\")],h=g.width||\"100%\",i=g.height||this._core.$stage.height();\"youtube\"===g.type?c='<iframe width=\"'+h+'\" height=\"'+i+'\" src=\"http://www.youtube.com/embed/'+g.id+\"?autoplay=1&v=\"+g.id+'\" frameborder=\"0\" allowfullscreen></iframe>':\"vimeo\"===g.type&&(c='<iframe src=\"http://player.vimeo.com/video/'+g.id+'?autoplay=1\" width=\"'+h+'\" height=\"'+i+'\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'),f.addClass(\"owl-video-playing\"),this._playing=f,d=a('<div style=\"height:'+i+\"px; width:\"+h+'px\" class=\"owl-video-frame\">'+c+\"</div>\"),e.after(d)},d.prototype.isInFullScreen=function(){var d=c.fullscreenElement||c.mozFullScreenElement||c.webkitFullscreenElement;return d&&a(d).parent().hasClass(\"owl-video-frame\")&&(this._core.speed(0),this._fullscreen=!0),d&&this._fullscreen&&this._playing?!1:this._fullscreen?(this._fullscreen=!1,!1):this._playing&&this._core.state.orientation!==b.orientation?(this._core.state.orientation=b.orientation,!1):!0},d.prototype.destroy=function(){var a,b;this._core.$element.off(\"click.owl.video\");for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Video=d}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this.core=b,this.core.options=a.extend({},e.Defaults,this.core.options),this.swapping=!0,this.previous=d,this.next=d,this.handlers={\"change.owl.carousel\":a.proxy(function(a){\"position\"==a.property.name&&(this.previous=this.core.current(),this.next=a.property.value)},this),\"drag.owl.carousel dragged.owl.carousel translated.owl.carousel\":a.proxy(function(a){this.swapping=\"translated\"==a.type},this),\"translate.owl.carousel\":a.proxy(function(){this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};e.Defaults={animateOut:!1,animateIn:!1},e.prototype.swap=function(){if(1===this.core.settings.items&&this.core.support3d){this.core.speed(0);var b,c=a.proxy(this.clear,this),d=this.core.$stage.children().eq(this.previous),e=this.core.$stage.children().eq(this.next),f=this.core.settings.animateIn,g=this.core.settings.animateOut;this.core.current()!==this.previous&&(g&&(b=this.core.coordinates(this.previous)-this.core.coordinates(this.next),d.css({left:b+\"px\"}).addClass(\"animated owl-animated-out\").addClass(g).one(\"webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend\",c)),f&&e.addClass(\"animated owl-animated-in\").addClass(f).one(\"webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend\",c))}},e.prototype.clear=function(b){a(b.target).css({left:\"\"}).removeClass(\"animated owl-animated-out owl-animated-in\").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.transitionEnd()},e.prototype.destroy=function(){var a,b;for(a in this.handlers)this.core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Animate=e}(window.Zepto||window.jQuery,window,document),function(a,b,c){var d=function(b){this.core=b,this.core.options=a.extend({},d.Defaults,this.core.options),this.handlers={\"translated.owl.carousel refreshed.owl.carousel\":a.proxy(function(){this.autoplay()\n},this),\"play.owl.autoplay\":a.proxy(function(a,b,c){this.play(b,c)},this),\"stop.owl.autoplay\":a.proxy(function(){this.stop()},this),\"mouseover.owl.autoplay\":a.proxy(function(){this.core.settings.autoplayHoverPause&&this.pause()},this),\"mouseleave.owl.autoplay\":a.proxy(function(){this.core.settings.autoplayHoverPause&&this.autoplay()},this)},this.core.$element.on(this.handlers)};d.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},d.prototype.autoplay=function(){this.core.settings.autoplay&&!this.core.state.videoPlay?(b.clearInterval(this.interval),this.interval=b.setInterval(a.proxy(function(){this.play()},this),this.core.settings.autoplayTimeout)):b.clearInterval(this.interval)},d.prototype.play=function(){return c.hidden===!0||this.core.state.isTouch||this.core.state.isScrolling||this.core.state.isSwiping||this.core.state.inMotion?void 0:this.core.settings.autoplay===!1?void b.clearInterval(this.interval):void this.core.next(this.core.settings.autoplaySpeed)},d.prototype.stop=function(){b.clearInterval(this.interval)},d.prototype.pause=function(){b.clearInterval(this.interval)},d.prototype.destroy=function(){var a,c;b.clearInterval(this.interval);for(a in this.handlers)this.core.$element.off(a,this.handlers[a]);for(c in Object.getOwnPropertyNames(this))\"function\"!=typeof this[c]&&(this[c]=null)},a.fn.owlCarousel.Constructor.Plugins.autoplay=d}(window.Zepto||window.jQuery,window,document),function(a){\"use strict\";var b=function(c){this._core=c,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={\"prepared.owl.carousel\":a.proxy(function(b){this._core.settings.dotsData&&this._templates.push(a(b.content).find(\"[data-dot]\").andSelf(\"[data-dot]\").attr(\"data-dot\"))},this),\"add.owl.carousel\":a.proxy(function(b){this._core.settings.dotsData&&this._templates.splice(b.position,0,a(b.content).find(\"[data-dot]\").andSelf(\"[data-dot]\").attr(\"data-dot\"))},this),\"remove.owl.carousel prepared.owl.carousel\":a.proxy(function(a){this._core.settings.dotsData&&this._templates.splice(a.position,1)},this),\"change.owl.carousel\":a.proxy(function(a){if(\"position\"==a.property.name&&!this._core.state.revert&&!this._core.settings.loop&&this._core.settings.navRewind){var b=this._core.current(),c=this._core.maximum(),d=this._core.minimum();a.data=a.property.value>c?b>=c?d:c:a.property.value<d?c:a.property.value}},this),\"changed.owl.carousel\":a.proxy(function(a){\"position\"==a.property.name&&this.draw()},this),\"refreshed.owl.carousel\":a.proxy(function(){this._initialized||(this.initialize(),this._initialized=!0),this._core.trigger(\"refresh\",null,\"navigation\"),this.update(),this.draw(),this._core.trigger(\"refreshed\",null,\"navigation\")},this)},this._core.options=a.extend({},b.Defaults,this._core.options),this.$element.on(this._handlers)};b.Defaults={nav:!1,navRewind:!0,navText:[\"prev\",\"next\"],navSpeed:!1,navElement:\"div\",navContainer:!1,navContainerClass:\"owl-nav\",navClass:[\"owl-prev\",\"owl-next\"],slideBy:1,dotClass:\"owl-dot\",dotsClass:\"owl-dots\",dots:!0,dotsEach:!1,dotData:!1,dotsSpeed:!1,dotsContainer:!1,controlsClass:\"owl-controls\"},b.prototype.initialize=function(){var b,c,d=this._core.settings;d.dotsData||(this._templates=[a(\"<div>\").addClass(d.dotClass).append(a(\"<span>\")).prop(\"outerHTML\")]),d.navContainer&&d.dotsContainer||(this._controls.$container=a(\"<div>\").addClass(d.controlsClass).appendTo(this.$element)),this._controls.$indicators=d.dotsContainer?a(d.dotsContainer):a(\"<div>\").hide().addClass(d.dotsClass).appendTo(this._controls.$container),this._controls.$indicators.on(\"click\",\"div\",a.proxy(function(b){var c=a(b.target).parent().is(this._controls.$indicators)?a(b.target).index():a(b.target).parent().index();b.preventDefault(),this.to(c,d.dotsSpeed)},this)),b=d.navContainer?a(d.navContainer):a(\"<div>\").addClass(d.navContainerClass).prependTo(this._controls.$container),this._controls.$next=a(\"<\"+d.navElement+\">\"),this._controls.$previous=this._controls.$next.clone(),this._controls.$previous.addClass(d.navClass[0]).html(d.navText[0]).hide().prependTo(b).on(\"click\",a.proxy(function(){this.prev(d.navSpeed)},this)),this._controls.$next.addClass(d.navClass[1]).html(d.navText[1]).hide().appendTo(b).on(\"click\",a.proxy(function(){this.next(d.navSpeed)},this));for(c in this._overrides)this._core[c]=a.proxy(this[c],this)},b.prototype.destroy=function(){var a,b,c,d;for(a in this._handlers)this.$element.off(a,this._handlers[a]);for(b in this._controls)this._controls[b].remove();for(d in this.overides)this._core[d]=this._overrides[d];for(c in Object.getOwnPropertyNames(this))\"function\"!=typeof this[c]&&(this[c]=null)},b.prototype.update=function(){var a,b,c,d=this._core.settings,e=this._core.clones().length/2,f=e+this._core.items().length,g=d.center||d.autoWidth||d.dotData?1:d.dotsEach||d.items;if(\"page\"!==d.slideBy&&(d.slideBy=Math.min(d.slideBy,d.items)),d.dots||\"page\"==d.slideBy)for(this._pages=[],a=e,b=0,c=0;f>a;a++)(b>=g||0===b)&&(this._pages.push({start:a-e,end:a-e+g-1}),b=0,++c),b+=this._core.mergers(this._core.relative(a))},b.prototype.draw=function(){var b,c,d=\"\",e=this._core.settings,f=(this._core.$stage.children(),this._core.relative(this._core.current()));if(!e.nav||e.loop||e.navRewind||(this._controls.$previous.toggleClass(\"disabled\",0>=f),this._controls.$next.toggleClass(\"disabled\",f>=this._core.maximum())),this._controls.$previous.toggle(e.nav),this._controls.$next.toggle(e.nav),e.dots){if(b=this._pages.length-this._controls.$indicators.children().length,e.dotData&&0!==b){for(c=0;c<this._controls.$indicators.children().length;c++)d+=this._templates[this._core.relative(c)];this._controls.$indicators.html(d)}else b>0?(d=new Array(b+1).join(this._templates[0]),this._controls.$indicators.append(d)):0>b&&this._controls.$indicators.children().slice(b).remove();this._controls.$indicators.find(\".active\").removeClass(\"active\"),this._controls.$indicators.children().eq(a.inArray(this.current(),this._pages)).addClass(\"active\")}this._controls.$indicators.toggle(e.dots)},b.prototype.onTrigger=function(b){var c=this._core.settings;b.page={index:a.inArray(this.current(),this._pages),count:this._pages.length,size:c&&(c.center||c.autoWidth||c.dotData?1:c.dotsEach||c.items)}},b.prototype.current=function(){var b=this._core.relative(this._core.current());return a.grep(this._pages,function(a){return a.start<=b&&a.end>=b}).pop()},b.prototype.getPosition=function(b){var c,d,e=this._core.settings;return\"page\"==e.slideBy?(c=a.inArray(this.current(),this._pages),d=this._pages.length,b?++c:--c,c=this._pages[(c%d+d)%d].start):(c=this._core.relative(this._core.current()),d=this._core.items().length,b?c+=e.slideBy:c-=e.slideBy),c},b.prototype.next=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!0),b)},b.prototype.prev=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!1),b)},b.prototype.to=function(b,c,d){var e;d?a.proxy(this._overrides.to,this._core)(b,c):(e=this._pages.length,a.proxy(this._overrides.to,this._core)(this._pages[(b%e+e)%e].start,c))},a.fn.owlCarousel.Constructor.Plugins.Navigation=b}(window.Zepto||window.jQuery,window,document),function(a,b){\"use strict\";var c=function(d){this._core=d,this._hashes={},this.$element=this._core.$element,this._handlers={\"initialized.owl.carousel\":a.proxy(function(){\"URLHash\"==this._core.settings.startPosition&&a(b).trigger(\"hashchange.owl.navigation\")},this),\"prepared.owl.carousel\":a.proxy(function(b){var c=a(b.content).find(\"[data-hash]\").andSelf(\"[data-hash]\").attr(\"data-hash\");this._hashes[c]=b.content},this)},this._core.options=a.extend({},c.Defaults,this._core.options),this.$element.on(this._handlers),a(b).on(\"hashchange.owl.navigation\",a.proxy(function(){var a=b.location.hash.substring(1),c=this._core.$stage.children(),d=this._hashes[a]&&c.index(this._hashes[a])||0;return a?void this._core.to(d,!1,!0):!1},this))};c.Defaults={URLhashListener:!1},c.prototype.destroy=function(){var c,d;a(b).off(\"hashchange.owl.navigation\");for(c in this._handlers)this._core.$element.off(c,this._handlers[c]);for(d in Object.getOwnPropertyNames(this))\"function\"!=typeof this[d]&&(this[d]=null)},a.fn.owlCarousel.Constructor.Plugins.Hash=c}(window.Zepto||window.jQuery,window,document);</script><script type=\"text/javascript\">$(document).ready(function () {\n                if ($(\".ckeAdminPencil\").length > 0) {\n                    $(\"#ShowPencil\").remove();\n                    $(\".AdminPencilParent\").css(\"display\", \"block\");\n                };\n            });\n            function ShowHidePencils() {\n                if ($(\".AdminPencilParent\").css(\"display\") == \"none\") {\n                    $(\"#ShowPencil\").find('img').attr(\"src\", \"/img/eco/close_red.png\");\n                    $(\".AdminPencilParent\").each(function (index) {\n                        $(this).parent().css(\"position\", \"relative\");\n                        $(this).fadeIn(500);\n                        $(this).after(\"<div class='AdminPencilBack'></div>\")\n                        $(this).next().fadeIn(500);\n                    });\n\n                } else {\n\n                    $(\"#ShowPencil\").find('img').attr(\"src\", \"/img/eco/ShowPencil.png\");\n                    $(\".AdminPencilParent\").each(function (index) {\n                        $(this).next().slideToggle(\"slow\", function () {\n                            $(this).parent().css(\"position\", \"\");\n                            $(this).remove();\n                        });\n                        $(this).slideToggle(\"slow\", function () {\n                            \n                        });\n                    });\n\n\n                };\n            }</script><script type=\"text/javascript\">/* HTML5 Placeholder jQuery Plugin - v2.3.1\n * Copyright (c)2015 Mathias Bynens\n * 2015-12-16\n */\n!function(a){\"function\"==typeof define&&define.amd?define([\"jquery\"],a):a(\"object\"==typeof module&&module.exports?require(\"jquery\"):jQuery)}(function(a){function b(b){var c={},d=/^jQuery\\d+$/;return a.each(b.attributes,function(a,b){b.specified&&!d.test(b.name)&&(c[b.name]=b.value)}),c}function c(b,c){var d=this,f=a(this);if(d.value===f.attr(h?\"placeholder-x\":\"placeholder\")&&f.hasClass(n.customClass))if(d.value=\"\",f.removeClass(n.customClass),f.data(\"placeholder-password\")){if(f=f.hide().nextAll('input[type=\"password\"]:first').show().attr(\"id\",f.removeAttr(\"id\").data(\"placeholder-id\")),b===!0)return f[0].value=c,c;f.focus()}else d==e()&&d.select()}function d(d){var e,f=this,g=a(this),i=f.id;if(!d||\"blur\"!==d.type||!g.hasClass(n.customClass))if(\"\"===f.value){if(\"password\"===f.type){if(!g.data(\"placeholder-textinput\")){try{e=g.clone().prop({type:\"text\"})}catch(j){e=a(\"<input>\").attr(a.extend(b(this),{type:\"text\"}))}e.removeAttr(\"name\").data({\"placeholder-enabled\":!0,\"placeholder-password\":g,\"placeholder-id\":i}).bind(\"focus.placeholder\",c),g.data({\"placeholder-textinput\":e,\"placeholder-id\":i}).before(e)}f.value=\"\",g=g.removeAttr(\"id\").hide().prevAll('input[type=\"text\"]:first').attr(\"id\",g.data(\"placeholder-id\")).show()}else{var k=g.data(\"placeholder-password\");k&&(k[0].value=\"\",g.attr(\"id\",g.data(\"placeholder-id\")).show().nextAll('input[type=\"password\"]:last').hide().removeAttr(\"id\"))}g.addClass(n.customClass),g[0].value=g.attr(h?\"placeholder-x\":\"placeholder\")}else g.removeClass(n.customClass)}function e(){try{return document.activeElement}catch(a){}}var f,g,h=!1,i=\"[object OperaMini]\"===Object.prototype.toString.call(window.operamini),j=\"placeholder\"in document.createElement(\"input\")&&!i&&!h,k=\"placeholder\"in document.createElement(\"textarea\")&&!i&&!h,l=a.valHooks,m=a.propHooks,n={};j&&k?(g=a.fn.placeholder=function(){return this},g.input=!0,g.textarea=!0):(g=a.fn.placeholder=function(b){var e={customClass:\"placeholder\"};return n=a.extend({},e,b),this.filter((j?\"textarea\":\":input\")+\"[\"+(h?\"placeholder-x\":\"placeholder\")+\"]\").not(\".\"+n.customClass).not(\":radio, :checkbox, [type=hidden]\").bind({\"focus.placeholder\":c,\"blur.placeholder\":d}).data(\"placeholder-enabled\",!0).trigger(\"blur.placeholder\")},g.input=j,g.textarea=k,f={get:function(b){var c=a(b),d=c.data(\"placeholder-password\");return d?d[0].value:c.data(\"placeholder-enabled\")&&c.hasClass(n.customClass)?\"\":b.value},set:function(b,f){var g,h,i=a(b);return\"\"!==f&&(g=i.data(\"placeholder-textinput\"),h=i.data(\"placeholder-password\"),g?(c.call(g[0],!0,f)||(b.value=f),g[0].value=f):h&&(c.call(b,!0,f)||(h[0].value=f),b.value=f)),i.data(\"placeholder-enabled\")?(\"\"===f?(b.value=f,b!=e()&&d.call(b)):(i.hasClass(n.customClass)&&c.call(b),b.value=f),i):(b.value=f,i)}},j||(l.input=f,m.value=f),k||(l.textarea=f,m.value=f),a(function(){a(document).delegate(\"form\",\"submit.placeholder\",function(){var b=a(\".\"+n.customClass,this).each(function(){c.call(this,!0,\"\")});setTimeout(function(){b.each(d)},10)})}),a(window).bind(\"beforeunload.placeholder\",function(){var b=!0;try{\"javascript:void(0)\"===document.activeElement.toString()&&(b=!1)}catch(c){}b&&a(\".\"+n.customClass).each(function(){this.value=\"\"})}))});\n</script><script type=\"text/javascript\">/*\n * jQuery UI Widget 1.10.1+amd\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2013 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/jQuery.widget/\n */\n\n(function (factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // Register as an anonymous AMD module:\n        define([\"jquery\"], factory);\n    } else {\n        // Browser globals:\n        factory(jQuery);\n    }\n}(function( $, undefined ) {\n\nvar uuid = 0,\n\tslice = Array.prototype.slice,\n\t_cleanData = $.cleanData;\n$.cleanData = function( elems ) {\n\tfor ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\n\t\ttry {\n\t\t\t$( elem ).triggerHandler( \"remove\" );\n\t\t// http://bugs.jquery.com/ticket/8235\n\t\t} catch( e ) {}\n\t}\n\t_cleanData( elems );\n};\n\n$.widget = function( name, base, prototype ) {\n\tvar fullName, existingConstructor, constructor, basePrototype,\n\t\t// proxiedPrototype allows the provided prototype to remain unmodified\n\t\t// so that it can be used as a mixin for multiple widgets (#8876)\n\t\tproxiedPrototype = {},\n\t\tnamespace = name.split( \".\" )[ 0 ];\n\n\tname = name.split( \".\" )[ 1 ];\n\tfullName = namespace + \"-\" + name;\n\n\tif ( !prototype ) {\n\t\tprototype = base;\n\t\tbase = $.Widget;\n\t}\n\n\t// create selector for plugin\n\t$.expr[ \":\" ][ fullName.toLowerCase() ] = function( elem ) {\n\t\treturn !!$.data( elem, fullName );\n\t};\n\n\t$[ namespace ] = $[ namespace ] || {};\n\texistingConstructor = $[ namespace ][ name ];\n\tconstructor = $[ namespace ][ name ] = function( options, element ) {\n\t\t// allow instantiation without \"new\" keyword\n\t\tif ( !this._createWidget ) {\n\t\t\treturn new constructor( options, element );\n\t\t}\n\n\t\t// allow instantiation without initializing for simple inheritance\n\t\t// must use \"new\" keyword (the code above always passes args)\n\t\tif ( arguments.length ) {\n\t\t\tthis._createWidget( options, element );\n\t\t}\n\t};\n\t// extend with the existing constructor to carry over any static properties\n\t$.extend( constructor, existingConstructor, {\n\t\tversion: prototype.version,\n\t\t// copy the object used to create the prototype in case we need to\n\t\t// redefine the widget later\n\t\t_proto: $.extend( {}, prototype ),\n\t\t// track widgets that inherit from this widget in case this widget is\n\t\t// redefined after a widget inherits from it\n\t\t_childConstructors: []\n\t});\n\n\tbasePrototype = new base();\n\t// we need to make the options hash a property directly on the new instance\n\t// otherwise we'll modify the options hash on the prototype that we're\n\t// inheriting from\n\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\n\t$.each( prototype, function( prop, value ) {\n\t\tif ( !$.isFunction( value ) ) {\n\t\t\tproxiedPrototype[ prop ] = value;\n\t\t\treturn;\n\t\t}\n\t\tproxiedPrototype[ prop ] = (function() {\n\t\t\tvar _super = function() {\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\n\t\t\t\t},\n\t\t\t\t_superApply = function( args ) {\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, args );\n\t\t\t\t};\n\t\t\treturn function() {\n\t\t\t\tvar __super = this._super,\n\t\t\t\t\t__superApply = this._superApply,\n\t\t\t\t\treturnValue;\n\n\t\t\t\tthis._super = _super;\n\t\t\t\tthis._superApply = _superApply;\n\n\t\t\t\treturnValue = value.apply( this, arguments );\n\n\t\t\t\tthis._super = __super;\n\t\t\t\tthis._superApply = __superApply;\n\n\t\t\t\treturn returnValue;\n\t\t\t};\n\t\t})();\n\t});\n\tconstructor.prototype = $.widget.extend( basePrototype, {\n\t\t// TODO: remove support for widgetEventPrefix\n\t\t// always use the name + a colon as the prefix, e.g., draggable:start\n\t\t// don't prefix for widgets that aren't DOM-based\n\t\twidgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix : name\n\t}, proxiedPrototype, {\n\t\tconstructor: constructor,\n\t\tnamespace: namespace,\n\t\twidgetName: name,\n\t\twidgetFullName: fullName\n\t});\n\n\t// If this widget is being redefined then we need to find all widgets that\n\t// are inheriting from it and redefine all of them so that they inherit from\n\t// the new version of this widget. We're essentially trying to replace one\n\t// level in the prototype chain.\n\tif ( existingConstructor ) {\n\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\n\t\t\tvar childPrototype = child.prototype;\n\n\t\t\t// redefine the child widget using the same prototype that was\n\t\t\t// originally used, but inherit from the new version of the base\n\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor, child._proto );\n\t\t});\n\t\t// remove the list of existing child constructors from the old constructor\n\t\t// so the old child constructors can be garbage collected\n\t\tdelete existingConstructor._childConstructors;\n\t} else {\n\t\tbase._childConstructors.push( constructor );\n\t}\n\n\t$.widget.bridge( name, constructor );\n};\n\n$.widget.extend = function( target ) {\n\tvar input = slice.call( arguments, 1 ),\n\t\tinputIndex = 0,\n\t\tinputLength = input.length,\n\t\tkey,\n\t\tvalue;\n\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\n\t\tfor ( key in input[ inputIndex ] ) {\n\t\t\tvalue = input[ inputIndex ][ key ];\n\t\t\tif ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {\n\t\t\t\t// Clone objects\n\t\t\t\tif ( $.isPlainObject( value ) ) {\n\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\n\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\n\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\n\t\t\t\t\t\t$.widget.extend( {}, value );\n\t\t\t\t// Copy everything else by reference\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn target;\n};\n\n$.widget.bridge = function( name, object ) {\n\tvar fullName = object.prototype.widgetFullName || name;\n\t$.fn[ name ] = function( options ) {\n\t\tvar isMethodCall = typeof options === \"string\",\n\t\t\targs = slice.call( arguments, 1 ),\n\t\t\treturnValue = this;\n\n\t\t// allow multiple hashes to be passed on init\n\t\toptions = !isMethodCall && args.length ?\n\t\t\t$.widget.extend.apply( null, [ options ].concat(args) ) :\n\t\t\toptions;\n\n\t\tif ( isMethodCall ) {\n\t\t\tthis.each(function() {\n\t\t\t\tvar methodValue,\n\t\t\t\t\tinstance = $.data( this, fullName );\n\t\t\t\tif ( !instance ) {\n\t\t\t\t\treturn $.error( \"cannot call methods on \" + name + \" prior to initialization; \" +\n\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\n\t\t\t\t}\n\t\t\t\tif ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === \"_\" ) {\n\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name + \" widget instance\" );\n\t\t\t\t}\n\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\n\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\n\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\n\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\n\t\t\t\t\t\tmethodValue;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.each(function() {\n\t\t\t\tvar instance = $.data( this, fullName );\n\t\t\t\tif ( instance ) {\n\t\t\t\t\tinstance.option( options || {} )._init();\n\t\t\t\t} else {\n\t\t\t\t\t$.data( this, fullName, new object( options, this ) );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn returnValue;\n\t};\n};\n\n$.Widget = function( /* options, element */ ) {};\n$.Widget._childConstructors = [];\n\n$.Widget.prototype = {\n\twidgetName: \"widget\",\n\twidgetEventPrefix: \"\",\n\tdefaultElement: \"<div>\",\n\toptions: {\n\t\tdisabled: false,\n\n\t\t// callbacks\n\t\tcreate: null\n\t},\n\t_createWidget: function( options, element ) {\n\t\telement = $( element || this.defaultElement || this )[ 0 ];\n\t\tthis.element = $( element );\n\t\tthis.uuid = uuid++;\n\t\tthis.eventNamespace = \".\" + this.widgetName + this.uuid;\n\t\tthis.options = $.widget.extend( {},\n\t\t\tthis.options,\n\t\t\tthis._getCreateOptions(),\n\t\t\toptions );\n\n\t\tthis.bindings = $();\n\t\tthis.hoverable = $();\n\t\tthis.focusable = $();\n\n\t\tif ( element !== this ) {\n\t\t\t$.data( element, this.widgetFullName, this );\n\t\t\tthis._on( true, this.element, {\n\t\t\t\tremove: function( event ) {\n\t\t\t\t\tif ( event.target === element ) {\n\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.document = $( element.style ?\n\t\t\t\t// element within the document\n\t\t\t\telement.ownerDocument :\n\t\t\t\t// element is window or document\n\t\t\t\telement.document || element );\n\t\t\tthis.window = $( this.document[0].defaultView || this.document[0].parentWindow );\n\t\t}\n\n\t\tthis._create();\n\t\tthis._trigger( \"create\", null, this._getCreateEventData() );\n\t\tthis._init();\n\t},\n\t_getCreateOptions: $.noop,\n\t_getCreateEventData: $.noop,\n\t_create: $.noop,\n\t_init: $.noop,\n\n\tdestroy: function() {\n\t\tthis._destroy();\n\t\t// we can probably remove the unbind calls in 2.0\n\t\t// all event bindings should go through this._on()\n\t\tthis.element\n\t\t\t.unbind( this.eventNamespace )\n\t\t\t// 1.9 BC for #7810\n\t\t\t// TODO remove dual storage\n\t\t\t.removeData( this.widgetName )\n\t\t\t.removeData( this.widgetFullName )\n\t\t\t// support: jquery <1.6.3\n\t\t\t// http://bugs.jquery.com/ticket/9413\n\t\t\t.removeData( $.camelCase( this.widgetFullName ) );\n\t\tthis.widget()\n\t\t\t.unbind( this.eventNamespace )\n\t\t\t.removeAttr( \"aria-disabled\" )\n\t\t\t.removeClass(\n\t\t\t\tthis.widgetFullName + \"-disabled \" +\n\t\t\t\t\"ui-state-disabled\" );\n\n\t\t// clean up events and states\n\t\tthis.bindings.unbind( this.eventNamespace );\n\t\tthis.hoverable.removeClass( \"ui-state-hover\" );\n\t\tthis.focusable.removeClass( \"ui-state-focus\" );\n\t},\n\t_destroy: $.noop,\n\n\twidget: function() {\n\t\treturn this.element;\n\t},\n\n\toption: function( key, value ) {\n\t\tvar options = key,\n\t\t\tparts,\n\t\t\tcurOption,\n\t\t\ti;\n\n\t\tif ( arguments.length === 0 ) {\n\t\t\t// don't return a reference to the internal hash\n\t\t\treturn $.widget.extend( {}, this.options );\n\t\t}\n\n\t\tif ( typeof key === \"string\" ) {\n\t\t\t// handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n\t\t\toptions = {};\n\t\t\tparts = key.split( \".\" );\n\t\t\tkey = parts.shift();\n\t\t\tif ( parts.length ) {\n\t\t\t\tcurOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );\n\t\t\t\tfor ( i = 0; i < parts.length - 1; i++ ) {\n\t\t\t\t\tcurOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\n\t\t\t\t\tcurOption = curOption[ parts[ i ] ];\n\t\t\t\t}\n\t\t\t\tkey = parts.pop();\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn curOption[ key ] === undefined ? null : curOption[ key ];\n\t\t\t\t}\n\t\t\t\tcurOption[ key ] = value;\n\t\t\t} else {\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn this.options[ key ] === undefined ? null : this.options[ key ];\n\t\t\t\t}\n\t\t\t\toptions[ key ] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis._setOptions( options );\n\n\t\treturn this;\n\t},\n\t_setOptions: function( options ) {\n\t\tvar key;\n\n\t\tfor ( key in options ) {\n\t\t\tthis._setOption( key, options[ key ] );\n\t\t}\n\n\t\treturn this;\n\t},\n\t_setOption: function( key, value ) {\n\t\tthis.options[ key ] = value;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis.widget()\n\t\t\t\t.toggleClass( this.widgetFullName + \"-disabled ui-state-disabled\", !!value )\n\t\t\t\t.attr( \"aria-disabled\", value );\n\t\t\tthis.hoverable.removeClass( \"ui-state-hover\" );\n\t\t\tthis.focusable.removeClass( \"ui-state-focus\" );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tenable: function() {\n\t\treturn this._setOption( \"disabled\", false );\n\t},\n\tdisable: function() {\n\t\treturn this._setOption( \"disabled\", true );\n\t},\n\n\t_on: function( suppressDisabledCheck, element, handlers ) {\n\t\tvar delegateElement,\n\t\t\tinstance = this;\n\n\t\t// no suppressDisabledCheck flag, shuffle arguments\n\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\n\t\t\thandlers = element;\n\t\t\telement = suppressDisabledCheck;\n\t\t\tsuppressDisabledCheck = false;\n\t\t}\n\n\t\t// no element argument, shuffle and use this.element\n\t\tif ( !handlers ) {\n\t\t\thandlers = element;\n\t\t\telement = this.element;\n\t\t\tdelegateElement = this.widget();\n\t\t} else {\n\t\t\t// accept selectors, DOM elements\n\t\t\telement = delegateElement = $( element );\n\t\t\tthis.bindings = this.bindings.add( element );\n\t\t}\n\n\t\t$.each( handlers, function( event, handler ) {\n\t\t\tfunction handlerProxy() {\n\t\t\t\t// allow widgets to customize the disabled handling\n\t\t\t\t// - disabled as an array instead of boolean\n\t\t\t\t// - disabled class as method for disabling individual parts\n\t\t\t\tif ( !suppressDisabledCheck &&\n\t\t\t\t\t\t( instance.options.disabled === true ||\n\t\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t\t.apply( instance, arguments );\n\t\t\t}\n\n\t\t\t// copy the guid so direct unbinding works\n\t\t\tif ( typeof handler !== \"string\" ) {\n\t\t\t\thandlerProxy.guid = handler.guid =\n\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\n\t\t\t}\n\n\t\t\tvar match = event.match( /^(\\w+)\\s*(.*)$/ ),\n\t\t\t\teventName = match[1] + instance.eventNamespace,\n\t\t\t\tselector = match[2];\n\t\t\tif ( selector ) {\n\t\t\t\tdelegateElement.delegate( selector, eventName, handlerProxy );\n\t\t\t} else {\n\t\t\t\telement.bind( eventName, handlerProxy );\n\t\t\t}\n\t\t});\n\t},\n\n\t_off: function( element, eventName ) {\n\t\teventName = (eventName || \"\").split( \" \" ).join( this.eventNamespace + \" \" ) + this.eventNamespace;\n\t\telement.unbind( eventName ).undelegate( eventName );\n\t},\n\n\t_delay: function( handler, delay ) {\n\t\tfunction handlerProxy() {\n\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t.apply( instance, arguments );\n\t\t}\n\t\tvar instance = this;\n\t\treturn setTimeout( handlerProxy, delay || 0 );\n\t},\n\n\t_hoverable: function( element ) {\n\t\tthis.hoverable = this.hoverable.add( element );\n\t\tthis._on( element, {\n\t\t\tmouseenter: function( event ) {\n\t\t\t\t$( event.currentTarget ).addClass( \"ui-state-hover\" );\n\t\t\t},\n\t\t\tmouseleave: function( event ) {\n\t\t\t\t$( event.currentTarget ).removeClass( \"ui-state-hover\" );\n\t\t\t}\n\t\t});\n\t},\n\n\t_focusable: function( element ) {\n\t\tthis.focusable = this.focusable.add( element );\n\t\tthis._on( element, {\n\t\t\tfocusin: function( event ) {\n\t\t\t\t$( event.currentTarget ).addClass( \"ui-state-focus\" );\n\t\t\t},\n\t\t\tfocusout: function( event ) {\n\t\t\t\t$( event.currentTarget ).removeClass( \"ui-state-focus\" );\n\t\t\t}\n\t\t});\n\t},\n\n\t_trigger: function( type, event, data ) {\n\t\tvar prop, orig,\n\t\t\tcallback = this.options[ type ];\n\n\t\tdata = data || {};\n\t\tevent = $.Event( event );\n\t\tevent.type = ( type === this.widgetEventPrefix ?\n\t\t\ttype :\n\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\n\t\t// the original event may come from any element\n\t\t// so we need to reset the target on the new event\n\t\tevent.target = this.element[ 0 ];\n\n\t\t// copy original event properties over to the new event\n\t\torig = event.originalEvent;\n\t\tif ( orig ) {\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tif ( !( prop in event ) ) {\n\t\t\t\t\tevent[ prop ] = orig[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element.trigger( event, data );\n\t\treturn !( $.isFunction( callback ) &&\n\t\t\tcallback.apply( this.element[0], [ event ].concat( data ) ) === false ||\n\t\t\tevent.isDefaultPrevented() );\n\t}\n};\n\n$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\n\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\n\t\tif ( typeof options === \"string\" ) {\n\t\t\toptions = { effect: options };\n\t\t}\n\t\tvar hasOptions,\n\t\t\teffectName = !options ?\n\t\t\t\tmethod :\n\t\t\t\toptions === true || typeof options === \"number\" ?\n\t\t\t\t\tdefaultEffect :\n\t\t\t\t\toptions.effect || defaultEffect;\n\t\toptions = options || {};\n\t\tif ( typeof options === \"number\" ) {\n\t\t\toptions = { duration: options };\n\t\t}\n\t\thasOptions = !$.isEmptyObject( options );\n\t\toptions.complete = callback;\n\t\tif ( options.delay ) {\n\t\t\telement.delay( options.delay );\n\t\t}\n\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\n\t\t\telement[ method ]( options );\n\t\t} else if ( effectName !== method && element[ effectName ] ) {\n\t\t\telement[ effectName ]( options.duration, options.easing, callback );\n\t\t} else {\n\t\t\telement.queue(function( next ) {\n\t\t\t\t$( this )[ method ]();\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback.call( element[ 0 ] );\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t});\n\t\t}\n\t};\n});\n\n}));\n</script><script type=\"text/javascript\">/*\n * jQuery Iframe Transport Plugin 1.6.1\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n */\n\n/*jslint unparam: true, nomen: true */\n/*global define, window, document */\n\n(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // Register as an anonymous AMD module:\n        define(['jquery'], factory);\n    } else {\n        // Browser globals:\n        factory(window.jQuery);\n    }\n}(function ($) {\n    'use strict';\n\n    // Helper variable to create unique names for the transport iframes:\n    var counter = 0;\n\n    // The iframe transport accepts three additional options:\n    // options.fileInput: a jQuery collection of file input fields\n    // options.paramName: the parameter name for the file form data,\n    //  overrides the name property of the file input field(s),\n    //  can be a string or an array of strings.\n    // options.formData: an array of objects with name and value properties,\n    //  equivalent to the return data of .serializeArray(), e.g.:\n    //  [{name: 'a', value: 1}, {name: 'b', value: 2}]\n    $.ajaxTransport('iframe', function (options) {\n        if (options.async) {\n            var form,\n                iframe,\n                addParamChar;\n            return {\n                send: function (_, completeCallback) {\n                    form = $('<form style=\"display:none;\"></form>');\n                    form.attr('accept-charset', options.formAcceptCharset);\n                    addParamChar = /\\?/.test(options.url) ? '&' : '?';\n                    // XDomainRequest only supports GET and POST:\n                    if (options.type === 'DELETE') {\n                        options.url = options.url + addParamChar + '_method=DELETE';\n                        options.type = 'POST';\n                    } else if (options.type === 'PUT') {\n                        options.url = options.url + addParamChar + '_method=PUT';\n                        options.type = 'POST';\n                    } else if (options.type === 'PATCH') {\n                        options.url = options.url + addParamChar + '_method=PATCH';\n                        options.type = 'POST';\n                    }\n                    // javascript:false as initial iframe src\n                    // prevents warning popups on HTTPS in IE6.\n                    // IE versions below IE8 cannot set the name property of\n                    // elements that have already been added to the DOM,\n                    // so we set the name along with the iframe HTML markup:\n                    iframe = $(\n                        '<iframe src=\"javascript:false;\" name=\"iframe-transport-' +\n                            (counter += 1) + '\"></iframe>'\n                    ).bind('load', function () {\n                        var fileInputClones,\n                            paramNames = $.isArray(options.paramName) ?\n                                    options.paramName : [options.paramName];\n                        iframe\n                            .unbind('load')\n                            .bind('load', function () {\n                                var response;\n                                // Wrap in a try/catch block to catch exceptions thrown\n                                // when trying to access cross-domain iframe contents:\n                                try {\n                                    response = iframe.contents();\n                                    // Google Chrome and Firefox do not throw an\n                                    // exception when calling iframe.contents() on\n                                    // cross-domain requests, so we unify the response:\n                                    if (!response.length || !response[0].firstChild) {\n                                        throw new Error();\n                                    }\n                                } catch (e) {\n                                    response = undefined;\n                                }\n                                // The complete callback returns the\n                                // iframe content document as response object:\n                                completeCallback(\n                                    200,\n                                    'success',\n                                    {'iframe': response}\n                                );\n                                // Fix for IE endless progress bar activity bug\n                                // (happens on form submits to iframe targets):\n                                $('<iframe src=\"javascript:false;\"></iframe>')\n                                    .appendTo(form);\n                                form.remove();\n                            });\n                        form\n                            .prop('target', iframe.prop('name'))\n                            .prop('action', options.url)\n                            .prop('method', options.type);\n                        if (options.formData) {\n                            $.each(options.formData, function (index, field) {\n                                $('<input type=\"hidden\"/>')\n                                    .prop('name', field.name)\n                                    .val(field.value)\n                                    .appendTo(form);\n                            });\n                        }\n                        if (options.fileInput && options.fileInput.length &&\n                                options.type === 'POST') {\n                            fileInputClones = options.fileInput.clone();\n                            // Insert a clone for each file input field:\n                            options.fileInput.after(function (index) {\n                                return fileInputClones[index];\n                            });\n                            if (options.paramName) {\n                                options.fileInput.each(function (index) {\n                                    $(this).prop(\n                                        'name',\n                                        paramNames[index] || options.paramName\n                                    );\n                                });\n                            }\n                            // Appending the file input fields to the hidden form\n                            // removes them from their original location:\n                            form\n                                .append(options.fileInput)\n                                .prop('enctype', 'multipart/form-data')\n                                // enctype must be set as encoding for IE:\n                                .prop('encoding', 'multipart/form-data');\n                        }\n                        form.submit();\n                        // Insert the file input fields at their original location\n                        // by replacing the clones with the originals:\n                        if (fileInputClones && fileInputClones.length) {\n                            options.fileInput.each(function (index, input) {\n                                var clone = $(fileInputClones[index]);\n                                $(input).prop('name', clone.prop('name'));\n                                clone.replaceWith(input);\n                            });\n                        }\n                    });\n                    form.append(iframe).appendTo(document.body);\n                },\n                abort: function () {\n                    if (iframe) {\n                        // javascript:false as iframe src aborts the request\n                        // and prevents warning popups on HTTPS in IE6.\n                        // concat is used to avoid the \"Script URL\" JSLint error:\n                        iframe\n                            .unbind('load')\n                            .prop('src', 'javascript'.concat(':false;'));\n                    }\n                    if (form) {\n                        form.remove();\n                    }\n                }\n            };\n        }\n    });\n\n    // The iframe transport returns the iframe content document as response.\n    // The following adds converters from iframe to text, json, html, and script:\n    $.ajaxSetup({\n        converters: {\n            'iframe text': function (iframe) {\n                return iframe && $(iframe[0].body).text();\n            },\n            'iframe json': function (iframe) {\n                return iframe && $.parseJSON($(iframe[0].body).text());\n            },\n            'iframe html': function (iframe) {\n                return iframe && $(iframe[0].body).html();\n            },\n            'iframe script': function (iframe) {\n                return iframe && $.globalEval($(iframe[0].body).text());\n            }\n        }\n    });\n\n}));\n</script><script type=\"text/javascript\">/*\n * jQuery File Upload Plugin 5.31\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2010, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n */\n\n/*jslint nomen: true, unparam: true, regexp: true */\n/*global define, window, document, File, Blob, FormData, location */\n\n(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // Register as an anonymous AMD module:\n        define([\n            'jquery',\n            'jquery.ui.widget'\n        ], factory);\n    } else {\n        // Browser globals:\n        factory(window.jQuery);\n    }\n}(function ($) {\n    'use strict';\n\n    // The FileReader API is not actually used, but works as feature detection,\n    // as e.g. Safari supports XHR file uploads via the FormData API,\n    // but not non-multipart XHR file uploads:\n    $.support.xhrFileUpload = !!(window.XMLHttpRequestUpload && window.FileReader);\n    $.support.xhrFormDataFileUpload = !!window.FormData;\n\n    // The fileupload widget listens for change events on file input fields defined\n    // via fileInput setting and paste or drop events of the given dropZone.\n    // In addition to the default jQuery Widget methods, the fileupload widget\n    // exposes the \"add\" and \"send\" methods, to add or directly send files using\n    // the fileupload API.\n    // By default, files added via file input selection, paste, drag & drop or\n    // \"add\" method are uploaded immediately, but it is possible to override\n    // the \"add\" callback option to queue file uploads.\n    $.widget('blueimp.fileupload', {\n\n        options: {\n            // The drop target element(s), by the default the complete document.\n            // Set to null to disable drag & drop support:\n            dropZone: $(document),\n            // The paste target element(s), by the default the complete document.\n            // Set to null to disable paste support:\n            pasteZone: $(document),\n            // The file input field(s), that are listened to for change events.\n            // If undefined, it is set to the file input fields inside\n            // of the widget element on plugin initialization.\n            // Set to null to disable the change listener.\n            fileInput: undefined,\n            // By default, the file input field is replaced with a clone after\n            // each input field change event. This is required for iframe transport\n            // queues and allows change events to be fired for the same file\n            // selection, but can be disabled by setting the following option to false:\n            replaceFileInput: true,\n            // The parameter name for the file form data (the request argument name).\n            // If undefined or empty, the name property of the file input field is\n            // used, or \"files[]\" if the file input name property is also empty,\n            // can be a string or an array of strings:\n            paramName: undefined,\n            // By default, each file of a selection is uploaded using an individual\n            // request for XHR type uploads. Set to false to upload file\n            // selections in one request each:\n            singleFileUploads: true,\n            // To limit the number of files uploaded with one XHR request,\n            // set the following option to an integer greater than 0:\n            limitMultiFileUploads: undefined,\n            // Set the following option to true to issue all file upload requests\n            // in a sequential order:\n            sequentialUploads: false,\n            // To limit the number of concurrent uploads,\n            // set the following option to an integer greater than 0:\n            limitConcurrentUploads: undefined,\n            // Set the following option to true to force iframe transport uploads:\n            forceIframeTransport: false,\n            // Set the following option to the location of a redirect url on the\n            // origin server, for cross-domain iframe transport uploads:\n            redirect: undefined,\n            // The parameter name for the redirect url, sent as part of the form\n            // data and set to 'redirect' if this option is empty:\n            redirectParamName: undefined,\n            // Set the following option to the location of a postMessage window,\n            // to enable postMessage transport uploads:\n            postMessage: undefined,\n            // By default, XHR file uploads are sent as multipart/form-data.\n            // The iframe transport is always using multipart/form-data.\n            // Set to false to enable non-multipart XHR uploads:\n            multipart: true,\n            // To upload large files in smaller chunks, set the following option\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\n            // or the browser does not support the required Blob API, files will\n            // be uploaded as a whole.\n            maxChunkSize: undefined,\n            // When a non-multipart upload or a chunked multipart upload has been\n            // aborted, this option can be used to resume the upload by setting\n            // it to the size of the already uploaded bytes. This option is most\n            // useful when modifying the options object inside of the \"add\" or\n            // \"send\" callbacks, as the options are cloned for each file upload.\n            uploadedBytes: undefined,\n            // By default, failed (abort or error) file uploads are removed from the\n            // global progress calculation. Set the following option to false to\n            // prevent recalculating the global progress data:\n            recalculateProgress: true,\n            // Interval in milliseconds to calculate and trigger progress events:\n            progressInterval: 100,\n            // Interval in milliseconds to calculate progress bitrate:\n            bitrateInterval: 500,\n            // By default, uploads are started automatically when adding files:\n            autoUpload: true,\n\n            // Error and info messages:\n            messages: {\n                uploadedBytes: 'Uploaded bytes exceed file size'\n            },\n\n            // Translation function, gets the message key to be translated\n            // and an object with context specific data as arguments:\n            i18n: function (message, context) {\n                message = this.messages[message] || message.toString();\n                if (context) {\n                    $.each(context, function (key, value) {\n                        message = message.replace('{' + key + '}', value);\n                    });\n                }\n                return message;\n            },\n\n            // Additional form data to be sent along with the file uploads can be set\n            // using this option, which accepts an array of objects with name and\n            // value properties, a function returning such an array, a FormData\n            // object (for XHR file uploads), or a simple object.\n            // The form of the first fileInput is given as parameter to the function:\n            formData: function (form) {\n                return form.serializeArray();\n            },\n\n            // The add callback is invoked as soon as files are added to the fileupload\n            // widget (via file input selection, drag & drop, paste or add API call).\n            // If the singleFileUploads option is enabled, this callback will be\n            // called once for each file in the selection for XHR file uplaods, else\n            // once for each file selection.\n            // The upload starts when the submit method is invoked on the data parameter.\n            // The data object contains a files property holding the added files\n            // and allows to override plugin options as well as define ajax settings.\n            // Listeners for this callback can also be bound the following way:\n            // .bind('fileuploadadd', func);\n            // data.submit() returns a Promise object and allows to attach additional\n            // handlers using jQuery's Deferred callbacks:\n            // data.submit().done(func).fail(func).always(func);\n            add: function (e, data) {\n                if (data.autoUpload || (data.autoUpload !== false &&\n                        $(this).fileupload('option', 'autoUpload'))) {\n                    data.process().done(function () {\n                        data.submit();\n                    });\n                }\n            },\n\n            // Other callbacks:\n\n            // Callback for the submit event of each file upload:\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\n\n            // Callback for the start of each file upload request:\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\n\n            // Callback for successful uploads:\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\n\n            // Callback for failed (abort or error) uploads:\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\n\n            // Callback for completed (success, abort or error) requests:\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\n\n            // Callback for upload progress events:\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\n\n            // Callback for global upload progress events:\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\n\n            // Callback for uploads start, equivalent to the global ajaxStart event:\n            // start: function (e) {}, // .bind('fileuploadstart', func);\n\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\n\n            // Callback for change events of the fileInput(s):\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\n\n            // Callback for paste events to the pasteZone(s):\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\n\n            // Callback for drop events of the dropZone(s):\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\n\n            // Callback for dragover events of the dropZone(s):\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\n\n            // Callback for the start of each chunk upload request:\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\n\n            // Callback for successful chunk uploads:\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\n\n            // Callback for failed (abort or error) chunk uploads:\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\n\n            // Callback for completed (success, abort or error) chunk upload requests:\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\n\n            // The plugin options are used as settings object for the ajax calls.\n            // The following are jQuery ajax settings required for the file uploads:\n            processData: false,\n            contentType: false,\n            cache: false\n        },\n\n        // A list of options that require reinitializing event listeners and/or\n        // special initialization code:\n        _specialOptions: [\n            'fileInput',\n            'dropZone',\n            'pasteZone',\n            'multipart',\n            'forceIframeTransport'\n        ],\n\n        _BitrateTimer: function () {\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\n            this.loaded = 0;\n            this.bitrate = 0;\n            this.getBitrate = function (now, loaded, interval) {\n                var timeDiff = now - this.timestamp;\n                if (!this.bitrate || !interval || timeDiff > interval) {\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n                    this.loaded = loaded;\n                    this.timestamp = now;\n                }\n                return this.bitrate;\n            };\n        },\n\n        _isXHRUpload: function (options) {\n            return !options.forceIframeTransport &&\n                ((!options.multipart && $.support.xhrFileUpload) ||\n                $.support.xhrFormDataFileUpload);\n        },\n\n        _getFormData: function (options) {\n            var formData;\n            if (typeof options.formData === 'function') {\n                return options.formData(options.form);\n            }\n            if ($.isArray(options.formData)) {\n                return options.formData;\n            }\n            if ($.type(options.formData) === 'object') {\n                formData = [];\n                $.each(options.formData, function (name, value) {\n                    formData.push({name: name, value: value});\n                });\n                return formData;\n            }\n            return [];\n        },\n\n        _getTotal: function (files) {\n            var total = 0;\n            $.each(files, function (index, file) {\n                total += file.size || 1;\n            });\n            return total;\n        },\n\n        _initProgressObject: function (obj) {\n            var progress = {\n                loaded: 0,\n                total: 0,\n                bitrate: 0\n            };\n            if (obj._progress) {\n                $.extend(obj._progress, progress);\n            } else {\n                obj._progress = progress;\n            }\n        },\n\n        _initResponseObject: function (obj) {\n            var prop;\n            if (obj._response) {\n                for (prop in obj._response) {\n                    if (obj._response.hasOwnProperty(prop)) {\n                        delete obj._response[prop];\n                    }\n                }\n            } else {\n                obj._response = {};\n            }\n        },\n\n        _onProgress: function (e, data) {\n            if (e.lengthComputable) {\n                var now = ((Date.now) ? Date.now() : (new Date()).getTime()),\n                    loaded;\n                if (data._time && data.progressInterval &&\n                        (now - data._time < data.progressInterval) &&\n                        e.loaded !== e.total) {\n                    return;\n                }\n                data._time = now;\n                loaded = Math.floor(\n                    e.loaded / e.total * (data.chunkSize || data._progress.total)\n                ) + (data.uploadedBytes || 0);\n                // Add the difference from the previously loaded state\n                // to the global loaded counter:\n                this._progress.loaded += (loaded - data._progress.loaded);\n                this._progress.bitrate = this._bitrateTimer.getBitrate(\n                    now,\n                    this._progress.loaded,\n                    data.bitrateInterval\n                );\n                data._progress.loaded = data.loaded = loaded;\n                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(\n                    now,\n                    loaded,\n                    data.bitrateInterval\n                );\n                // Trigger a custom progress event with a total data property set\n                // to the file size(s) of the current upload and a loaded data\n                // property calculated accordingly:\n                this._trigger('progress', e, data);\n                // Trigger a global progress event for all current file uploads,\n                // including ajax calls queued for sequential file uploads:\n                this._trigger('progressall', e, this._progress);\n            }\n        },\n\n        _initProgressListener: function (options) {\n            var that = this,\n                xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();\n            // Accesss to the native XHR object is required to add event listeners\n            // for the upload progress event:\n            if (xhr.upload) {\n                $(xhr.upload).bind('progress', function (e) {\n                    var oe = e.originalEvent;\n                    // Make sure the progress event properties get copied over:\n                    e.lengthComputable = oe.lengthComputable;\n                    e.loaded = oe.loaded;\n                    e.total = oe.total;\n                    that._onProgress(e, options);\n                });\n                options.xhr = function () {\n                    return xhr;\n                };\n            }\n        },\n\n        _isInstanceOf: function (type, obj) {\n            // Cross-frame instanceof check\n            return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n        },\n\n        _initXHRData: function (options) {\n            var that = this,\n                formData,\n                file = options.files[0],\n                // Ignore non-multipart setting if not supported:\n                multipart = options.multipart || !$.support.xhrFileUpload,\n                paramName = options.paramName[0];\n            options.headers = options.headers || {};\n            if (options.contentRange) {\n                options.headers['Content-Range'] = options.contentRange;\n            }\n            if (!multipart) {\n                options.headers['Content-Disposition'] = 'attachment; filename=\"' +\n                    encodeURI(file.name) + '\"';\n                options.contentType = file.type;\n                options.data = options.blob || file;\n            } else if ($.support.xhrFormDataFileUpload) {\n                if (options.postMessage) {\n                    // window.postMessage does not allow sending FormData\n                    // objects, so we just add the File/Blob objects to\n                    // the formData array and let the postMessage window\n                    // create the FormData object out of this array:\n                    formData = this._getFormData(options);\n                    if (options.blob) {\n                        formData.push({\n                            name: paramName,\n                            value: options.blob\n                        });\n                    } else {\n                        $.each(options.files, function (index, file) {\n                            formData.push({\n                                name: options.paramName[index] || paramName,\n                                value: file\n                            });\n                        });\n                    }\n                } else {\n                    if (that._isInstanceOf('FormData', options.formData)) {\n                        formData = options.formData;\n                    } else {\n                        formData = new FormData();\n                        $.each(this._getFormData(options), function (index, field) {\n                            formData.append(field.name, field.value);\n                        });\n                    }\n                    if (options.blob) {\n                        options.headers['Content-Disposition'] = 'attachment; filename=\"' +\n                            encodeURI(file.name) + '\"';\n                        formData.append(paramName, options.blob, file.name);\n                    } else {\n\n                        $.each(options.files, function (index, file) {\n                            // This check allows the tests to run with\n                            // dummy objects:\n                            if (that._isInstanceOf('File', file) ||\n                                    that._isInstanceOf('Blob', file)) {\n                                formData.append(\n                                    options.paramName[index] || paramName,\n                                    file,\n                                    file.name\n                                );\n                            }\n                        });\n                    }\n                }\n                options.data = formData;\n            }\n            // Blob reference is not needed anymore, free memory:\n            options.blob = null;\n        },\n\n        _initIframeSettings: function (options) {\n            // Setting the dataType to iframe enables the iframe transport:\n            options.dataType = 'iframe ' + (options.dataType || '');\n            // The iframe transport accepts a serialized array as form data:\n            options.formData = this._getFormData(options);\n            // Add redirect url to form data on cross-domain uploads:\n            if (options.redirect && $('<a></a>').prop('href', options.url)\n                    .prop('host') !== location.host) {\n                options.formData.push({\n                    name: options.redirectParamName || 'redirect',\n                    value: options.redirect\n                });\n            }\n        },\n\n        _initDataSettings: function (options) {\n            if (this._isXHRUpload(options)) {\n                if (!this._chunkedUpload(options, true)) {\n                    if (!options.data) {\n                        this._initXHRData(options);\n                    }\n                    this._initProgressListener(options);\n                }\n                if (options.postMessage) {\n                    // Setting the dataType to postmessage enables the\n                    // postMessage transport:\n                    options.dataType = 'postmessage ' + (options.dataType || '');\n                }\n            } else {\n                this._initIframeSettings(options);\n            }\n        },\n\n        _getParamName: function (options) {\n            var fileInput = $(options.fileInput),\n                paramName = options.paramName;\n            if (!paramName) {\n                paramName = [];\n                fileInput.each(function () {\n                    var input = $(this),\n                        name = input.prop('name') || 'files[]',\n                        i = (input.prop('files') || [1]).length;\n                    while (i) {\n                        paramName.push(name);\n                        i -= 1;\n                    }\n                });\n                if (!paramName.length) {\n                    paramName = [fileInput.prop('name') || 'files[]'];\n                }\n            } else if (!$.isArray(paramName)) {\n                paramName = [paramName];\n            }\n            return paramName;\n        },\n\n        _initFormSettings: function (options) {\n            // Retrieve missing options from the input field and the\n            // associated form, if available:\n            if (!options.form || !options.form.length) {\n                options.form = $(options.fileInput.prop('form'));\n                // If the given file input doesn't have an associated form,\n                // use the default widget file input's form:\n                if (!options.form.length) {\n                    options.form = $(this.options.fileInput.prop('form'));\n                }\n            }\n            options.paramName = this._getParamName(options);\n            if (!options.url) {\n                options.url = options.form.prop('action') || location.href;\n            }\n            // The HTTP request method must be \"POST\" or \"PUT\":\n            options.type = (options.type || options.form.prop('method') || '')\n                .toUpperCase();\n            if (options.type !== 'POST' && options.type !== 'PUT' &&\n                    options.type !== 'PATCH') {\n                options.type = 'POST';\n            }\n            if (!options.formAcceptCharset) {\n                options.formAcceptCharset = options.form.attr('accept-charset');\n            }\n        },\n\n        _getAJAXSettings: function (data) {\n            var options = $.extend({}, this.options, data);\n            this._initFormSettings(options);\n            this._initDataSettings(options);\n            return options;\n        },\n\n        // jQuery 1.6 doesn't provide .state(),\n        // while jQuery 1.8+ removed .isRejected() and .isResolved():\n        _getDeferredState: function (deferred) {\n            if (deferred.state) {\n                return deferred.state();\n            }\n            if (deferred.isResolved()) {\n                return 'resolved';\n            }\n            if (deferred.isRejected()) {\n                return 'rejected';\n            }\n            return 'pending';\n        },\n\n        // Maps jqXHR callbacks to the equivalent\n        // methods of the given Promise object:\n        _enhancePromise: function (promise) {\n            promise.success = promise.done;\n            promise.error = promise.fail;\n            promise.complete = promise.always;\n            return promise;\n        },\n\n        // Creates and returns a Promise object enhanced with\n        // the jqXHR methods abort, success, error and complete:\n        _getXHRPromise: function (resolveOrReject, context, args) {\n            var dfd = $.Deferred(),\n                promise = dfd.promise();\n            context = context || this.options.context || promise;\n            if (resolveOrReject === true) {\n                dfd.resolveWith(context, args);\n            } else if (resolveOrReject === false) {\n                dfd.rejectWith(context, args);\n            }\n            promise.abort = dfd.promise;\n            return this._enhancePromise(promise);\n        },\n\n        // Adds convenience methods to the data callback argument:\n        _addConvenienceMethods: function (e, data) {\n            var that = this,\n                getPromise = function (data) {\n                    return $.Deferred().resolveWith(that, [data]).promise();\n                };\n            data.process = function (resolveFunc, rejectFunc) {\n                if (resolveFunc || rejectFunc) {\n                    data._processQueue = this._processQueue =\n                        (this._processQueue || getPromise(this))\n                            .pipe(resolveFunc, rejectFunc);\n                }\n                return this._processQueue || getPromise(this);\n            };\n            data.submit = function () {\n                if (this.state() !== 'pending') {\n                    data.jqXHR = this.jqXHR =\n                        (that._trigger('submit', e, this) !== false) &&\n                        that._onSend(e, this);\n                }\n                return this.jqXHR || that._getXHRPromise();\n            };\n            data.abort = function () {\n                if (this.jqXHR) {\n                    return this.jqXHR.abort();\n                }\n                return that._getXHRPromise();\n            };\n            data.state = function () {\n                if (this.jqXHR) {\n                    return that._getDeferredState(this.jqXHR);\n                }\n                if (this._processQueue) {\n                    return that._getDeferredState(this._processQueue);\n                }\n            };\n            data.progress = function () {\n                return this._progress;\n            };\n            data.response = function () {\n                return this._response;\n            };\n        },\n\n        // Parses the Range header from the server response\n        // and returns the uploaded bytes:\n        _getUploadedBytes: function (jqXHR) {\n            var range = jqXHR.getResponseHeader('Range'),\n                parts = range && range.split('-'),\n                upperBytesPos = parts && parts.length > 1 &&\n                    parseInt(parts[1], 10);\n            return upperBytesPos && upperBytesPos + 1;\n        },\n\n        // Uploads a file in multiple, sequential requests\n        // by splitting the file up in multiple blob chunks.\n        // If the second parameter is true, only tests if the file\n        // should be uploaded in chunks, but does not invoke any\n        // upload requests:\n        _chunkedUpload: function (options, testOnly) {\n            var that = this,\n                file = options.files[0],\n                fs = file.size,\n                ub = options.uploadedBytes = options.uploadedBytes || 0,\n                mcs = options.maxChunkSize || fs,\n                slice = file.slice || file.webkitSlice || file.mozSlice,\n                dfd = $.Deferred(),\n                promise = dfd.promise(),\n                jqXHR,\n                upload;\n            if (!(this._isXHRUpload(options) && slice && (ub || mcs < fs)) ||\n                    options.data) {\n                return false;\n            }\n            if (testOnly) {\n                return true;\n            }\n            if (ub >= fs) {\n                file.error = options.i18n('uploadedBytes');\n                return this._getXHRPromise(\n                    false,\n                    options.context,\n                    [null, 'error', file.error]\n                );\n            }\n            // The chunk upload method:\n            upload = function () {\n                // Clone the options object for each chunk upload:\n                var o = $.extend({}, options),\n                    currentLoaded = o._progress.loaded;\n                o.blob = slice.call(\n                    file,\n                    ub,\n                    ub + mcs,\n                    file.type\n                );\n                // Store the current chunk size, as the blob itself\n                // will be dereferenced after data processing:\n                o.chunkSize = o.blob.size;\n                // Expose the chunk bytes position range:\n                o.contentRange = 'bytes ' + ub + '-' +\n                    (ub + o.chunkSize - 1) + '/' + fs;\n                // Process the upload data (the blob and potential form data):\n                that._initXHRData(o);\n                // Add progress listeners for this chunk upload:\n                that._initProgressListener(o);\n                jqXHR = ((that._trigger('chunksend', null, o) !== false && $.ajax(o)) ||\n                        that._getXHRPromise(false, o.context))\n                    .done(function (result, textStatus, jqXHR) {\n                        ub = that._getUploadedBytes(jqXHR) ||\n                            (ub + o.chunkSize);\n                        // Create a progress event if no final progress event\n                        // with loaded equaling total has been triggered\n                        // for this chunk:\n                        if (o._progress.loaded === currentLoaded) {\n                            that._onProgress($.Event('progress', {\n                                lengthComputable: true,\n                                loaded: ub - o.uploadedBytes,\n                                total: ub - o.uploadedBytes\n                            }), o);\n                        }\n                        options.uploadedBytes = o.uploadedBytes = ub;\n                        o.result = result;\n                        o.textStatus = textStatus;\n                        o.jqXHR = jqXHR;\n                        that._trigger('chunkdone', null, o);\n                        that._trigger('chunkalways', null, o);\n                        if (ub < fs) {\n                            // File upload not yet complete,\n                            // continue with the next chunk:\n                            upload();\n                        } else {\n                            dfd.resolveWith(\n                                o.context,\n                                [result, textStatus, jqXHR]\n                            );\n                        }\n                    })\n                    .fail(function (jqXHR, textStatus, errorThrown) {\n                        o.jqXHR = jqXHR;\n                        o.textStatus = textStatus;\n                        o.errorThrown = errorThrown;\n                        that._trigger('chunkfail', null, o);\n                        that._trigger('chunkalways', null, o);\n                        dfd.rejectWith(\n                            o.context,\n                            [jqXHR, textStatus, errorThrown]\n                        );\n                    });\n            };\n            this._enhancePromise(promise);\n            promise.abort = function () {\n                return jqXHR.abort();\n            };\n            upload();\n            return promise;\n        },\n\n        _beforeSend: function (e, data) {\n            if (this._active === 0) {\n                // the start callback is triggered when an upload starts\n                // and no other uploads are currently running,\n                // equivalent to the global ajaxStart event:\n                this._trigger('start');\n                // Set timer for global bitrate progress calculation:\n                this._bitrateTimer = new this._BitrateTimer();\n                // Reset the global progress values:\n                this._progress.loaded = this._progress.total = 0;\n                this._progress.bitrate = 0;\n            }\n            // Make sure the container objects for the .response() and\n            // .progress() methods on the data object are available\n            // and reset to their initial state:\n            this._initResponseObject(data);\n            this._initProgressObject(data);\n            data._progress.loaded = data.loaded = data.uploadedBytes || 0;\n            data._progress.total = data.total = this._getTotal(data.files) || 1;\n            data._progress.bitrate = data.bitrate = 0;\n            this._active += 1;\n            // Initialize the global progress values:\n            this._progress.loaded += data.loaded;\n            this._progress.total += data.total;\n        },\n\n        _onDone: function (result, textStatus, jqXHR, options) {\n            var total = options._progress.total,\n                response = options._response;\n            if (options._progress.loaded < total) {\n                // Create a progress event if no final progress event\n                // with loaded equaling total has been triggered:\n                this._onProgress($.Event('progress', {\n                    lengthComputable: true,\n                    loaded: total,\n                    total: total\n                }), options);\n            }\n            response.result = options.result = result;\n            response.textStatus = options.textStatus = textStatus;\n            response.jqXHR = options.jqXHR = jqXHR;\n            this._trigger('done', null, options);\n        },\n\n        _onFail: function (jqXHR, textStatus, errorThrown, options) {\n            var response = options._response;\n            if (options.recalculateProgress) {\n                // Remove the failed (error or abort) file upload from\n                // the global progress calculation:\n                this._progress.loaded -= options._progress.loaded;\n                this._progress.total -= options._progress.total;\n            }\n            response.jqXHR = options.jqXHR = jqXHR;\n            response.textStatus = options.textStatus = textStatus;\n            response.errorThrown = options.errorThrown = errorThrown;\n            this._trigger('fail', null, options);\n        },\n\n        _onAlways: function (jqXHRorResult, textStatus, jqXHRorError, options) {\n            // jqXHRorResult, textStatus and jqXHRorError are added to the\n            // options object via done and fail callbacks\n            this._trigger('always', null, options);\n        },\n\n        _onSend: function (e, data) {\n            if (!data.submit) {\n                this._addConvenienceMethods(e, data);\n            }\n            var that = this,\n                jqXHR,\n                aborted,\n                slot,\n                pipe,\n                options = that._getAJAXSettings(data),\n                send = function () {\n                    that._sending += 1;\n                    // Set timer for bitrate progress calculation:\n                    options._bitrateTimer = new that._BitrateTimer();\n                    jqXHR = jqXHR || (\n                        ((aborted || that._trigger('send', e, options) === false) &&\n                        that._getXHRPromise(false, options.context, aborted)) ||\n                        that._chunkedUpload(options) || $.ajax(options)\n                    ).done(function (result, textStatus, jqXHR) {\n                        that._onDone(result, textStatus, jqXHR, options);\n                    }).fail(function (jqXHR, textStatus, errorThrown) {\n                        that._onFail(jqXHR, textStatus, errorThrown, options);\n                    }).always(function (jqXHRorResult, textStatus, jqXHRorError) {\n                        that._onAlways(\n                            jqXHRorResult,\n                            textStatus,\n                            jqXHRorError,\n                            options\n                        );\n                        that._sending -= 1;\n                        that._active -= 1;\n                        if (options.limitConcurrentUploads &&\n                                options.limitConcurrentUploads > that._sending) {\n                            // Start the next queued upload,\n                            // that has not been aborted:\n                            var nextSlot = that._slots.shift();\n                            while (nextSlot) {\n                                if (that._getDeferredState(nextSlot) === 'pending') {\n                                    nextSlot.resolve();\n                                    break;\n                                }\n                                nextSlot = that._slots.shift();\n                            }\n                        }\n                        if (that._active === 0) {\n                            // The stop callback is triggered when all uploads have\n                            // been completed, equivalent to the global ajaxStop event:\n                            that._trigger('stop');\n                        }\n                    });\n                    return jqXHR;\n                };\n            this._beforeSend(e, options);\n            if (this.options.sequentialUploads ||\n                    (this.options.limitConcurrentUploads &&\n                    this.options.limitConcurrentUploads <= this._sending)) {\n                if (this.options.limitConcurrentUploads > 1) {\n                    slot = $.Deferred();\n                    this._slots.push(slot);\n                    pipe = slot.pipe(send);\n                } else {\n                    pipe = (this._sequence = this._sequence.pipe(send, send));\n                }\n                // Return the piped Promise object, enhanced with an abort method,\n                // which is delegated to the jqXHR object of the current upload,\n                // and jqXHR callbacks mapped to the equivalent Promise methods:\n                pipe.abort = function () {\n                    aborted = [undefined, 'abort', 'abort'];\n                    if (!jqXHR) {\n                        if (slot) {\n                            slot.rejectWith(options.context, aborted);\n                        }\n                        return send();\n                    }\n                    return jqXHR.abort();\n                };\n                return this._enhancePromise(pipe);\n            }\n            return send();\n        },\n\n        _onAdd: function (e, data) {\n            var that = this,\n                result = true,\n                options = $.extend({}, this.options, data),\n                limit = options.limitMultiFileUploads,\n                paramName = this._getParamName(options),\n                paramNameSet,\n                paramNameSlice,\n                fileSet,\n                i;\n            if (!(options.singleFileUploads || limit) ||\n                    !this._isXHRUpload(options)) {\n                fileSet = [data.files];\n                paramNameSet = [paramName];\n            } else if (!options.singleFileUploads && limit) {\n                fileSet = [];\n                paramNameSet = [];\n                for (i = 0; i < data.files.length; i += limit) {\n                    fileSet.push(data.files.slice(i, i + limit));\n                    paramNameSlice = paramName.slice(i, i + limit);\n                    if (!paramNameSlice.length) {\n                        paramNameSlice = paramName;\n                    }\n                    paramNameSet.push(paramNameSlice);\n                }\n            } else {\n                paramNameSet = paramName;\n            }\n            data.originalFiles = data.files;\n            $.each(fileSet || data.files, function (index, element) {\n                var newData = $.extend({}, data);\n                newData.files = fileSet ? element : [element];\n                newData.paramName = paramNameSet[index];\n                that._initResponseObject(newData);\n                that._initProgressObject(newData);\n                that._addConvenienceMethods(e, newData);\n                result = that._trigger('add', e, newData);\n                return result;\n            });\n            return result;\n        },\n\n        _replaceFileInput: function (input) {\n            var inputClone = input.clone(true);\n            $('<form></form>').append(inputClone)[0].reset();\n            // Detaching allows to insert the fileInput on another form\n            // without loosing the file input value:\n            input.after(inputClone).detach();\n            // Avoid memory leaks with the detached file input:\n            $.cleanData(input.unbind('remove'));\n            // Replace the original file input element in the fileInput\n            // elements set with the clone, which has been copied including\n            // event handlers:\n            this.options.fileInput = this.options.fileInput.map(function (i, el) {\n                if (el === input[0]) {\n                    return inputClone[0];\n                }\n                return el;\n            });\n            // If the widget has been initialized on the file input itself,\n            // override this.element with the file input clone:\n            if (input[0] === this.element[0]) {\n                this.element = inputClone;\n            }\n        },\n\n        _handleFileTreeEntry: function (entry, path) {\n            var that = this,\n                dfd = $.Deferred(),\n                errorHandler = function (e) {\n                    if (e && !e.entry) {\n                        e.entry = entry;\n                    }\n                    // Since $.when returns immediately if one\n                    // Deferred is rejected, we use resolve instead.\n                    // This allows valid files and invalid items\n                    // to be returned together in one set:\n                    dfd.resolve([e]);\n                },\n                dirReader;\n            path = path || '';\n            if (entry.isFile) {\n                if (entry._file) {\n                    // Workaround for Chrome bug #149735\n                    entry._file.relativePath = path;\n                    dfd.resolve(entry._file);\n                } else {\n                    entry.file(function (file) {\n                        file.relativePath = path;\n                        dfd.resolve(file);\n                    }, errorHandler);\n                }\n            } else if (entry.isDirectory) {\n                dirReader = entry.createReader();\n                dirReader.readEntries(function (entries) {\n                    that._handleFileTreeEntries(\n                        entries,\n                        path + entry.name + '/'\n                    ).done(function (files) {\n                        dfd.resolve(files);\n                    }).fail(errorHandler);\n                }, errorHandler);\n            } else {\n                // Return an empy list for file system items\n                // other than files or directories:\n                dfd.resolve([]);\n            }\n            return dfd.promise();\n        },\n\n        _handleFileTreeEntries: function (entries, path) {\n            var that = this;\n            return $.when.apply(\n                $,\n                $.map(entries, function (entry) {\n                    return that._handleFileTreeEntry(entry, path);\n                })\n            ).pipe(function () {\n                return Array.prototype.concat.apply(\n                    [],\n                    arguments\n                );\n            });\n        },\n\n        _getDroppedFiles: function (dataTransfer) {\n            dataTransfer = dataTransfer || {};\n            var items = dataTransfer.items;\n            if (items && items.length && (items[0].webkitGetAsEntry ||\n                    items[0].getAsEntry)) {\n                return this._handleFileTreeEntries(\n                    $.map(items, function (item) {\n                        var entry;\n                        if (item.webkitGetAsEntry) {\n                            entry = item.webkitGetAsEntry();\n                            if (entry) {\n                                // Workaround for Chrome bug #149735:\n                                entry._file = item.getAsFile();\n                            }\n                            return entry;\n                        }\n                        return item.getAsEntry();\n                    })\n                );\n            }\n            return $.Deferred().resolve(\n                $.makeArray(dataTransfer.files)\n            ).promise();\n        },\n\n        _getSingleFileInputFiles: function (fileInput) {\n            fileInput = $(fileInput);\n            var entries = fileInput.prop('webkitEntries') ||\n                    fileInput.prop('entries'),\n                files,\n                value;\n            if (entries && entries.length) {\n                return this._handleFileTreeEntries(entries);\n            }\n            files = $.makeArray(fileInput.prop('files'));\n            if (!files.length) {\n                value = fileInput.prop('value');\n                if (!value) {\n                    return $.Deferred().resolve([]).promise();\n                }\n                // If the files property is not available, the browser does not\n                // support the File API and we add a pseudo File object with\n                // the input value as name with path information removed:\n                files = [{name: value.replace(/^.*\\\\/, '')}];\n            } else if (files[0].name === undefined && files[0].fileName) {\n                // File normalization for Safari 4 and Firefox 3:\n                $.each(files, function (index, file) {\n                    file.name = file.fileName;\n                    file.size = file.fileSize;\n                });\n            }\n            return $.Deferred().resolve(files).promise();\n        },\n\n        _getFileInputFiles: function (fileInput) {\n            if (!(fileInput instanceof $) || fileInput.length === 1) {\n                return this._getSingleFileInputFiles(fileInput);\n            }\n            return $.when.apply(\n                $,\n                $.map(fileInput, this._getSingleFileInputFiles)\n            ).pipe(function () {\n                return Array.prototype.concat.apply(\n                    [],\n                    arguments\n                );\n            });\n        },\n\n        _onChange: function (e) {\n            var that = this,\n                data = {\n                    fileInput: $(e.target),\n                    form: $(e.target.form)\n                };\n            this._getFileInputFiles(data.fileInput).always(function (files) {\n                data.files = files;\n                if (that.options.replaceFileInput) {\n                    that._replaceFileInput(data.fileInput);\n                }\n                if (that._trigger('change', e, data) !== false) {\n                    that._onAdd(e, data);\n                }\n            });\n        },\n\n        _onPaste: function (e) {\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\n                    e.originalEvent.clipboardData.items,\n                data = {files: []};\n            if (items && items.length) {\n                $.each(items, function (index, item) {\n                    var file = item.getAsFile && item.getAsFile();\n                    if (file) {\n                        data.files.push(file);\n                    }\n                });\n                if (this._trigger('paste', e, data) === false ||\n                        this._onAdd(e, data) === false) {\n                    return false;\n                }\n            }\n        },\n\n        _onDrop: function (e) {\n            var that = this,\n                dataTransfer = e.dataTransfer = e.originalEvent &&\n                    e.originalEvent.dataTransfer,\n                data = {};\n            if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n                e.preventDefault();\n                this._getDroppedFiles(dataTransfer).always(function (files) {\n                    data.files = files;\n                    if (that._trigger('drop', e, data) !== false) {\n                        that._onAdd(e, data);\n                    }\n                });\n            }\n        },\n\n        _onDragOver: function (e) {\n            var dataTransfer = e.dataTransfer = e.originalEvent &&\n                e.originalEvent.dataTransfer;\n            if (dataTransfer) {\n                if (this._trigger('dragover', e) === false) {\n                    return false;\n                }\n                if ($.inArray('Files', dataTransfer.types) !== -1) {\n                    dataTransfer.dropEffect = 'copy';\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _initEventHandlers: function () {\n            if (this._isXHRUpload(this.options)) {\n                this._on(this.options.dropZone, {\n                    dragover: this._onDragOver,\n                    drop: this._onDrop\n                });\n                this._on(this.options.pasteZone, {\n                    paste: this._onPaste\n                });\n            }\n            this._on(this.options.fileInput, {\n                change: this._onChange\n            });\n        },\n\n        _destroyEventHandlers: function () {\n            this._off(this.options.dropZone, 'dragover drop');\n            this._off(this.options.pasteZone, 'paste');\n            this._off(this.options.fileInput, 'change');\n        },\n\n        _setOption: function (key, value) {\n            var reinit = $.inArray(key, this._specialOptions) !== -1;\n            if (reinit) {\n                this._destroyEventHandlers();\n            }\n            this._super(key, value);\n            if (reinit) {\n                this._initSpecialOptions();\n                this._initEventHandlers();\n            }\n        },\n\n        _initSpecialOptions: function () {\n            var options = this.options;\n            if (options.fileInput === undefined) {\n                options.fileInput = this.element.is('input[type=\"file\"]') ?\n                        this.element : this.element.find('input[type=\"file\"]');\n            } else if (!(options.fileInput instanceof $)) {\n                options.fileInput = $(options.fileInput);\n            }\n            if (!(options.dropZone instanceof $)) {\n                options.dropZone = $(options.dropZone);\n            }\n            if (!(options.pasteZone instanceof $)) {\n                options.pasteZone = $(options.pasteZone);\n            }\n        },\n\n        _getRegExp: function (str) {\n            var parts = str.split('/'),\n                modifiers = parts.pop();\n            parts.shift();\n            return new RegExp(parts.join('/'), modifiers);\n        },\n\n        _isRegExpOption: function (key, value) {\n            return key !== 'url' && $.type(value) === 'string' &&\n                /^\\/.*\\/[igm]{0,3}$/.test(value);\n        },\n\n        _initDataAttributes: function () {\n            var that = this,\n                options = this.options;\n            // Initialize options set via HTML5 data-attributes:\n            $.each(\n                $(this.element[0].cloneNode(false)).data(),\n                function (key, value) {\n                    if (that._isRegExpOption(key, value)) {\n                        value = that._getRegExp(value);\n                    }\n                    options[key] = value;\n                }\n            );\n        },\n\n        _create: function () {\n            this._initDataAttributes();\n            this._initSpecialOptions();\n            this._slots = [];\n            this._sequence = this._getXHRPromise(true);\n            this._sending = this._active = 0;\n            this._initProgressObject(this);\n            this._initEventHandlers();\n        },\n\n        // This method is exposed to the widget API and allows to query\n        // the number of active uploads:\n        active: function () {\n            return this._active;\n        },\n\n        // This method is exposed to the widget API and allows to query\n        // the widget upload progress.\n        // It returns an object with loaded, total and bitrate properties\n        // for the running uploads:\n        progress: function () {\n            return this._progress;\n        },\n\n        // This method is exposed to the widget API and allows adding files\n        // using the fileupload API. The data parameter accepts an object which\n        // must have a files property and can contain additional options:\n        // .fileupload('add', {files: filesList});\n        add: function (data) {\n            var that = this;\n            if (!data || this.options.disabled) {\n                return;\n            }\n            if (data.fileInput && !data.files) {\n                this._getFileInputFiles(data.fileInput).always(function (files) {\n                    data.files = files;\n                    that._onAdd(null, data);\n                });\n            } else {\n                data.files = $.makeArray(data.files);\n                this._onAdd(null, data);\n            }\n        },\n\n        // This method is exposed to the widget API and allows sending files\n        // using the fileupload API. The data parameter accepts an object which\n        // must have a files or fileInput property and can contain additional options:\n        // .fileupload('send', {files: filesList});\n        // The method returns a Promise object for the file upload call.\n        send: function (data) {\n            if (data && !this.options.disabled) {\n                if (data.fileInput && !data.files) {\n                    var that = this,\n                        dfd = $.Deferred(),\n                        promise = dfd.promise(),\n                        jqXHR,\n                        aborted;\n                    promise.abort = function () {\n                        aborted = true;\n                        if (jqXHR) {\n                            return jqXHR.abort();\n                        }\n                        dfd.reject(null, 'abort', 'abort');\n                        return promise;\n                    };\n                    this._getFileInputFiles(data.fileInput).always(\n                        function (files) {\n                            if (aborted) {\n                                return;\n                            }\n                            data.files = files;\n                            jqXHR = that._onSend(null, data).then(\n                                function (result, textStatus, jqXHR) {\n                                    dfd.resolve(result, textStatus, jqXHR);\n                                },\n                                function (jqXHR, textStatus, errorThrown) {\n                                    dfd.reject(jqXHR, textStatus, errorThrown);\n                                }\n                            );\n                        }\n                    );\n                    return this._enhancePromise(promise);\n                }\n                data.files = $.makeArray(data.files);\n                if (data.files.length) {\n                    return this._onSend(null, data);\n                }\n            }\n            return this._getXHRPromise(false, data && data.context);\n        }\n\n    });\n\n}));\n</script><script type=\"text/javascript\">(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-11864987-1', 'auto');\n  ga('send', 'pageview');</script><script type=\"text/javascript\">    /*\n     *\n     * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n     *\n     * Copyright (c) 2012, Matias Meno\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     *\n     */\n    (function () {\n        var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n          __slice = [].slice,\n          __hasProp = {}.hasOwnProperty,\n          __extends = function (child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n        noop = function () { };\n\n        Emitter = (function () {\n            function Emitter() { }\n\n            Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n            Emitter.prototype.on = function (event, fn) {\n                this._callbacks = this._callbacks || {};\n                if (!this._callbacks[event]) {\n                    this._callbacks[event] = [];\n                }\n                this._callbacks[event].push(fn);\n                return this;\n            };\n\n            Emitter.prototype.emit = function () {\n                var args, callback, callbacks, event, _i, _len;\n                event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n                this._callbacks = this._callbacks || {};\n                callbacks = this._callbacks[event];\n                if (callbacks) {\n                    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n                        callback = callbacks[_i];\n                        callback.apply(this, args);\n                    }\n                }\n                return this;\n            };\n\n            Emitter.prototype.removeListener = Emitter.prototype.off;\n\n            Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n            Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n            Emitter.prototype.off = function (event, fn) {\n                var callback, callbacks, i, _i, _len;\n                if (!this._callbacks || arguments.length === 0) {\n                    this._callbacks = {};\n                    return this;\n                }\n                callbacks = this._callbacks[event];\n                if (!callbacks) {\n                    return this;\n                }\n                if (arguments.length === 1) {\n                    delete this._callbacks[event];\n                    return this;\n                }\n                for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n                    callback = callbacks[i];\n                    if (callback === fn) {\n                        callbacks.splice(i, 1);\n                        break;\n                    }\n                }\n                return this;\n            };\n\n            return Emitter;\n\n        })();\n\n        Dropzone = (function (_super) {\n            var extend, resolveOption;\n\n            __extends(Dropzone, _super);\n\n            Dropzone.prototype.Emitter = Emitter;\n\n\n            /*\n            This is a list of all available events you can register on a dropzone object.\n            \n            You can register an event handler like this:\n            \n                dropzone.on(\"dragEnter\", function() { });\n             */\n\n            Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n            Dropzone.prototype.defaultOptions = {\n                url: null,\n                method: \"post\",\n                withCredentials: false,\n                parallelUploads: 2,\n                uploadMultiple: false,\n                maxFilesize: 256,\n                paramName: \"file\",\n                createImageThumbnails: true,\n                maxThumbnailFilesize: 10,\n                thumbnailWidth: 120,\n                thumbnailHeight: 120,\n                filesizeBase: 1000,\n                maxFiles: null,\n                params: {},\n                clickable: true,\n                ignoreHiddenFiles: true,\n                acceptedFiles: null,\n                acceptedMimeTypes: null,\n                autoProcessQueue: true,\n                autoQueue: true,\n                addRemoveLinks: false,\n                previewsContainer: null,\n                hiddenInputContainer: \"body\",\n                capture: null,\n                renameFilename: null,\n                dictDefaultMessage: \"Drop files here to upload\",\n                dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n                dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n                dictFileTooBig: \"File is too big ({{filesize}}MB). Max filesize: {{maxFilesize}}MB.\",\n                dictInvalidFileType: \"You can't upload files of this type.\",\n                dictResponseError: \"Server responded with {{statusCode}} code.\",\n                dictCancelUpload: \"Cancel upload\",\n                dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n                dictRemoveFile: \"Remove file\",\n                dictRemoveFileConfirmation: null,\n                dictMaxFilesExceeded: \"You can not upload any more files.\",\n                accept: function (file, done) {\n                    return done();\n                },\n                init: function () {\n                    return noop;\n                },\n                forceFallback: false,\n                fallback: function () {\n                    var child, messageElement, span, _i, _len, _ref;\n                    this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n                    _ref = this.element.getElementsByTagName(\"div\");\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                        child = _ref[_i];\n                        if (/(^| )dz-message($| )/.test(child.className)) {\n                            messageElement = child;\n                            child.className = \"dz-message\";\n                            continue;\n                        }\n                    }\n                    if (!messageElement) {\n                        messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n                        this.element.appendChild(messageElement);\n                    }\n                    span = messageElement.getElementsByTagName(\"span\")[0];\n                    if (span) {\n                        if (span.textContent != null) {\n                            span.textContent = this.options.dictFallbackMessage;\n                        } else if (span.innerText != null) {\n                            span.innerText = this.options.dictFallbackMessage;\n                        }\n                    }\n                    return this.element.appendChild(this.getFallbackForm());\n                },\n                resize: function (file) {\n                    var info, srcRatio, trgRatio;\n                    info = {\n                        srcX: 0,\n                        srcY: 0,\n                        srcWidth: file.width,\n                        srcHeight: file.height\n                    };\n                    srcRatio = file.width / file.height;\n                    info.optWidth = this.options.thumbnailWidth;\n                    info.optHeight = this.options.thumbnailHeight;\n                    if ((info.optWidth == null) && (info.optHeight == null)) {\n                        info.optWidth = info.srcWidth;\n                        info.optHeight = info.srcHeight;\n                    } else if (info.optWidth == null) {\n                        info.optWidth = srcRatio * info.optHeight;\n                    } else if (info.optHeight == null) {\n                        info.optHeight = (1 / srcRatio) * info.optWidth;\n                    }\n                    trgRatio = info.optWidth / info.optHeight;\n                    if (file.height < info.optHeight || file.width < info.optWidth) {\n                        info.trgHeight = info.srcHeight;\n                        info.trgWidth = info.srcWidth;\n                    } else {\n                        if (srcRatio > trgRatio) {\n                            info.srcHeight = file.height;\n                            info.srcWidth = info.srcHeight * trgRatio;\n                        } else {\n                            info.srcWidth = file.width;\n                            info.srcHeight = info.srcWidth / trgRatio;\n                        }\n                    }\n                    info.srcX = (file.width - info.srcWidth) / 2;\n                    info.srcY = (file.height - info.srcHeight) / 2;\n                    return info;\n                },\n\n                /*\n                Those functions register themselves to the events on init and handle all\n                the user interface specific stuff. Overwriting them won't break the upload\n                but can break the way it's displayed.\n                You can overwrite them if you don't like the default behavior. If you just\n                want to add an additional event handler, register it on the dropzone object\n                and don't overwrite those options.\n                 */\n                drop: function (e) {\n                    return this.element.classList.remove(\"dz-drag-hover\");\n                },\n                dragstart: noop,\n                dragend: function (e) {\n                    return this.element.classList.remove(\"dz-drag-hover\");\n                },\n                dragenter: function (e) {\n                    return this.element.classList.add(\"dz-drag-hover\");\n                },\n                dragover: function (e) {\n                    return this.element.classList.add(\"dz-drag-hover\");\n                },\n                dragleave: function (e) {\n                    return this.element.classList.remove(\"dz-drag-hover\");\n                },\n                paste: noop,\n                reset: function () {\n                    return this.element.classList.remove(\"dz-started\");\n                },\n                addedfile: function (file) {\n                    var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n                    if (this.element === this.previewsContainer) {\n                        this.element.classList.add(\"dz-started\");\n                    }\n                    if (this.previewsContainer) {\n                        file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n                        file.previewTemplate = file.previewElement;\n                        this.previewsContainer.appendChild(file.previewElement);\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                            node = _ref[_i];\n                            node.textContent = this._renameFilename(file.name);\n                        }\n                        _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n                        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n                            node = _ref1[_j];\n                            node.innerHTML = this.filesize(file.size);\n                        }\n                        if (this.options.addRemoveLinks) {\n                            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n                            file.previewElement.appendChild(file._removeLink);\n                        }\n                        removeFileEvent = (function (_this) {\n                            return function (e) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                if (file.status === Dropzone.UPLOADING) {\n                                    return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function () {\n                                        return _this.removeFile(file);\n                                    });\n                                } else {\n                                    if (_this.options.dictRemoveFileConfirmation) {\n                                        return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function () {\n                                            return _this.removeFile(file);\n                                        });\n                                    } else {\n                                        return _this.removeFile(file);\n                                    }\n                                }\n                            };\n                        })(this);\n                        _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n                        _results = [];\n                        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n                            removeLink = _ref2[_k];\n                            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n                        }\n                        return _results;\n                    }\n                },\n                removedfile: function (file) {\n                    var _ref;\n                    if (file.previewElement) {\n                        if ((_ref = file.previewElement) != null) {\n                            _ref.parentNode.removeChild(file.previewElement);\n                        }\n                    }\n                    return this._updateMaxFilesReachedClass();\n                },\n                thumbnail: function (file, dataUrl) {\n                    var thumbnailElement, _i, _len, _ref;\n                    if (file.previewElement) {\n                        file.previewElement.classList.remove(\"dz-file-preview\");\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                            thumbnailElement = _ref[_i];\n                            thumbnailElement.alt = file.name;\n                            thumbnailElement.src = dataUrl;\n                        }\n                        return setTimeout(((function (_this) {\n                            return function () {\n                                return file.previewElement.classList.add(\"dz-image-preview\");\n                            };\n                        })(this)), 1);\n                    }\n                },\n                error: function (file, message) {\n                    var node, _i, _len, _ref, _results;\n                    if (file.previewElement) {\n                        file.previewElement.classList.add(\"dz-error\");\n                        if (typeof message !== \"String\" && message.error) {\n                            message = message.error;\n                        }\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n                        _results = [];\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                            node = _ref[_i];\n                            _results.push(node.textContent = message);\n                        }\n                        return _results;\n                    }\n                },\n                errormultiple: noop,\n                processing: function (file) {\n                    if (file.previewElement) {\n                        file.previewElement.classList.add(\"dz-processing\");\n                        if (file._removeLink) {\n                            return file._removeLink.textContent = this.options.dictCancelUpload;\n                        }\n                    }\n                },\n                processingmultiple: noop,\n                uploadprogress: function (file, progress, bytesSent) {\n                    var node, _i, _len, _ref, _results;\n                    if (file.previewElement) {\n                        _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n                        _results = [];\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                            node = _ref[_i];\n                            if (node.nodeName === 'PROGRESS') {\n                                _results.push(node.value = progress);\n                            } else {\n                                _results.push(node.style.width = \"\" + progress + \"%\");\n                            }\n                        }\n                        return _results;\n                    }\n                },\n                totaluploadprogress: noop,\n                sending: noop,\n                sendingmultiple: noop,\n                success: function (file) {\n                    if (file.previewElement) {\n                        return file.previewElement.classList.add(\"dz-success\");\n                    }\n                },\n                successmultiple: noop,\n                canceled: function (file) {\n                    return this.emit(\"error\", file, \"Upload canceled.\");\n                },\n                canceledmultiple: noop,\n                complete: function (file) {\n                    if (file._removeLink) {\n                        file._removeLink.textContent = this.options.dictRemoveFile;\n                    }\n                    if (file.previewElement) {\n                        return file.previewElement.classList.add(\"dz-complete\");\n                    }\n                },\n                completemultiple: noop,\n                maxfilesexceeded: noop,\n                maxfilesreached: noop,\n                queuecomplete: noop,\n                addedfiles: noop,\n                previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n            };\n\n            extend = function () {\n                var key, object, objects, target, val, _i, _len;\n                target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n                for (_i = 0, _len = objects.length; _i < _len; _i++) {\n                    object = objects[_i];\n                    for (key in object) {\n                        val = object[key];\n                        target[key] = val;\n                    }\n                }\n                return target;\n            };\n\n            function Dropzone(element, options) {\n                var elementOptions, fallback, _ref;\n                this.element = element;\n                this.version = Dropzone.version;\n                this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n                this.clickableElements = [];\n                this.listeners = [];\n                this.files = [];\n                if (typeof this.element === \"string\") {\n                    this.element = document.querySelector(this.element);\n                }\n                if (!(this.element && (this.element.nodeType != null))) {\n                    throw new Error(\"Invalid dropzone element.\");\n                }\n                if (this.element.dropzone) {\n                    throw new Error(\"Dropzone already attached.\");\n                }\n                Dropzone.instances.push(this);\n                this.element.dropzone = this;\n                elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n                this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n                if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n                    return this.options.fallback.call(this);\n                }\n                if (this.options.url == null) {\n                    this.options.url = this.element.getAttribute(\"action\");\n                }\n                if (!this.options.url) {\n                    throw new Error(\"No URL provided.\");\n                }\n                if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n                    throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n                }\n                if (this.options.acceptedMimeTypes) {\n                    this.options.acceptedFiles = this.options.acceptedMimeTypes;\n                    delete this.options.acceptedMimeTypes;\n                }\n                this.options.method = this.options.method.toUpperCase();\n                if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n                    fallback.parentNode.removeChild(fallback);\n                }\n                if (this.options.previewsContainer !== false) {\n                    if (this.options.previewsContainer) {\n                        this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n                    } else {\n                        this.previewsContainer = this.element;\n                    }\n                }\n                if (this.options.clickable) {\n                    if (this.options.clickable === true) {\n                        this.clickableElements = [this.element];\n                    } else {\n                        this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n                    }\n                }\n                this.init();\n            }\n\n            Dropzone.prototype.getAcceptedFiles = function () {\n                var file, _i, _len, _ref, _results;\n                _ref = this.files;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    if (file.accepted) {\n                        _results.push(file);\n                    }\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.getRejectedFiles = function () {\n                var file, _i, _len, _ref, _results;\n                _ref = this.files;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    if (!file.accepted) {\n                        _results.push(file);\n                    }\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.getFilesWithStatus = function (status) {\n                var file, _i, _len, _ref, _results;\n                _ref = this.files;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    if (file.status === status) {\n                        _results.push(file);\n                    }\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.getQueuedFiles = function () {\n                return this.getFilesWithStatus(Dropzone.QUEUED);\n            };\n\n            Dropzone.prototype.getUploadingFiles = function () {\n                return this.getFilesWithStatus(Dropzone.UPLOADING);\n            };\n\n            Dropzone.prototype.getAddedFiles = function () {\n                return this.getFilesWithStatus(Dropzone.ADDED);\n            };\n\n            Dropzone.prototype.getActiveFiles = function () {\n                var file, _i, _len, _ref, _results;\n                _ref = this.files;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n                        _results.push(file);\n                    }\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.init = function () {\n                var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n                if (this.element.tagName === \"form\") {\n                    this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n                }\n                if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n                    this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n                }\n                if (this.clickableElements.length) {\n                    setupHiddenFileInput = (function (_this) {\n                        return function () {\n                            if (_this.hiddenFileInput) {\n                                _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n                            }\n                            _this.hiddenFileInput = document.createElement(\"input\");\n                            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n                            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n                                _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n                            }\n                            _this.hiddenFileInput.className = \"dz-hidden-input\";\n                            if (_this.options.acceptedFiles != null) {\n                                _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n                            }\n                            if (_this.options.capture != null) {\n                                _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n                            }\n                            _this.hiddenFileInput.style.visibility = \"hidden\";\n                            _this.hiddenFileInput.style.position = \"absolute\";\n                            _this.hiddenFileInput.style.top = \"0\";\n                            _this.hiddenFileInput.style.left = \"0\";\n                            _this.hiddenFileInput.style.height = \"0\";\n                            _this.hiddenFileInput.style.width = \"0\";\n                            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n                            return _this.hiddenFileInput.addEventListener(\"change\", function () {\n                                var file, files, _i, _len;\n                                files = _this.hiddenFileInput.files;\n                                if (files.length) {\n                                    for (_i = 0, _len = files.length; _i < _len; _i++) {\n                                        file = files[_i];\n                                        _this.addFile(file);\n                                    }\n                                }\n                                _this.emit(\"addedfiles\", files);\n                                return setupHiddenFileInput();\n                            });\n                        };\n                    })(this);\n                    setupHiddenFileInput();\n                }\n                this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n                _ref1 = this.events;\n                for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n                    eventName = _ref1[_i];\n                    this.on(eventName, this.options[eventName]);\n                }\n                this.on(\"uploadprogress\", (function (_this) {\n                    return function () {\n                        return _this.updateTotalUploadProgress();\n                    };\n                })(this));\n                this.on(\"removedfile\", (function (_this) {\n                    return function () {\n                        return _this.updateTotalUploadProgress();\n                    };\n                })(this));\n                this.on(\"canceled\", (function (_this) {\n                    return function (file) {\n                        return _this.emit(\"complete\", file);\n                    };\n                })(this));\n                this.on(\"complete\", (function (_this) {\n                    return function (file) {\n                        if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n                            return setTimeout((function () {\n                                return _this.emit(\"queuecomplete\");\n                            }), 0);\n                        }\n                    };\n                })(this));\n                noPropagation = function (e) {\n                    e.stopPropagation();\n                    if (e.preventDefault) {\n                        return e.preventDefault();\n                    } else {\n                        return e.returnValue = false;\n                    }\n                };\n                this.listeners = [\n                  {\n                      element: this.element,\n                      events: {\n                          \"dragstart\": (function (_this) {\n                              return function (e) {\n                                  return _this.emit(\"dragstart\", e);\n                              };\n                          })(this),\n                          \"dragenter\": (function (_this) {\n                              return function (e) {\n                                  noPropagation(e);\n                                  return _this.emit(\"dragenter\", e);\n                              };\n                          })(this),\n                          \"dragover\": (function (_this) {\n                              return function (e) {\n                                  var efct;\n                                  try {\n                                      efct = e.dataTransfer.effectAllowed;\n                                  } catch (_error) { }\n                                  e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                                  noPropagation(e);\n                                  return _this.emit(\"dragover\", e);\n                              };\n                          })(this),\n                          \"dragleave\": (function (_this) {\n                              return function (e) {\n                                  return _this.emit(\"dragleave\", e);\n                              };\n                          })(this),\n                          \"drop\": (function (_this) {\n                              return function (e) {\n                                  noPropagation(e);\n                                  return _this.drop(e);\n                              };\n                          })(this),\n                          \"dragend\": (function (_this) {\n                              return function (e) {\n                                  return _this.emit(\"dragend\", e);\n                              };\n                          })(this)\n                      }\n                  }\n                ];\n                this.clickableElements.forEach((function (_this) {\n                    return function (clickableElement) {\n                        return _this.listeners.push({\n                            element: clickableElement,\n                            events: {\n                                \"click\": function (evt) {\n                                    if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                                        _this.hiddenFileInput.click();\n                                    }\n                                    return true;\n                                }\n                            }\n                        });\n                    };\n                })(this));\n                this.enable();\n                return this.options.init.call(this);\n            };\n\n            Dropzone.prototype.destroy = function () {\n                var _ref;\n                this.disable();\n                this.removeAllFiles(true);\n                if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n                    this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n                    this.hiddenFileInput = null;\n                }\n                delete this.element.dropzone;\n                return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n            };\n\n            Dropzone.prototype.updateTotalUploadProgress = function () {\n                var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n                totalBytesSent = 0;\n                totalBytes = 0;\n                activeFiles = this.getActiveFiles();\n                if (activeFiles.length) {\n                    _ref = this.getActiveFiles();\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                        file = _ref[_i];\n                        totalBytesSent += file.upload.bytesSent;\n                        totalBytes += file.upload.total;\n                    }\n                    totalUploadProgress = 100 * totalBytesSent / totalBytes;\n                } else {\n                    totalUploadProgress = 100;\n                }\n                return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n            };\n\n            Dropzone.prototype._getParamName = function (n) {\n                if (typeof this.options.paramName === \"function\") {\n                    return this.options.paramName(n);\n                } else {\n                    return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n                }\n            };\n\n            Dropzone.prototype._renameFilename = function (name) {\n                if (typeof this.options.renameFilename !== \"function\") {\n                    return name;\n                }\n                return this.options.renameFilename(name);\n            };\n\n            Dropzone.prototype.getFallbackForm = function () {\n                var existingFallback, fields, fieldsString, form;\n                if (existingFallback = this.getExistingFallback()) {\n                    return existingFallback;\n                }\n                fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n                if (this.options.dictFallbackText) {\n                    fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n                }\n                fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n                fields = Dropzone.createElement(fieldsString);\n                if (this.element.tagName !== \"FORM\") {\n                    form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n                    form.appendChild(fields);\n                } else {\n                    this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n                    this.element.setAttribute(\"method\", this.options.method);\n                }\n                return form != null ? form : fields;\n            };\n\n            Dropzone.prototype.getExistingFallback = function () {\n                var fallback, getFallback, tagName, _i, _len, _ref;\n                getFallback = function (elements) {\n                    var el, _i, _len;\n                    for (_i = 0, _len = elements.length; _i < _len; _i++) {\n                        el = elements[_i];\n                        if (/(^| )fallback($| )/.test(el.className)) {\n                            return el;\n                        }\n                    }\n                };\n                _ref = [\"div\", \"form\"];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    tagName = _ref[_i];\n                    if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n                        return fallback;\n                    }\n                }\n            };\n\n            Dropzone.prototype.setupEventListeners = function () {\n                var elementListeners, event, listener, _i, _len, _ref, _results;\n                _ref = this.listeners;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    elementListeners = _ref[_i];\n                    _results.push((function () {\n                        var _ref1, _results1;\n                        _ref1 = elementListeners.events;\n                        _results1 = [];\n                        for (event in _ref1) {\n                            listener = _ref1[event];\n                            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n                        }\n                        return _results1;\n                    })());\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.removeEventListeners = function () {\n                var elementListeners, event, listener, _i, _len, _ref, _results;\n                _ref = this.listeners;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    elementListeners = _ref[_i];\n                    _results.push((function () {\n                        var _ref1, _results1;\n                        _ref1 = elementListeners.events;\n                        _results1 = [];\n                        for (event in _ref1) {\n                            listener = _ref1[event];\n                            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n                        }\n                        return _results1;\n                    })());\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.disable = function () {\n                var file, _i, _len, _ref, _results;\n                this.clickableElements.forEach(function (element) {\n                    return element.classList.remove(\"dz-clickable\");\n                });\n                this.removeEventListeners();\n                _ref = this.files;\n                _results = [];\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    _results.push(this.cancelUpload(file));\n                }\n                return _results;\n            };\n\n            Dropzone.prototype.enable = function () {\n                this.clickableElements.forEach(function (element) {\n                    return element.classList.add(\"dz-clickable\");\n                });\n                return this.setupEventListeners();\n            };\n\n            Dropzone.prototype.filesize = function (size) {\n                var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n                selectedSize = 0;\n                selectedUnit = \"b\";\n                if (size > 0) {\n                    units = ['TB', 'GB', 'MB', 'KB', 'b'];\n                    for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n                        unit = units[i];\n                        cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n                        if (size >= cutoff) {\n                            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n                            selectedUnit = unit;\n                            break;\n                        }\n                    }\n                    selectedSize = Math.round(10 * selectedSize) / 10;\n                }\n                return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n            };\n\n            Dropzone.prototype._updateMaxFilesReachedClass = function () {\n                if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n                    if (this.getAcceptedFiles().length === this.options.maxFiles) {\n                        this.emit('maxfilesreached', this.files);\n                    }\n                    return this.element.classList.add(\"dz-max-files-reached\");\n                } else {\n                    return this.element.classList.remove(\"dz-max-files-reached\");\n                }\n            };\n\n            Dropzone.prototype.drop = function (e) {\n                var files, items;\n                if (!e.dataTransfer) {\n                    return;\n                }\n                this.emit(\"drop\", e);\n                files = e.dataTransfer.files;\n                this.emit(\"addedfiles\", files);\n                if (files.length) {\n                    items = e.dataTransfer.items;\n                    if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n                        this._addFilesFromItems(items);\n                    } else {\n                        this.handleFiles(files);\n                    }\n                }\n            };\n\n            Dropzone.prototype.paste = function (e) {\n                var items, _ref;\n                if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n                    return;\n                }\n                this.emit(\"paste\", e);\n                items = e.clipboardData.items;\n                if (items.length) {\n                    return this._addFilesFromItems(items);\n                }\n            };\n\n            Dropzone.prototype.handleFiles = function (files) {\n                var file, _i, _len, _results;\n                _results = [];\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    _results.push(this.addFile(file));\n                }\n                return _results;\n            };\n\n            Dropzone.prototype._addFilesFromItems = function (items) {\n                var entry, item, _i, _len, _results;\n                _results = [];\n                for (_i = 0, _len = items.length; _i < _len; _i++) {\n                    item = items[_i];\n                    if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n                        if (entry.isFile) {\n                            _results.push(this.addFile(item.getAsFile()));\n                        } else if (entry.isDirectory) {\n                            _results.push(this._addFilesFromDirectory(entry, entry.name));\n                        } else {\n                            _results.push(void 0);\n                        }\n                    } else if (item.getAsFile != null) {\n                        if ((item.kind == null) || item.kind === \"file\") {\n                            _results.push(this.addFile(item.getAsFile()));\n                        } else {\n                            _results.push(void 0);\n                        }\n                    } else {\n                        _results.push(void 0);\n                    }\n                }\n                return _results;\n            };\n\n            Dropzone.prototype._addFilesFromDirectory = function (directory, path) {\n                var dirReader, errorHandler, readEntries;\n                dirReader = directory.createReader();\n                errorHandler = function (error) {\n                    return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n                };\n                readEntries = (function (_this) {\n                    return function () {\n                        return dirReader.readEntries(function (entries) {\n                            var entry, _i, _len;\n                            if (entries.length > 0) {\n                                for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                                    entry = entries[_i];\n                                    if (entry.isFile) {\n                                        entry.file(function (file) {\n                                            if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                                                return;\n                                            }\n                                            file.fullPath = \"\" + path + \"/\" + file.name;\n                                            return _this.addFile(file);\n                                        });\n                                    } else if (entry.isDirectory) {\n                                        _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                                    }\n                                }\n                                readEntries();\n                            }\n                            return null;\n                        }, errorHandler);\n                    };\n                })(this);\n                return readEntries();\n            };\n\n            Dropzone.prototype.accept = function (file, done) {\n                if (file.size > this.options.maxFilesize * 1024 * 1024) {\n                    return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n                } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n                    return done(this.options.dictInvalidFileType);\n                } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n                    done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n                    return this.emit(\"maxfilesexceeded\", file);\n                } else {\n                    return this.options.accept.call(this, file, done);\n                }\n            };\n\n            Dropzone.prototype.addFile = function (file) {\n                file.upload = {\n                    progress: 0,\n                    total: file.size,\n                    bytesSent: 0\n                };\n                this.files.push(file);\n                file.status = Dropzone.ADDED;\n                this.emit(\"addedfile\", file);\n                this._enqueueThumbnail(file);\n                return this.accept(file, (function (_this) {\n                    return function (error) {\n                        if (error) {\n                            file.accepted = false;\n                            _this._errorProcessing([file], error);\n                        } else {\n                            file.accepted = true;\n                            if (_this.options.autoQueue) {\n                                _this.enqueueFile(file);\n                            }\n                        }\n                        return _this._updateMaxFilesReachedClass();\n                    };\n                })(this));\n            };\n\n            Dropzone.prototype.enqueueFiles = function (files) {\n                var file, _i, _len;\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    this.enqueueFile(file);\n                }\n                return null;\n            };\n\n            Dropzone.prototype.enqueueFile = function (file) {\n                if (file.status === Dropzone.ADDED && file.accepted === true) {\n                    file.status = Dropzone.QUEUED;\n                    if (this.options.autoProcessQueue) {\n                        return setTimeout(((function (_this) {\n                            return function () {\n                                return _this.processQueue();\n                            };\n                        })(this)), 0);\n                    }\n                } else {\n                    throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n                }\n            };\n\n            Dropzone.prototype._thumbnailQueue = [];\n\n            Dropzone.prototype._processingThumbnail = false;\n\n            Dropzone.prototype._enqueueThumbnail = function (file) {\n                if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n                    this._thumbnailQueue.push(file);\n                    return setTimeout(((function (_this) {\n                        return function () {\n                            return _this._processThumbnailQueue();\n                        };\n                    })(this)), 0);\n                }\n            };\n\n            Dropzone.prototype._processThumbnailQueue = function () {\n                if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n                    return;\n                }\n                this._processingThumbnail = true;\n                return this.createThumbnail(this._thumbnailQueue.shift(), (function (_this) {\n                    return function () {\n                        _this._processingThumbnail = false;\n                        return _this._processThumbnailQueue();\n                    };\n                })(this));\n            };\n\n            Dropzone.prototype.removeFile = function (file) {\n                if (file.status === Dropzone.UPLOADING) {\n                    this.cancelUpload(file);\n                }\n                this.files = without(this.files, file);\n                this.emit(\"removedfile\", file);\n                if (this.files.length === 0) {\n                    return this.emit(\"reset\");\n                }\n            };\n\n            Dropzone.prototype.removeAllFiles = function (cancelIfNecessary) {\n                var file, _i, _len, _ref;\n                if (cancelIfNecessary == null) {\n                    cancelIfNecessary = false;\n                }\n                _ref = this.files.slice();\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                    file = _ref[_i];\n                    if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n                        this.removeFile(file);\n                    }\n                }\n                return null;\n            };\n\n            Dropzone.prototype.createThumbnail = function (file, callback) {\n                var fileReader;\n                fileReader = new FileReader;\n                fileReader.onload = (function (_this) {\n                    return function () {\n                        if (file.type === \"image/svg+xml\") {\n                            _this.emit(\"thumbnail\", file, fileReader.result);\n                            if (callback != null) {\n                                callback();\n                            }\n                            return;\n                        }\n                        return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n                    };\n                })(this);\n                return fileReader.readAsDataURL(file);\n            };\n\n            Dropzone.prototype.createThumbnailFromUrl = function (file, imageUrl, callback, crossOrigin) {\n                var img;\n                img = document.createElement(\"img\");\n                if (crossOrigin) {\n                    img.crossOrigin = crossOrigin;\n                }\n                img.onload = (function (_this) {\n                    return function () {\n                        var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n                        file.width = img.width;\n                        file.height = img.height;\n                        resizeInfo = _this.options.resize.call(_this, file);\n                        if (resizeInfo.trgWidth == null) {\n                            resizeInfo.trgWidth = resizeInfo.optWidth;\n                        }\n                        if (resizeInfo.trgHeight == null) {\n                            resizeInfo.trgHeight = resizeInfo.optHeight;\n                        }\n                        canvas = document.createElement(\"canvas\");\n                        ctx = canvas.getContext(\"2d\");\n                        canvas.width = resizeInfo.trgWidth;\n                        canvas.height = resizeInfo.trgHeight;\n                        drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n                        thumbnail = canvas.toDataURL(\"image/png\");\n                        _this.emit(\"thumbnail\", file, thumbnail);\n                        if (callback != null) {\n                            return callback();\n                        }\n                    };\n                })(this);\n                if (callback != null) {\n                    img.onerror = callback;\n                }\n                return img.src = imageUrl;\n            };\n\n            Dropzone.prototype.processQueue = function () {\n                var i, parallelUploads, processingLength, queuedFiles;\n                parallelUploads = this.options.parallelUploads;\n                processingLength = this.getUploadingFiles().length;\n                i = processingLength;\n                if (processingLength >= parallelUploads) {\n                    return;\n                }\n                queuedFiles = this.getQueuedFiles();\n                if (!(queuedFiles.length > 0)) {\n                    return;\n                }\n                if (this.options.uploadMultiple) {\n                    return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n                } else {\n                    while (i < parallelUploads) {\n                        if (!queuedFiles.length) {\n                            return;\n                        }\n                        this.processFile(queuedFiles.shift());\n                        i++;\n                    }\n                }\n            };\n\n            Dropzone.prototype.processFile = function (file) {\n                return this.processFiles([file]);\n            };\n\n            Dropzone.prototype.processFiles = function (files) {\n                var file, _i, _len;\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    file.processing = true;\n                    file.status = Dropzone.UPLOADING;\n                    this.emit(\"processing\", file);\n                }\n                if (this.options.uploadMultiple) {\n                    this.emit(\"processingmultiple\", files);\n                }\n                return this.uploadFiles(files);\n            };\n\n            Dropzone.prototype._getFilesWithXhr = function (xhr) {\n                var file, files;\n                return files = (function () {\n                    var _i, _len, _ref, _results;\n                    _ref = this.files;\n                    _results = [];\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                        file = _ref[_i];\n                        if (file.xhr === xhr) {\n                            _results.push(file);\n                        }\n                    }\n                    return _results;\n                }).call(this);\n            };\n\n            Dropzone.prototype.cancelUpload = function (file) {\n                var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n                if (file.status === Dropzone.UPLOADING) {\n                    groupedFiles = this._getFilesWithXhr(file.xhr);\n                    for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n                        groupedFile = groupedFiles[_i];\n                        groupedFile.status = Dropzone.CANCELED;\n                    }\n                    file.xhr.abort();\n                    for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n                        groupedFile = groupedFiles[_j];\n                        this.emit(\"canceled\", groupedFile);\n                    }\n                    if (this.options.uploadMultiple) {\n                        this.emit(\"canceledmultiple\", groupedFiles);\n                    }\n                } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n                    file.status = Dropzone.CANCELED;\n                    this.emit(\"canceled\", file);\n                    if (this.options.uploadMultiple) {\n                        this.emit(\"canceledmultiple\", [file]);\n                    }\n                }\n                if (this.options.autoProcessQueue) {\n                    return this.processQueue();\n                }\n            };\n\n            resolveOption = function () {\n                var args, option;\n                option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n                if (typeof option === 'function') {\n                    return option.apply(this, args);\n                }\n                return option;\n            };\n\n            Dropzone.prototype.uploadFile = function (file) {\n                return this.uploadFiles([file]);\n            };\n\n            Dropzone.prototype.uploadFiles = function (files) {\n                var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n                xhr = new XMLHttpRequest();\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    file.xhr = xhr;\n                }\n                method = resolveOption(this.options.method, files);\n                url = resolveOption(this.options.url, files);\n                xhr.open(method, url, true);\n                xhr.withCredentials = !!this.options.withCredentials;\n                response = null;\n                handleError = (function (_this) {\n                    return function () {\n                        var _j, _len1, _results;\n                        _results = [];\n                        for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n                            file = files[_j];\n                            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n                        }\n                        return _results;\n                    };\n                })(this);\n                updateProgress = (function (_this) {\n                    return function (e) {\n                        var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n                        if (e != null) {\n                            progress = 100 * e.loaded / e.total;\n                            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n                                file = files[_j];\n                                file.upload = {\n                                    progress: progress,\n                                    total: e.total,\n                                    bytesSent: e.loaded\n                                };\n                            }\n                        } else {\n                            allFilesFinished = true;\n                            progress = 100;\n                            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n                                file = files[_k];\n                                if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                                    allFilesFinished = false;\n                                }\n                                file.upload.progress = progress;\n                                file.upload.bytesSent = file.upload.total;\n                            }\n                            if (allFilesFinished) {\n                                return;\n                            }\n                        }\n                        _results = [];\n                        for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n                            file = files[_l];\n                            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n                        }\n                        return _results;\n                    };\n                })(this);\n                xhr.onload = (function (_this) {\n                    return function (e) {\n                        var _ref;\n                        if (files[0].status === Dropzone.CANCELED) {\n                            return;\n                        }\n                        if (xhr.readyState !== 4) {\n                            return;\n                        }\n                        response = xhr.responseText;\n                        if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n                            try {\n                                response = JSON.parse(response);\n                            } catch (_error) {\n                                e = _error;\n                                response = \"Invalid JSON response from server.\";\n                            }\n                        }\n                        updateProgress();\n                        if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n                            return handleError();\n                        } else {\n                            return _this._finished(files, response, e);\n                        }\n                    };\n                })(this);\n                xhr.onerror = (function (_this) {\n                    return function () {\n                        if (files[0].status === Dropzone.CANCELED) {\n                            return;\n                        }\n                        return handleError();\n                    };\n                })(this);\n                progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n                progressObj.onprogress = updateProgress;\n                headers = {\n                    \"Accept\": \"application/json\",\n                    \"Cache-Control\": \"no-cache\",\n                    \"X-Requested-With\": \"XMLHttpRequest\"\n                };\n                if (this.options.headers) {\n                    extend(headers, this.options.headers);\n                }\n                for (headerName in headers) {\n                    headerValue = headers[headerName];\n                    if (headerValue) {\n                        xhr.setRequestHeader(headerName, headerValue);\n                    }\n                }\n                formData = new FormData();\n                if (this.options.params) {\n                    _ref1 = this.options.params;\n                    for (key in _ref1) {\n                        value = _ref1[key];\n                        formData.append(key, value);\n                    }\n                }\n                for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n                    file = files[_j];\n                    this.emit(\"sending\", file, xhr, formData);\n                }\n                if (this.options.uploadMultiple) {\n                    this.emit(\"sendingmultiple\", files, xhr, formData);\n                }\n                if (this.element.tagName === \"FORM\") {\n                    _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n                    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n                        input = _ref2[_k];\n                        inputName = input.getAttribute(\"name\");\n                        inputType = input.getAttribute(\"type\");\n                        if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n                            _ref3 = input.options;\n                            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n                                option = _ref3[_l];\n                                if (option.selected) {\n                                    formData.append(inputName, option.value);\n                                }\n                            }\n                        } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n                            formData.append(inputName, input.value);\n                        }\n                    }\n                }\n                for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n                    formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n                }\n                return this.submitRequest(xhr, formData, files);\n            };\n\n            Dropzone.prototype.submitRequest = function (xhr, formData, files) {\n                return xhr.send(formData);\n            };\n\n            Dropzone.prototype._finished = function (files, responseText, e) {\n                var file, _i, _len;\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    file.status = Dropzone.SUCCESS;\n                    this.emit(\"success\", file, responseText, e);\n                    this.emit(\"complete\", file);\n                }\n                if (this.options.uploadMultiple) {\n                    this.emit(\"successmultiple\", files, responseText, e);\n                    this.emit(\"completemultiple\", files);\n                }\n                if (this.options.autoProcessQueue) {\n                    return this.processQueue();\n                }\n            };\n\n            Dropzone.prototype._errorProcessing = function (files, message, xhr) {\n                var file, _i, _len;\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                    file = files[_i];\n                    file.status = Dropzone.ERROR;\n                    this.emit(\"error\", file, message, xhr);\n                    this.emit(\"complete\", file);\n                }\n                if (this.options.uploadMultiple) {\n                    this.emit(\"errormultiple\", files, message, xhr);\n                    this.emit(\"completemultiple\", files);\n                }\n                if (this.options.autoProcessQueue) {\n                    return this.processQueue();\n                }\n            };\n\n            return Dropzone;\n\n        })(Emitter);\n\n        Dropzone.version = \"4.3.0\";\n\n        Dropzone.options = {};\n\n        Dropzone.optionsForElement = function (element) {\n            if (element.getAttribute(\"id\")) {\n                return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n            } else {\n                return void 0;\n            }\n        };\n\n        Dropzone.instances = [];\n\n        Dropzone.forElement = function (element) {\n            if (typeof element === \"string\") {\n                element = document.querySelector(element);\n            }\n            if ((element != null ? element.dropzone : void 0) == null) {\n                throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n            }\n            return element.dropzone;\n        };\n\n        Dropzone.autoDiscover = true;\n\n        Dropzone.discover = function () {\n            var checkElements, dropzone, dropzones, _i, _len, _results;\n            if (document.querySelectorAll) {\n                dropzones = document.querySelectorAll(\".dropzone\");\n            } else {\n                dropzones = [];\n                checkElements = function (elements) {\n                    var el, _i, _len, _results;\n                    _results = [];\n                    for (_i = 0, _len = elements.length; _i < _len; _i++) {\n                        el = elements[_i];\n                        if (/(^| )dropzone($| )/.test(el.className)) {\n                            _results.push(dropzones.push(el));\n                        } else {\n                            _results.push(void 0);\n                        }\n                    }\n                    return _results;\n                };\n                checkElements(document.getElementsByTagName(\"div\"));\n                checkElements(document.getElementsByTagName(\"form\"));\n            }\n            _results = [];\n            for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n                dropzone = dropzones[_i];\n                if (Dropzone.optionsForElement(dropzone) !== false) {\n                    _results.push(new Dropzone(dropzone));\n                } else {\n                    _results.push(void 0);\n                }\n            }\n            return _results;\n        };\n\n        Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n        Dropzone.isBrowserSupported = function () {\n            var capableBrowser, regex, _i, _len, _ref;\n            capableBrowser = true;\n            if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n                if (!(\"classList\" in document.createElement(\"a\"))) {\n                    capableBrowser = false;\n                } else {\n                    _ref = Dropzone.blacklistedBrowsers;\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                        regex = _ref[_i];\n                        if (regex.test(navigator.userAgent)) {\n                            capableBrowser = false;\n                            continue;\n                        }\n                    }\n                }\n            } else {\n                capableBrowser = false;\n            }\n            return capableBrowser;\n        };\n\n        without = function (list, rejectedItem) {\n            var item, _i, _len, _results;\n            _results = [];\n            for (_i = 0, _len = list.length; _i < _len; _i++) {\n                item = list[_i];\n                if (item !== rejectedItem) {\n                    _results.push(item);\n                }\n            }\n            return _results;\n        };\n\n        camelize = function (str) {\n            return str.replace(/[\\-_](\\w)/g, function (match) {\n                return match.charAt(1).toUpperCase();\n            });\n        };\n\n        Dropzone.createElement = function (string) {\n            var div;\n            div = document.createElement(\"div\");\n            div.innerHTML = string;\n            return div.childNodes[0];\n        };\n\n        Dropzone.elementInside = function (element, container) {\n            if (element === container) {\n                return true;\n            }\n            while (element = element.parentNode) {\n                if (element === container) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        Dropzone.getElement = function (el, name) {\n            var element;\n            if (typeof el === \"string\") {\n                element = document.querySelector(el);\n            } else if (el.nodeType != null) {\n                element = el;\n            }\n            if (element == null) {\n                throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n            }\n            return element;\n        };\n\n        Dropzone.getElements = function (els, name) {\n            var e, el, elements, _i, _j, _len, _len1, _ref;\n            if (els instanceof Array) {\n                elements = [];\n                try {\n                    for (_i = 0, _len = els.length; _i < _len; _i++) {\n                        el = els[_i];\n                        elements.push(this.getElement(el, name));\n                    }\n                } catch (_error) {\n                    e = _error;\n                    elements = null;\n                }\n            } else if (typeof els === \"string\") {\n                elements = [];\n                _ref = document.querySelectorAll(els);\n                for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n                    el = _ref[_j];\n                    elements.push(el);\n                }\n            } else if (els.nodeType != null) {\n                elements = [els];\n            }\n            if (!((elements != null) && elements.length)) {\n                throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n            }\n            return elements;\n        };\n\n        Dropzone.confirm = function (question, accepted, rejected) {\n            if (window.confirm(question)) {\n                return accepted();\n            } else if (rejected != null) {\n                return rejected();\n            }\n        };\n\n        Dropzone.isValidFile = function (file, acceptedFiles) {\n            var baseMimeType, mimeType, validType, _i, _len;\n            if (!acceptedFiles) {\n                return true;\n            }\n            acceptedFiles = acceptedFiles.split(\",\");\n            mimeType = file.type;\n            baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n            for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n                validType = acceptedFiles[_i];\n                validType = validType.trim();\n                if (validType.charAt(0) === \".\") {\n                    if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n                        return true;\n                    }\n                } else if (/\\/\\*$/.test(validType)) {\n                    if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n                        return true;\n                    }\n                } else {\n                    if (mimeType === validType) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n            jQuery.fn.dropzone = function (options) {\n                return this.each(function () {\n                    return new Dropzone(this, options);\n                });\n            };\n        }\n\n        if (typeof module !== \"undefined\" && module !== null) {\n            module.exports = Dropzone;\n        } else {\n            window.Dropzone = Dropzone;\n        }\n\n        Dropzone.ADDED = \"added\";\n\n        Dropzone.QUEUED = \"queued\";\n\n        Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n        Dropzone.UPLOADING = \"uploading\";\n\n        Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n        Dropzone.CANCELED = \"canceled\";\n\n        Dropzone.ERROR = \"error\";\n\n        Dropzone.SUCCESS = \"success\";\n\n\n        /*\n        \n        Bugfix for iOS 6 and 7\n        Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n        based on the work of https://github.com/stomita/ios-imagefile-megapixel\n         */\n\n        detectVerticalSquash = function (img) {\n            var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n            iw = img.naturalWidth;\n            ih = img.naturalHeight;\n            canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = ih;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            data = ctx.getImageData(0, 0, 1, ih).data;\n            sy = 0;\n            ey = ih;\n            py = ih;\n            while (py > sy) {\n                alpha = data[(py - 1) * 4 + 3];\n                if (alpha === 0) {\n                    ey = py;\n                } else {\n                    sy = py;\n                }\n                py = (ey + sy) >> 1;\n            }\n            ratio = py / ih;\n            if (ratio === 0) {\n                return 1;\n            } else {\n                return ratio;\n            }\n        };\n\n        drawImageIOSFix = function (ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n            var vertSquashRatio;\n            vertSquashRatio = detectVerticalSquash(img);\n            return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n        };\n\n\n        /*\n         * contentloaded.js\n         *\n         * Author: Diego Perini (diego.perini at gmail.com)\n         * Summary: cross-browser wrapper for DOMContentLoaded\n         * Updated: 20101020\n         * License: MIT\n         * Version: 1.2\n         *\n         * URL:\n         * http://javascript.nwbox.com/ContentLoaded/\n         * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n         */\n\n        contentLoaded = function (win, fn) {\n            var add, doc, done, init, poll, pre, rem, root, top;\n            done = false;\n            top = true;\n            doc = win.document;\n            root = doc.documentElement;\n            add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n            rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n            pre = (doc.addEventListener ? \"\" : \"on\");\n            init = function (e) {\n                if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n                    return;\n                }\n                (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n                if (!done && (done = true)) {\n                    return fn.call(win, e.type || e);\n                }\n            };\n            poll = function () {\n                var e;\n                try {\n                    root.doScroll(\"left\");\n                } catch (_error) {\n                    e = _error;\n                    setTimeout(poll, 50);\n                    return;\n                }\n                return init(\"poll\");\n            };\n            if (doc.readyState !== \"complete\") {\n                if (doc.createEventObject && root.doScroll) {\n                    try {\n                        top = !win.frameElement;\n                    } catch (_error) { }\n                    if (top) {\n                        poll();\n                    }\n                }\n                doc[add](pre + \"DOMContentLoaded\", init, false);\n                doc[add](pre + \"readystatechange\", init, false);\n                return win[add](pre + \"load\", init, false);\n            }\n        };\n\n        Dropzone._autoDiscoverFunction = function () {\n            if (Dropzone.autoDiscover) {\n                return Dropzone.discover();\n            }\n        };\n\n        contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n    }).call(this);</script><script type=\"text/javascript\">/*** Temporary text filler function. Remove when deploying template. ***/\nvar gibberish = [\"This is sample text\", \"Welcome to our site\", \"Demonstration content\"]\nfunction filltext(words) {\n    for (var i = 0; i < words; i++)\n        document.write(gibberish[Math.floor(Math.random() * 3)] + \" \")\n}\n\nfunction sw(v) { window.open(v, '_blank'); return false; }\nfunction ws(v) { window.open(v, '_blank'); return true; }\n\nfunction showdetails(p, n, w, h) {\n    showwin(p, n, w, h, 0);\n}\n\nfunction showwin(p, n, w, h, scroll) {\n    var s = '';\n    var width = w;\n    var height = h;\n    s = s + 'left=' + (screen.availWidth - width) / 2 + ',';\n    s = s + 'top=' + (screen.availHeight - height) / 2 + ',';\n    s = s + 'width=' + width + ',height=' + height + ',toolbar=0,location=0,status=0,menubar=0,scrollbars=' + 1 + ',resizable=1';\n    w = window.open(p, n, s);\n    w.focus();\n}\n\nfunction capsDetect(e) {\n    var CapsMess = 'ATTENTION!\\nYou have CAPS lock on! If you intend to use capital letters - please use SHIFT key to avoid this message\\nPassword is case sensitive!';\n    if (!e) { e = window.event; } if (!e) { return; }\n    var theKey = 0;\n    if (e.which) { theKey = e.which; } //Netscape 4+, etc.\n    else if (e.keyCode) { theKey = e.keyCode; } //Internet Explorer, etc.\n    else if (e.charCode) { theKey = e.charCode } //Gecko - probably not needed\n    var theShift = false;\n    if (e.shiftKey) { theShift = e.shiftKey; } //Internet Explorer, etc.\n    else if (e.modifiers) { //Netscape 4\n        if (e.modifiers & 4) { //bitwise AND\n            theShift = true;\n        }\n    }\n    if (theKey > 64 && theKey < 91 && !theShift) {\n        alert(CapsMess);\n    }\n    else if (theKey > 96 && theKey < 123 && theShift) {\n        alert(CapsMess);\n    }\n}\n\nfunction OpenEditor(idname) {\n    popUp = window.open('editor.htm?formname=' + document.forms[0].name +\n\t\t'&id=' + idname,\n\t\t'popupeditor',\n\t\t'width=600,height=450,left=100,top=100,toolbar=0,location=0,status=0,menubar=0,scrollbars=1,resizable=1');\n}\n\nfunction winopen(p) {\n    var s = s + 'top=50,left=50,toolbar=0,location=0,status=0,menubar=0,scrollbars=1,resizable=1';\n    w = window.open(p, '_blank', s);\n    w.focus();\n}\n\n\nfunction getBrowserInfo() {\n    var t, v = undefined;\n    if (window.opera) t = 'Opera';\n    else if (document.all) {\n        t = 'IE';\n        var nv = navigator.appVersion;\n        var s = nv.indexOf('MSIE') + 5;\n        v = nv.substring(s, s + 1);\n    }\n    else if (navigator.appName) t = 'Netscape';\n    return { type: t, version: v };\n}\n\nfunction bookmark(a) {\n    var url = window.document.location;\n    var title = window.document.title;\n    var b = getBrowserInfo();\n\n    if (b.type == 'IE' && 9 > b.version && b.version >= 4) window.external.AddFavorite(url, title);\n    else if (b.type == 'Opera') {\n        a.href = url;\n        a.rel = \"sidebar\";\n        a.title = url + ',' + title;\n        return true;\n    }\n    else if (b.type == \"Netscape\") window.sidebar.addPanel(title, url, \"\");\n    else alert(\"Нажмите CTRL-D, чтобы добавить страницу в закладки.\");\n    return false;\n}\n\nfunction homepage(a) {\n\n\n    if (document.all) {\n        a.style.behavior = 'url(#default#homepage)';\n        a.setHomePage('http://www.aktodoma.ru/');\n\n    }\n    else\n        if (!document.layers) {\n            netscape.security.PrivilegeManager.enablePrivilege(\"UniversalPreferencesWrite\");\n            navigator.preference(\"browser.startup.homepage\", \"http://www.aktodoma.ru/\");\n        }\n\n    return false;\n}\n\nfunction EFindObj(n, d) {\n    var p, i, x; if (!d) d = document; if ((p = n.indexOf(\"?\")) > 0 && parent.frames.length) {\n        d = parent.frames[n.substring(p + 1)].document; n = n.substring(0, p);\n    }\n    if (!(x = d[n]) && d.all) x = d.all[n]; for (i = 0; !x && i < d.forms.length; i++) x = d.forms[i][n];\n    for (i = 0; !x && d.layers && i < d.layers.length; i++) x = EFindObj(n, d.layers[i].document);\n    if (!x && document.getElementById) x = document.getElementById(n); return x;\n}\n\nfunction Visio(el, vis) { var v, ob; if ((ob = EFindObj(el)) != null) { v = vis; if (ob.style) { ob = ob.style; v = (v == 'show') ? 'block' : (v = 'hide') ? 'none' : v; } ob.display = v; } }\n\nfunction ToogleVisio(el, ic) {\n    var o = EFindObj(el);\n    var c = EFindObj(ic);\n\n\n    if (o && c) {\n        if (o.style.display == 'block') {\n            Visio(el, 'hide');\n            c.src = '/img/iconPlus.gif';\n        }\n        else {\n            Visio(el, 'show');\n            c.src = '/img/iconMinus.gif';\n        }\n    }\n\n}</script><script type=\"text/javascript\">function showpageroles(n) {\n    showwin('/cms/page_roles_m?id='+n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction open_full_window(link){\nvar params = [\n    'height='+screen.height,\n    'width='+screen.width,\n    'fullscreen=yes' // only works in IE, but here for completeness\n].join(',');\n     // and any other options from\n     // https://developer.mozilla.org/en/DOM/window.open\n\nvar popup = window.open(link, 'popup_window', params); \npopup.moveTo(0,0);\nreturn false;\n}\nfunction showblockmenu(n) {\n    showactivewin('/cms/block_menu?id='+n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showclientroles(n) {\n    showwin('/cms/client_roles_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showtransaction(n) {\n    showwin('/cms/transactions?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showtransactionhistory(n) {\n    showwin('/cms/transactionhistory?OrderId=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showclientcountries(n) {\n    showwin('/cms/clients_countries_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showclientSectors(n) {\n    showwin('/cms/clients_sectors_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showclientclient(n) {\n    showwin('/cms/clients_clients_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showmenuroles(n) {\n    showwin('/cms/menu_roles_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showrevroles(n) {\n    showwin('/cms/revStatus_roles_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showclientlnkRevStNotif(n) {\n    showwin('/cms/clients_revStatusNotif_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showBlocksForEvents(n) {\n    showwin('/cms/ms_events_blocks_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showFilesForEvents(n) {\n    showwin('/cms/ms_events_files_m?id=' + n, '_blank',1000, 700, 1);\n    return void (0);\n}\n\nfunction showScheduleForEvents(n) {\n    showwin('/cms/ms_events_schedule_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showContProf(n) {\n    showwin('/cms/country_profile?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showScheduleEvent(n) {\n    showwin('/cms/ms_event_schedule?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showJobDetails(n) {\n    showwin('/job_details?id=' + n, '_blank', 1000, 500, 1);\n    return void (0);\n}\n\nfunction showJobClients(n) {\n    showwin('/cms/car_jobs_clients?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showMortgageCalculator() {\n    showwin('/mortgage_calculator.htm', '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showLoanCalculator() {\n    showwin('/loan_calculator.htm', '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showHowToUseATM() {\n    showwin('/howtouseatm', '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showHowToUseDebitCard() {\n    showwin('/howtousedebitcard', '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showSecCountry(n) {\n    showwin('/cms/sectors_countries_m?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showQuizSettings(n) {\n    showwin('/cms/Quiz_settings?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showQuizQ(n) {\n    showwin('/cms/Quiz_questions?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showQuizA(n) {\n    showwin('/cms/Quiz_answers?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showMLHistory(pn,cn) {\n    showwin('/cms/multilang_history?pn=' + pn + '&cn=' + cn, '_blank', 1000, 700, 1);\n    return void (0);\n}\nfunction showBranchAopAdmin(pn, cn) {\n    showwin('/cms/clients_branches_m?id=' + pn + '&cid=' + cn, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction showCarClient(n) {\n    showwin('/cms/car_client?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction unlockUser(id) {\n    $.ajax({\n        method: \"GET\",\n        url: \"/cms/unlock_user\",\n        data: { id: id.toString() }\n    }).done(function (msg) { alert(\"Unlocked successfully!\"); });\n}\n\nfunction restorePassword(id) {\n    if (confirm(\"Do you really want to restore password?\")) {\n        $.ajax({\n            url: \"/cms/restore_password\",\n            method: \"GET\",\n            data: { id: id.toString() }\n        }).done(function (msg) { alert(\"Restored successfully!\"); });\n    }\n}\nfunction showUsersTransactionDetails(n) {\n    showwin('/cms/UsersTransactionDetails?id=' + n, '_blank', 1000, 700, 1);\n    return void (0);\n}\n\nfunction downloadActivation(n) {\n    showwin('/personal-banking/everyday-banking/aop-activation-download?id='+n, '_blank', 1000, 700, 1);\n    return void (0);\n}</script><script type=\"text/javascript\">var aznValidation = {\n        parent: \"[data-azn-validate]\",\n        setListeners: function () {\n            function __doPostBack(eventTarget, eventArgument) {\n                document.Form1.__EVENTTARGET.value = eventTarget;\n                document.Form1.__EVENTARGUMENT.value = eventArgument;\n                document.Form1.submit();\n            }\n            var _$parent = $(this.parent);\n            _$parent.find(\"[data-check-validate]\").each(function () {\n                if ($(this).is(\":submit\")) { //check if button is submit\n                    var _$closestForm = $(this).parents(\"form\");\n                    var _$eventTarget = $(this);\n                    _$eventTarget.click(function () {\n                        if (aznValidation.validate(_$eventTarget)) {\n                            __doPostBack(_$eventTarget.attr(\"id\"), '');\n                        }\n                        return false;\n                    })\n                }\n            });\n            if (_$parent.is(\"[data-on-blur]\")) {\n                _$parent.find(\"[required],[pattern]\").blur(function () {\n                    aznValidation.validateInput($(this));\n                });\n                _$parent.find(\"[required]:checkbox\").change(function () {\n                    aznValidation.validateInput($(this));\n                });\n            }\n        },\n        patterns: {\n            alpha: /^[a-zA-Z]+$/,\nalpha_space:/^[a-zA-Z\\s]+$/,\n            alpha_numeric: /^[a-zA-Z0-9]+$/,\n            integer: /^[-+]?\\d+$/,\n            number: /^[-+]?[1-9]\\d*$/,\n            // amex, visa, diners\n            card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n            cvv: /^([0-9]){3,4}$/,\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n            email: /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\n            url: /(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?/,\n            // abc.de\n            domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}$/,\n            datetime: /([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))/,\n            // YYYY-MM-DD\n            date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))/,\n            // HH:MM:SS\n            time: /(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}/,\n            dateISO: /\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}/,\n//DD.MM.YYY\nday_month_year: /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/,\n            // MM/DD/YYYY\n            month_day_year: /(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.](19|20)\\d\\d/,\n            // #FFF or #FFFFFF\n            color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n            names: /^[A-Za-z]{2,}([\\-\\']{1}[A-Za-z]+)?$/\n        },\n        setInvalid: function (_$elem) {\n            _$elem.addClass(\"is-invalid-input\");\n            _$elem.attr(\"is-invalid-input\", \"\");\n\n            if (_$elem.is(\":checkbox\")) {\n                _$elem.next(\"label\").addClass(\"is-invalid-input\");\n                _$elem.next(\"label\").attr(\"is-invalid-input\", \"\");\n            }\n        },\n        setNormal: function (_$elem) {\n            //clear all boxes\n            if (_$elem.is(this.parent)) {\n                _$elem.find(\"[is-invalid-input]\").removeClass(\"is-invalid-input\");\n                _$elem.find(\"[is-invalid-input]\").removeAttr(\"is-invalid-input\");\n            } else {\n                //clear just current\n                _$elem.removeClass(\"is-invalid-input\");\n                _$elem.removeAttr(\"is-invalid-input\");\n                if (_$elem.is(\":checkbox\")) {\n                    _$elem.next(\"label\").removeClass(\"is-invalid-input\");\n                    _$elem.next(\"label\").removeAttr(\"is-invalid-input\");\n                }\n            }\n        },\n        checkRequired: function (_$elem) {\n            //check data-equalto\n            //-----------------------------------------------------\n            if (_$elem.is(\"[data-equalto]\")) {\n                var _equalTo = $(\"#\" + _$elem.attr(\"data-equalto\"));\n                if (_$elem.val() !== _equalTo.val()) {\n                    aznValidation.setInvalid(_$elem);\n                }\n            }\n            //-----------------------------------------------------\n\n            //check selects\n            //----------------------------------------------------------\n            if (_$elem.is(\"select\")) {\n                if (_$elem.val() == \"\" || _$elem.val() < 0) {\n                    aznValidation.setInvalid(_$elem);\n                }\n                return true;\n            }\n            //--------------------------------------------------------------\n\n            //check checkbuttons\n            //--------------------------------------------------------------\n            if (_$elem.is(':checkbox')) {\n                if (!_$elem.is(':checked')) aznValidation.setInvalid(_$elem);\n                return true;\n            }\n            //--------------------------------------------------------------\n\n            //check else inputs and textarea\n            //--------------------------------------------------------------\n            if (_$elem.is(\"input\") || _$elem.is(\"textarea\")) {\n                if (_$elem.val() == \"\") aznValidation.setInvalid(_$elem);\n            }\n            //------------------------------------------------------------------------\n\n            //check captcha\n            //-----------------------------------------------------------------\n            if (_$elem.is(\"[data-recaptcha]\")) {\n\n                if (_$elem.find(\".g-recaptcha-response\").val() == \"\") aznValidation.setInvalid(_$elem);\n                return true;\n            }\n            //-----------------------------------------------------------------\n        },\n        checkPattern: function (_$elem) {\n            var pattern = _$elem.attr(\"pattern\"), //custom pattern\n                _$curValue = _$elem.val();\n            \n            //search pattern in list \n            if (Object.keys(aznValidation.patterns).indexOf(pattern) > -1) {\n                pattern = aznValidation.patterns[pattern];\n            }\n            if (_$curValue.search(pattern) == -1 && _$curValue != \"\") aznValidation.setInvalid(_$elem);\n        },\n        checkValidator: function (_$elem) {\n            if (!aznValidation.validators[_$elem.attr(\"data-validator\")](_$elem)) aznValidation.setInvalid(_$elem);\n        },\n        validateInput: function (_$elem) {\n            aznValidation.setNormal(_$elem);\n            if (_$elem.is(\"[required]\")) aznValidation.checkRequired(_$elem);\n            if (_$elem.is(\"[pattern]\")) aznValidation.checkPattern(_$elem);\n            if (_$elem.is(\"[data-validator]\")) aznValidation.checkValidator(_$elem);\n            return !(_$elem.is(\"[is-invalid-input]\"));\n        },\n        validate: function (_$target) {\n            //parrent block\n            var parentBlock = $(_$target).parents(this.parent);\n            //set for all is normal\n            aznValidation.setNormal(parentBlock);\n            //check just required\n            $(parentBlock).find(\"[required]\").each(function () {\n                aznValidation.checkRequired($(this));\n            });\n            //check with pattern\n            $(parentBlock).find(\"[pattern]\").each(function () {\n                aznValidation.checkPattern($(this));\n            });\n            aznValidation.getStatus = $(parentBlock).find(\"[is-invalid-input]\").length == 0;\n            return aznValidation.getStatus\n        },\n        getStatus: null,\n        validators: {}\n    }\n\n    $(document).ready(function () {\n        aznValidation.setListeners();\n    });</script><script type=\"text/javascript\">var aznMsg = {};\n    (function () {\n        aznMsg = {\n            fadeTime: 500,\n            delayTime: 4000,\n            margin: 3,\n            color: {\n                \"green\": \"#2ade73\",\n                \"red\": \"#ec5840\",\n                \"white\": \"#ffffff\"\n            },\n            typeOfMessage: null,\n            //create ladder of messages if they appear in the same time\n            setTop: function (_$margin) {\n                var _$self = this,\n                _$top  = 0;\n                $(\"body\").find(\"[data-azn-message]\").each(function () {\n                    var _$index = $(this).index(\"[data-azn-message]\");\n                        \n                    if (_$index == 0) {\n                        $(this).css(\"top\", _$top + \"px\");\n                    } else {\n                        $(this).css(\"top\", _$top + (_$index * _$self.margin) + \"px\");\n                    }\n                    _$top += $(this).height();\n                })\n            },\n            createMessage: function (message, color, callback) {\n                var _$type = this.typeOfMessage,\n                    _$self = this,\n                    _$color = this.color[color];\n\n                var _$form = $(\"<div/>\", {\n                    \"class\": \"aznMessage\",\n                    \"css\": {\n                        \"top\": \"\"\n                    }\n                });\n                _$form.attr(\"data-azn-message\", \"\");\n                var _$inner = $(\"<div/>\", {\n                    \"class\": \"inner\"\n                }).append($(\"<p/>\", {\n                    \"html\": message,\n                    \"css\": {\n                        \"color\": _$color\n                    }\n                }).prepend($(\"<i/>\", {\n                    \"class\": \"fa fa-comment-o msg-icon\"\n                })));\n                var _$backHover = $(\"<div/>\", {\n                    \"class\": \"back-hover\"\n                })\n                //default message, messageOk or messageFail\n                if (_$type == 0) {\n                    setTimeout(function () {\n                        _$self.removeMessage(_$form)\n                    }, _$self.delayTime)\n                }\n                //messageOkCancel\n                if (_$type == 1) {\n                    _$form.append(_$backHover)\n                    var _$confirmButton = $(\"<a/>\", {\n                        \"class\": \"button \" + color,\n                        \"text\": \"Ok\"\n                    }),\n                    _$cancelButton = $(\"<a/>\", {\n                        \"class\": \"button gray\",\n                        \"text\": \"Cancel\"\n                    });\n                    _$confirmButton.click(function () {\n                        callback(true);\n                        _$self.removeMessage(_$form);\n                    })\n                    _$cancelButton.click(function () {\n                        callback(false);\n                        _$self.removeMessage(_$form);\n                    })\n                    var _$row = $(\"<div/>\", {\n                        \"class\": \"clearfix text-right\"\n                    });\n                    _$row.append(_$confirmButton);\n                    _$row.append(_$cancelButton);\n                    _$inner.append(_$row);\n                }\n                _$form.append(_$inner).prependTo($(\"body\"));\n\n                this.setTop();\n                setTimeout(function () {\n                    _$form.fadeIn(_$self.fadeTime);\n                }, 100);\n            },\n            //delete message\n            removeMessage: function (_$form) {\n                var _$self = this;\n                _$form.fadeToggle(_$self.fadeTime, function () {\n                    _$form.remove();\n                    _$self.setTop();\n                });\n            },\n            //default message\n            msg: function (message) {\n                this.typeOfMessage = 0;\n                return this.createMessage(message, \"white\");\n            },\n            //success msg\n            msgOk: function (message) {\n                this.typeOfMessage = 0;\n                return this.createMessage(message, \"green\");\n            },\n            //error msg\n            msgFail: function (message) {\n                this.typeOfMessage = 0;\n                return this.createMessage(message, \"red\");\n            },\n            //ok or cancel dialog\n            msgOkCancel: function (message, callback) {\n                this.typeOfMessage = 1;\n                return this.createMessage(message, \"white\", callback);\n            }\n        }\n    }())</script><link rel=\"stylesheet\" type=\"text/css\" href=\"/App_Themes/www/dropzone.css\"><script type=\"text/javascript\">var aznValidation = {\n        parent: \"[data-azn-validate]\",\n        setListeners: function () {\n            function __doPostBack(eventTarget, eventArgument) {\n                document.Form1.__EVENTTARGET.value = eventTarget;\n                document.Form1.__EVENTARGUMENT.value = eventArgument;\n                document.Form1.submit();\n            }\n            var _$parent = $(this.parent);\n            _$parent.find(\"[data-check-validate]\").each(function () {\n                if ($(this).is(\":submit\")) { //check if button is submit\n                    var _$closestForm = $(this).parents(\"form\");\n                    var _$eventTarget = $(this);\n                    _$eventTarget.click(function () {\n                        if (aznValidation.validate(_$eventTarget)) {\n                            __doPostBack(_$eventTarget.attr(\"id\"), '');\n                        }\n                        return false;\n                    })\n                }\n            });\n            if (_$parent.is(\"[data-on-blur]\")) {\n                _$parent.find(\"[required],[pattern]\").blur(function () {\n                    aznValidation.validateInput($(this));\n                });\n                _$parent.find(\"[required]:checkbox\").change(function () {\n                    aznValidation.validateInput($(this));\n                });\n            }\n        },\n        patterns: {\n            alpha: /^[a-zA-Z]+$/,\nalpha_space:/^[a-zA-Z\\s]+$/,\n            alpha_numeric: /^[a-zA-Z0-9]+$/,\n            integer: /^[-+]?\\d+$/,\n            number: /^[-+]?[1-9]\\d*$/,\n            // amex, visa, diners\n            card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n            cvv: /^([0-9]){3,4}$/,\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n            email: /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\n            url: /(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?/,\n            // abc.de\n            domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}$/,\n            datetime: /([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))/,\n            // YYYY-MM-DD\n            date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))/,\n            // HH:MM:SS\n            time: /(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}/,\n            dateISO: /\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}/,\n//DD.MM.YYY\nday_month_year: /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/,\n            // MM/DD/YYYY\n            month_day_year: /(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.](19|20)\\d\\d/,\n            // #FFF or #FFFFFF\n            color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n            names: /^[A-Za-z]{2,}([\\-\\']{1}[A-Za-z]+)?$/\n        },\n        setInvalid: function (_$elem) {\n            _$elem.addClass(\"is-invalid-input\");\n            _$elem.attr(\"is-invalid-input\", \"\");\n\n            if (_$elem.is(\":checkbox\")) {\n                _$elem.next(\"label\").addClass(\"is-invalid-input\");\n                _$elem.next(\"label\").attr(\"is-invalid-input\", \"\");\n            }\n        },\n        setNormal: function (_$elem) {\n            //clear all boxes\n            if (_$elem.is(this.parent)) {\n                _$elem.find(\"[is-invalid-input]\").removeClass(\"is-invalid-input\");\n                _$elem.find(\"[is-invalid-input]\").removeAttr(\"is-invalid-input\");\n            } else {\n                //clear just current\n                _$elem.removeClass(\"is-invalid-input\");\n                _$elem.removeAttr(\"is-invalid-input\");\n                if (_$elem.is(\":checkbox\")) {\n                    _$elem.next(\"label\").removeClass(\"is-invalid-input\");\n                    _$elem.next(\"label\").removeAttr(\"is-invalid-input\");\n                }\n            }\n        },\n        checkRequired: function (_$elem) {\n            //check data-equalto\n            //-----------------------------------------------------\n            if (_$elem.is(\"[data-equalto]\")) {\n                var _equalTo = $(\"#\" + _$elem.attr(\"data-equalto\"));\n                if (_$elem.val() !== _equalTo.val()) {\n                    aznValidation.setInvalid(_$elem);\n                }\n            }\n            //-----------------------------------------------------\n\n            //check selects\n            //----------------------------------------------------------\n            if (_$elem.is(\"select\")) {\n                if (_$elem.val() == \"\" || _$elem.val() < 0) {\n                    aznValidation.setInvalid(_$elem);\n                }\n                return true;\n            }\n            //--------------------------------------------------------------\n\n            //check checkbuttons\n            //--------------------------------------------------------------\n            if (_$elem.is(':checkbox')) {\n                if (!_$elem.is(':checked')) aznValidation.setInvalid(_$elem);\n                return true;\n            }\n            //--------------------------------------------------------------\n\n            //check else inputs and textarea\n            //--------------------------------------------------------------\n            if (_$elem.is(\"input\") || _$elem.is(\"textarea\")) {\n                if (_$elem.val() == \"\") aznValidation.setInvalid(_$elem);\n            }\n            //------------------------------------------------------------------------\n\n            //check captcha\n            //-----------------------------------------------------------------\n            if (_$elem.is(\"[data-recaptcha]\")) {\n\n                if (_$elem.find(\".g-recaptcha-response\").val() == \"\") aznValidation.setInvalid(_$elem);\n                return true;\n            }\n            //-----------------------------------------------------------------\n        },\n        checkPattern: function (_$elem) {\n            var pattern = _$elem.attr(\"pattern\"), //custom pattern\n                _$curValue = _$elem.val();\n            \n            //search pattern in list \n            if (Object.keys(aznValidation.patterns).indexOf(pattern) > -1) {\n                pattern = aznValidation.patterns[pattern];\n            }\n            if (_$curValue.search(pattern) == -1 && _$curValue != \"\") aznValidation.setInvalid(_$elem);\n        },\n        checkValidator: function (_$elem) {\n            if (!aznValidation.validators[_$elem.attr(\"data-validator\")](_$elem)) aznValidation.setInvalid(_$elem);\n        },\n        validateInput: function (_$elem) {\n            aznValidation.setNormal(_$elem);\n            if (_$elem.is(\"[required]\")) aznValidation.checkRequired(_$elem);\n            if (_$elem.is(\"[pattern]\")) aznValidation.checkPattern(_$elem);\n            if (_$elem.is(\"[data-validator]\")) aznValidation.checkValidator(_$elem);\n            return !(_$elem.is(\"[is-invalid-input]\"));\n        },\n        validate: function (_$target) {\n            //parrent block\n            var parentBlock = $(_$target).parents(this.parent);\n            //set for all is normal\n            aznValidation.setNormal(parentBlock);\n            //check just required\n            $(parentBlock).find(\"[required]\").each(function () {\n                aznValidation.checkRequired($(this));\n            });\n            //check with pattern\n            $(parentBlock).find(\"[pattern]\").each(function () {\n                aznValidation.checkPattern($(this));\n            });\n            aznValidation.getStatus = $(parentBlock).find(\"[is-invalid-input]\").length == 0;\n            return aznValidation.getStatus\n        },\n        getStatus: null,\n        validators: {}\n    }\n\n    $(document).ready(function () {\n        aznValidation.setListeners();\n    });</script><link href=\"https://fonts.googleapis.com/css?family=Roboto:400,100,300,500,700\" rel=\"stylesheet\" type=\"text/css\"><link href=\"App_Themes/www/app.min.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/www/dropzone.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/www/dropzone.min.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/www/EcoAllStyles.min.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/www/foundation-datepicker.min.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/www/real-person.css\" type=\"text/css\" rel=\"stylesheet\"><title>\n\n</title><script type=\"text/javascript\">\n\n    $(\"meta[property='og:url']\").attr('content', window.location.href);\n    $(\"meta[property='og:title']\").attr('content', document.getElementsByTagName(\"title\")[0].text);\n\n    $(\"meta[name='twitter:domain']\").attr('content', window.location.href);\n    $(\"meta[name='twitter:title']\").attr('content', document.getElementsByTagName(\"title\")[0].text);\n\n    var top_show = 350;\n    var delay = 1000;\n    $(document).ready(function () {\n        $(window).scroll(function () {\n            if ($(this).scrollTop() > top_show) $('#ToTop').fadeIn();\n            else $('#ToTop').fadeOut();\n        });\n        $('#ToTop').click(function () {\n            $('body, html').animate({\n                scrollTop: 0\n            }, delay);\n        });\n    });\n    \n</script><meta class=\"foundation-mq\"></head>\n\n\n<body style=\"margin-top: 363px;\">\n    <form method=\"post\" action=\"/personal-banking\" id=\"form1\" novalidate=\"\">\n<div class=\"aspNetHidden\">\n<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\">\n<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\">\n<input type=\"hidden\" name=\"__LASTFOCUS\" id=\"__LASTFOCUS\" value=\"\">\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"\">\n</div>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nvar theForm = document.forms['form1'];\nif (!theForm) {\n    theForm = document.form1;\n}\nfunction __doPostBack(eventTarget, eventArgument) {\n    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {\n        theForm.__EVENTTARGET.value = eventTarget;\n        theForm.__EVENTARGUMENT.value = eventArgument;\n        theForm.submit();\n    }\n}\n//]]>\n</script>\n\n\n<script src=\"/WebResource.axd?d=kvPHxMrSi83tsxN424zxYhy6ocyfNVcP7CdhM0bc7c5dUaVnOwoHsXZLPzQathP3a8Y3i8nvsX3ZDRWR-Oit9qot93E1&amp;t=635823488460000000\" type=\"text/javascript\"></script>\n\n<div class=\"aspNetHidden\">\n\n\t<input type=\"hidden\" name=\"__VIEWSTATEGENERATOR\" id=\"__VIEWSTATEGENERATOR\" value=\"9D456832\">\n\t<input type=\"hidden\" name=\"__SCROLLPOSITIONX\" id=\"__SCROLLPOSITIONX\" value=\"0\">\n\t<input type=\"hidden\" name=\"__SCROLLPOSITIONY\" id=\"__SCROLLPOSITIONY\" value=\"0\">\n</div>\n        \n        \n\n<section class=\"PencilParrent HeadPencil\">\n    \n</section>\n<section class=\"PencilParrent HeadPencilEdit\">\n    \n</section>\n\n        \n        <div id=\"all\">\n            \n\n<div id=\"chatholder\" data-no-used=\"\">\n    <div id=\"live-chat-popup\">\n        <p>Our team members are here to help, get in touch</p>\n        <a class=\"button ecogreen\" data-open=\"pnl_chat_frame\"><i class=\"bts bt-comments\"></i>Live Chat</a>\n        <div id=\"close-chat\"><i class=\"btl bt-times\"></i></div>\n    </div>\n</div>\n<div class=\"hidden modal_panel\" id=\"pnl_chat_frame\" data-modal-panel=\"\">\n        <div class=\"inner\">\n            <button class=\"close-button\" data-close=\"\" aria-label=\"\" type=\"button\">\n                                <span aria-hidden=\"true\">×</span>\n            </button>\n            <iframe src=\"https://ecobank-prod.custhelp.com/app/chat/chat_launch/\" scrolling=\"auto\" frameborder=\"0\" style=\"width: 100%;height:368px;\">\n\n            </iframe>\n        </div>\n    </div>\n<script>\n    $(document).ready(function () {\n        var top_show = 350;\n        $(window).scroll(function () {\n            if ($(this).scrollTop() > top_show && $(\"#chatholder[data-no-used]\").length>0) {\n                $(\"#chatholder\").fadeIn();\n            }\n        });\n        $(\"#close-chat\").click(function () {\n            $(\"#chatholder\").removeAttr(\"data-no-used\");\n            $(\"#chatholder\").fadeOut();\n        });\n    });\n</script>\n            \n            <script type=\"text/javascript\">var trackOutboundLink = function (url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n            'transport': 'beacon',\n            'hitCallback': function () {\n                console.log(\"ga\");\n                 var open = window.open(url);\n                    if (open == null || typeof (open) == 'undefined') document.location.href = url;\n            }\n        });\n    }</script>\n\n<header id=\"header\">\n    <div id=\"top1_panel_choose_country\" class=\"country-choose\">\n\t\n        <div class=\"inner\">\n            <div class=\"row\">\n                <div class=\"columns small-12\">\n                    <h1>Welcome to Ecobank</h1>\n                    <p><strong>Please select a country below:</strong></p>\n                    <div class=\"row\">\n                        <div class=\"columns xsmall-7 large-12\">\n                            <span class=\"show-for-sr\">Please select a country below</span>\n                            <select name=\"ctl00$top1$dd_first_country_pick\" id=\"top1_dd_first_country_pick\" class=\"custom-select\">\n\t\t<option value=\"-1\">Select one</option>\n\t\t<option selected=\"selected\" value=\"ZZ\">International</option>\n\t\t<option value=\"BJ\">Benin</option>\n\t\t<option value=\"BF\">Burkina Faso</option>\n\t\t<option value=\"BI\">Burundi</option>\n\t\t<option value=\"CF\">C African Republic</option>\n\t\t<option value=\"CM\">Cameroon</option>\n\t\t<option value=\"CV\">Cape Verde</option>\n\t\t<option value=\"TD\">Chad</option>\n\t\t<option value=\"CG\">Congo</option>\n\t\t<option value=\"CI\">Cote d'ivoire</option>\n\t\t<option value=\"CK\">D.R.Congo</option>\n\t\t<option value=\"GQ\">Equatorial Guinea</option>\n\t\t<option value=\"GA\">Gabon</option>\n\t\t<option value=\"GH\">Ghana</option>\n\t\t<option value=\"GN\">Guinea Conakry</option>\n\t\t<option value=\"GW\">Guinea-Bissau</option>\n\t\t<option value=\"KE\">Kenya</option>\n\t\t<option value=\"LR\">Liberia</option>\n\t\t<option value=\"MW\">Malawi</option>\n\t\t<option value=\"ML\">Mali</option>\n\t\t<option value=\"MZ\">Mozambique</option>\n\t\t<option value=\"NE\">Niger</option>\n\t\t<option value=\"NG\">Nigeria</option>\n\t\t<option value=\"RW\">Rwanda</option>\n\t\t<option value=\"ST\">Sao Tome &amp; Principe</option>\n\t\t<option value=\"SN\">Senegal</option>\n\t\t<option value=\"SL\">Sierra Leone</option>\n\t\t<option value=\"SD\">South Sudan</option>\n\t\t<option value=\"TZ\">Tanzania</option>\n\t\t<option value=\"GM\">The Gambia</option>\n\t\t<option value=\"TG\">Togo</option>\n\t\t<option value=\"UG\">Uganda</option>\n\t\t<option value=\"ZM\">Zambia</option>\n\t\t<option value=\"ZW\">Zimbabwe</option>\n\n\t</select>\n                            <p class=\"bottom-text\">\n                                To read our Terms &amp; Conditions, <a href=\"/personal-banking/terms-of-use\" target=\"_blank\"><strong>Click Here</strong></a>.\n                            <br>\n                                <input id=\"top1_cb_remember_country\" type=\"checkbox\" name=\"ctl00$top1$cb_remember_country\"><label for=\"top1_cb_remember_country\">Remember settings</label>\n                            </p>\n                        </div>\n                        <div class=\"columns xsmall-5 large-12 \">\n                            <input type=\"button\" name=\"ctl00$top1$b_select_country\" value=\"Confirm\" onclick=\"javascript:__doPostBack('ctl00$top1$b_select_country','')\" id=\"top1_b_select_country\" class=\"button\">\n                        </div>\n                    </div>\n                    \n            </div>\n        </div>\n    </div>\n        <script>\n            $(document).ready(function () {\n                var sizeMass = [\"xsmall\", \"small\", \"xmedium\", \"medium\"];\n                function setMargin() {\n                    var _$currentSize = Foundation.MediaQuery.current;\n                    if (sizeMass.indexOf(_$currentSize) > -1) {\n                        $(\"body\").css(\"margin-top\", $(\"header\").innerHeight())\n                    } else {\n                        $(\"body\").css(\"margin-top\", \"0\")\n                    }\n                }\n                setTimeout(function () {\n                    setMargin()\n                },100);\n                $(window).resize(function () {\n                    setTimeout(function () {\n                        setMargin()\n                    }, 100);\n                });\n            });\n        </script>\n\n</div>\n    <div id=\"top1_panel_header\">\n\t\n        <!-- top-block-1 -->\n        <div class=\"show-for-large first-top-menu\">\n            <div class=\"row top-menu\">\n                <div class=\"large-8 columns global-menu vertical-align\">\n                    \n    <ul class=\"menu \">\n    \n        <li class=\"active\"><a target=\"_self\" href=\"/\">Personal Banking</a></li><li><a target=\"_self\" href=\"/commercial-banking\">Commercial Banking</a></li><li><a target=\"_self\" href=\"/corporate-investment-banking\">Corporate and Investment Banking</a></li><li><a target=\"_self\" href=\"/group\">Group</a></li>\n\n    </ul>\n    \n\n                </div>\n                <div class=\"large-4 columns social vertical-align\">\n                    <div class=\"social-links vertical-align-inside\">\n                        <span class=\"follow-us\"><a href=\"/group/news-and-media/social-media\" target=\"_blank\">Follow us</a></span>\n                        \n\n<a href=\"https://www.youtube.com/user/EcobankGroup\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"ycm6sp-tooltip\" aria-describedby=\"vd0psr-tooltip\" data-yeti-box=\"vd0psr-tooltip\" data-toggle=\"vd0psr-tooltip\" data-resize=\"vd0psr-tooltip\"><span class=\"fab fab-youtube\"></span></a>\n<a href=\"https://www.facebook.com/EcobankGroup/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"386md3-tooltip\" aria-describedby=\"vx6jr6-tooltip\" data-yeti-box=\"vx6jr6-tooltip\" data-toggle=\"vx6jr6-tooltip\" data-resize=\"vx6jr6-tooltip\"><span class=\"fab fab-facebook-alt\"></span></a>\n<a href=\"https://twitter.com/GroupEcobank\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"5ns975-tooltip\" aria-describedby=\"sfqdqm-tooltip\" data-yeti-box=\"sfqdqm-tooltip\" data-toggle=\"sfqdqm-tooltip\" data-resize=\"sfqdqm-tooltip\"><span class=\"fab fab-twitter\"></span></a>\n<a href=\"https://www.instagram.com/ecobank_group/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"yijlll-tooltip\" aria-describedby=\"ccd0jy-tooltip\" data-yeti-box=\"ccd0jy-tooltip\" data-toggle=\"ccd0jy-tooltip\" data-resize=\"ccd0jy-tooltip\"><span class=\"fab fab-instagram\"></span></a>\n<a href=\"https://www.linkedin.com/in/ecobank-group-26a13447\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"chrh2x-tooltip\" aria-describedby=\"kbjejx-tooltip\" data-yeti-box=\"kbjejx-tooltip\" data-toggle=\"kbjejx-tooltip\" data-resize=\"kbjejx-tooltip\"><span class=\"fab fab-linkedin-alt\"></span></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- top-block-2 -->\n        <div class=\"row slidebox-top clearfix hide-for-large\" id=\"slidebox-top-login\" data-top-open=\"\">\n            <div class=\"small-12 columns\">\n                <div class=\"log-on-title\">\n                    <p><i class=\"btl bt-lock\"></i>Login to Internet Banking</p>\n                </div>\n                <div class=\"log-on-buttons\">\n                    \n                    <a id=\"top1_slidebox_top_login_omni\" class=\"button\" href=\"https://omni.ecobank.com/GCPCW/index.jsp\" target=\"_blank\">Omni</a>\n                    \n                </div>\n            </div>\n        </div>\n        <div class=\"row slidebox-top clearfix hide-for-large\" id=\"slidebox-top-contact\" data-top-open=\"\">\n            <div class=\"small-12 columns\">\n                <div class=\"log-on-title\">\n                    <p><i class=\"btl bt-phone\"></i> Contact</p>\n                </div>\n                <div class=\"log-on-buttons\">\n                    <a id=\"top1_slidebox_top_contact_1\" class=\"button\" href=\"/personal-banking/contact-us\">Get in Touch</a>\n                    <a id=\"top1_slidebox_top_contact_2\" class=\"button\" href=\"/personal-banking/contact-us/locator\">Find a Service</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"top-branding-switches\">\n            <div class=\"row\">\n                <div class=\"small-4 columns branding vertical-align\">\n                    <a id=\"top1_img_logo\" class=\"vertical-align-inside\" alternatetext=\"Ecobank\" href=\"/\"><img id=\"top1_img_logo_pic\" class=\" classic-en\" src=\"/img/eco/eco-logo-svg.svg\"></a>\n                </div>\n                <div class=\"small-8 columns switches vertical-align\">\n                    <div class=\"top2menu vertical-align-inside\">\n                        <div class=\"top-toogle hide-for-large\">\n                            \n                            <div class=\"mobile-menu\" id=\"mobile-menu\" data-dropdown=\"\">\n                                <div class=\"row\">\n                                    <div class=\"columns small-12\">\n                                        <nav>\n                                            \n<div class=\"is-drilldown\" style=\"height: 460.5px; width: 752px;\"><ul class=\"vertical menu\" data-drilldown=\"cce7kf-drilldown\" role=\"menubar\">\n    <li role=\"menuitem\">\n        <a id=\"top1_drilldown_mobile_hl_home\" href=\"/personal-banking\" tabindex=\"0\">Home</a>\n    </li>\n    <li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Everyday Banking \"><a target=\"_self\">Everyday Banking </a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking\">Everyday Banking</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Current Accounts\"><a target=\"_self\">Current Accounts</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts\">Current Accounts</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts/classic\">Classic Current Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts/advantage\">Advantage Current Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts/premier\">Premier Current Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts/diaspora\">Diaspora Current Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts/student\">Student Current Account</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Savings Accounts\"><a target=\"_self\">Savings Accounts</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts\">Savings Accounts</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/ecobank\">Ecobank Savings Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/classic\">Classic Savings Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/advantage\">Advantage Savings Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/premier\">Premier Savings Account</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Student Savings Account\"><a target=\"_self\">Student Savings Account</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/student\">Student Savings Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/junior-saver\">Junior Saver Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/savings-accounts/my-first\">MyFirst Account</a></li></ul></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/e-account\">e-Account</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards\">Cards</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/loans\">Loans </a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/investment-solutions\">Investment Solutions</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/bancassurance\">Bancassurance</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/everyday-banking/apply\">Apply for an account or service</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Payments &amp; Transfers\"><a target=\"_self\">Payments &amp; Transfers</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/payments-transfers\">Payments &amp; Transfers</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/payments-transfers/rapidtransfer\">Rapidtransfer</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/payments-transfers/foreign-exchange\">Foreign Exchange</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile\">Ecobank Mobile</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Ways to Bank\"><a target=\"_self\">Ways to Bank</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank\">Ways to Bank</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Ecobank Mobile\"><a target=\"_self\">Ecobank Mobile</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile\">Ecobank Mobile</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobilemoney\">MobileMoney</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-ussd\">Mobile Banking via USSD</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Mobile Banking via App\"><a target=\"_self\">Mobile Banking via App</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\">Mobile Banking via App</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app/xpress-account\">Ecobank Xpress Account</a></li></ul></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/internet-banking\">Internet Banking</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/atms\">ATMs</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/pos\">Cashless Payments (POS)</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/ways-to-bank/branches\">Branches</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Products and Services\"><a target=\"_self\">Products and Services</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services\">Products and Services</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Cards\"><a target=\"_self\">Cards</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards\">Cards</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/debit\">Debit Cards</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/credit\">Credit Cards</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Prepaid Cards\"><a target=\"_self\">Prepaid Cards</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/prepaid\">Prepaid Cards</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/prepaid/cashxpress\">CashXpress</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/prepaid/salary-express\">Salary Express</a></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/pac\">PAC Cards</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/visa\">Visa</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/cards/mastercard\">Mastercard</a></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/loans\">Loans</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/payments-transfers\">Payment &amp; Transfers</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/hajj-financial-services\">Hajj Financial Services</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/bancassurance\">Bancassurance</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Investment Solutions\"><a target=\"_self\">Investment Solutions</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/investment-solutions\">Investment Solutions</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/investment-solutions/fixed-income-fund\">Fixed Income Fund</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/investment-solutions/money-market-fund\">Money Market Fund</a></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/e-products\">e-Products</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/microfinance\">Microfinance </a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/products-services/term-deposit\">Term Deposit</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Help and Security\"><a target=\"_self\">Help and Security</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/help-security\">Help and Security</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Help Centre\"><a target=\"_self\">Help Centre</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/help-center\">Help Centre</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/help-center/faqs\">Help FAQs</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/help-center/tips-advice\">Tips and Advice</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/help-center/downloads\">Form Downloads</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Security Centre\"><a target=\"_self\">Security Centre</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center\">Security Centre</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/contact\">Contact Security</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/tips\">Security Tips</a></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Scams\"><a target=\"_self\">Scams</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/scams\">Scams</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/scams/phishing\">Phishing</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/scams/spoof-website\">Spoof Website</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/scams/419\">419 scam</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/scams/keyloggers\">Keyloggers</a></li></ul></li><li role=\"menuitem\" class=\"has-submenu is-drilldown-submenu-parent is-submenu-item is-drilldown-submenu-item\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Secure Banking\"><a target=\"_self\">Secure Banking</a><ul class=\"menu vertical submenu is-drilldown-submenu\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" tabindex=\"0\"><li class=\"js-drilldown-back\"><a>Back</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking\">Secure Banking</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/pc-security\">PC Security</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/internet-public-places\">Internet in public places</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/wi-fi\">Wi-fi </a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/virus-awareness\">Virus awareness</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/identity-theft\">Identity theft</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/internet-banking\">Internet banking</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/atm-fraud\">ATM fraud</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/mobile-phone-banking\">Mobile phone banking</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/security-contact-numbers\">Security Contact Numbers</a></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/banking/card-security\">Card Security</a></li></ul></li><li role=\"menuitem\" class=\"is-submenu-item is-drilldown-submenu-item\"><a target=\"_self\" href=\"/personal-banking/security-center/report\">Report a Scam</a></li></ul></li></ul></li>\n    \n        \n\n\n    </ul></div>\n                                        </nav>\n                                    </div>\n                                </div>\n\n                                <div class=\"search-login-languages\">\n                                    <div class=\"row\">\n                                        <div class=\"columns small-12\">\n                                            <div id=\"top1_panel_top_search_mobile\" class=\"input-group search\" onkeypress=\"javascript:return WebForm_FireDefaultButton(event, 'top1_b_search_mobile')\">\n\t\t\n                                                <label>\n                                                    <span class=\"show-for-sr\">Search</span>\n                                                    <input name=\"ctl00$top1$tb_search_mobile\" type=\"text\" id=\"top1_tb_search_mobile\" class=\"input-group-field\" placeholder=\"Search\">\n                                                </label>\n                                                <div class=\"input-group-button\">\n                                                    <input type=\"button\" name=\"ctl00$top1$b_search_mobile\" value=\"\" onclick=\"javascript:__doPostBack('ctl00$top1$b_search_mobile','')\" id=\"top1_b_search_mobile\" placeholder=\"Search\">\n                                                </div>\n                                            \n\t</div>\n                                        </div>\n                                    </div>\n                                    \n                                        <div class=\"row\">\n                                            <div class=\"columns small-12\">\n                                                <span class=\"white\">Country</span>\n                                                <select name=\"ctl00$top1$dd_country_mobile\" onchange=\"javascript:setTimeout('__doPostBack(\\'ctl00$top1$dd_country_mobile\\',\\'\\')', 0)\" id=\"top1_dd_country_mobile\" class=\"custom-select\">\n\t\t<option value=\"-1\">Select one</option>\n\t\t<option selected=\"selected\" value=\"ZZ\">International</option>\n\t\t<option value=\"BJ\">Benin</option>\n\t\t<option value=\"BF\">Burkina Faso</option>\n\t\t<option value=\"BI\">Burundi</option>\n\t\t<option value=\"CF\">C African Republic</option>\n\t\t<option value=\"CM\">Cameroon</option>\n\t\t<option value=\"CV\">Cape Verde</option>\n\t\t<option value=\"TD\">Chad</option>\n\t\t<option value=\"CG\">Congo</option>\n\t\t<option value=\"CI\">Cote d'ivoire</option>\n\t\t<option value=\"CK\">D.R.Congo</option>\n\t\t<option value=\"GQ\">Equatorial Guinea</option>\n\t\t<option value=\"GA\">Gabon</option>\n\t\t<option value=\"GH\">Ghana</option>\n\t\t<option value=\"GN\">Guinea Conakry</option>\n\t\t<option value=\"GW\">Guinea-Bissau</option>\n\t\t<option value=\"KE\">Kenya</option>\n\t\t<option value=\"LR\">Liberia</option>\n\t\t<option value=\"MW\">Malawi</option>\n\t\t<option value=\"ML\">Mali</option>\n\t\t<option value=\"MZ\">Mozambique</option>\n\t\t<option value=\"NE\">Niger</option>\n\t\t<option value=\"NG\">Nigeria</option>\n\t\t<option value=\"RW\">Rwanda</option>\n\t\t<option value=\"ST\">Sao Tome &amp; Principe</option>\n\t\t<option value=\"SN\">Senegal</option>\n\t\t<option value=\"SL\">Sierra Leone</option>\n\t\t<option value=\"SD\">South Sudan</option>\n\t\t<option value=\"TZ\">Tanzania</option>\n\t\t<option value=\"GM\">The Gambia</option>\n\t\t<option value=\"TG\">Togo</option>\n\t\t<option value=\"UG\">Uganda</option>\n\t\t<option value=\"ZM\">Zambia</option>\n\t\t<option value=\"ZW\">Zimbabwe</option>\n\n\t</select>\n                                            </div>\n                                        </div>\n                                    \n                                    \n                                    <div class=\"row\">\n                                        <div class=\"columns small-12 xsmall-6\">\n                                            <div class=\"toggle-mobile\" data-toggle=\"mobile_login_dropdown\">\n                                                <span>Login</span>\n                                                <i class=\"btl bt-key\"></i>\n                                                <i class=\"arrow btl bt-angle-down bt-3x\"></i>\n                                            </div>\n                                            <div class=\"internet-banking\" id=\"mobile_login_dropdown\">\n                                                <h4>Internet Banking</h4>\n                                                \n                                                \n                                                \n                                                    <a class=\"button expanded  max-width-for-mobile\" href=\"https://omni.ecobank.com/GCPCW/index.jsp\" target=\"_blank\">Omni<span class=\"show-for-sr\">Login to your Omni Ecobank banking service.</span></a>\n                                                \n                                                \n                                            </div>\n                                        </div>\n                                        <div class=\"columns small-12 xsmall-6\">\n                                            <div class=\"toggle-mobile\" data-toggle=\"mobile_lang_dropdown\">\n                                                <span>\n                                                    EN\n                                                </span>\n                                                <i class=\"btl bt-globe\"></i>\n                                                <i class=\"arrow btl bt-angle-down bt-3x\"></i>\n                                            </div>\n                                            <div class=\"buttons\" id=\"mobile_lang_dropdown\">\n                                                \n                                                        <a id=\"top1_rep_mobile_lang_lbtn_langSwitcher_0\" class=\"button\" href=\"javascript:__doPostBack('ctl00$top1$rep_mobile_lang$ctl00$lbtn_langSwitcher','')\">EN<i class=\"btl bt-check-circle\"></i></a>\n                                                    \n                                                        <a id=\"top1_rep_mobile_lang_lbtn_langSwitcher_1\" class=\"button border-grey\" href=\"javascript:__doPostBack('ctl00$top1$rep_mobile_lang$ctl01$lbtn_langSwitcher','')\">FR</a>\n                                                    \n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"menu-container-social-channel\">\n                                    <div class=\"row\">\n                                        <div class=\"columns column-12\">\n                                            <div class=\"menu-container\">\n                                                \n    <ul class=\"menu vertical\">\n    \n        <li class=\"active\"><a target=\"_self\" href=\"/\">Personal Banking</a></li><li><a target=\"_self\" href=\"/commercial-banking\">Commercial Banking</a></li><li><a target=\"_self\" href=\"/corporate-investment-banking\">Corporate and Investment Banking</a></li><li><a target=\"_self\" href=\"/group\">Group</a></li>\n\n    </ul>\n    \n\n                                            </div>\n                                            <div class=\"social-channels\">\n                                                \n\n<a href=\"https://www.youtube.com/user/EcobankGroup\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"36frhh-tooltip\" aria-describedby=\"es1wn2-tooltip\" data-yeti-box=\"es1wn2-tooltip\" data-toggle=\"es1wn2-tooltip\" data-resize=\"es1wn2-tooltip\"><span class=\"fab fab-youtube\"></span></a>\n<a href=\"https://www.facebook.com/EcobankGroup/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"o2jdky-tooltip\" aria-describedby=\"2gf0m9-tooltip\" data-yeti-box=\"2gf0m9-tooltip\" data-toggle=\"2gf0m9-tooltip\" data-resize=\"2gf0m9-tooltip\"><span class=\"fab fab-facebook-alt\"></span></a>\n<a href=\"https://twitter.com/GroupEcobank\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"ddk8bh-tooltip\" aria-describedby=\"zh8zrj-tooltip\" data-yeti-box=\"zh8zrj-tooltip\" data-toggle=\"zh8zrj-tooltip\" data-resize=\"zh8zrj-tooltip\"><span class=\"fab fab-twitter\"></span></a>\n<a href=\"https://www.instagram.com/ecobank_group/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"t637x7-tooltip\" aria-describedby=\"1zkwbf-tooltip\" data-yeti-box=\"1zkwbf-tooltip\" data-toggle=\"1zkwbf-tooltip\" data-resize=\"1zkwbf-tooltip\"><span class=\"fab fab-instagram\"></span></a>\n<a href=\"https://www.linkedin.com/in/ecobank-group-26a13447\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"ijtyad-tooltip\" aria-describedby=\"tudo2a-tooltip\" data-yeti-box=\"tudo2a-tooltip\" data-toggle=\"tudo2a-tooltip\" data-resize=\"tudo2a-tooltip\"><span class=\"fab fab-linkedin-alt\"></span></a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"top1_panel_search_block\" class=\"top-search show-for-large\">\n\t\t\n                            <div id=\"top1_panel_top_search_id\" class=\"input-group search\" onkeypress=\"javascript:return WebForm_FireDefaultButton(event, 'top1_b_search')\">\n\t\t\t\n                                <label>\n                                    <span class=\"show-for-sr\">Search</span>\n                                    <input name=\"ctl00$top1$tb_search\" type=\"text\" id=\"top1_tb_search\" class=\"input-group-field\" placeholder=\"Search\">\n                                </label>\n                                <div class=\"input-group-button\">\n                                    <input type=\"button\" name=\"ctl00$top1$b_search\" value=\"\" onclick=\"javascript:__doPostBack('ctl00$top1$b_search','')\" id=\"top1_b_search\">\n                                </div>\n                            \n\t\t</div>\n\n                            <div class=\"Text\" onclick=\"open_search('top1_panel_top_search_id')\">\n                                Search\n                                <i class=\"btl bt-search\"></i>\n                            </div>\n                        \n\t</div>\n                        \n                        \n                        \n                        <div id=\"top1_panel_top_contact_personal\" class=\"top-contact personal show-for-large \">\n\t\t\n                            <div class=\"Text\" data-toggle=\"dd-menu-contact\" aria-controls=\"dd-menu-contact\" data-is-focus=\"false\" data-yeti-box=\"dd-menu-contact\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Contact\n                                <i class=\"btl bt-phone\"></i>\n                            </div>\n                            <div class=\"dropdown-pane small\" id=\"dd-menu-contact\" data-options=\"hoverPane:true;hoverDelay:0;\" data-dropdown=\"padebl-dropdown\" data-hover=\"true\" aria-hidden=\"true\" data-yeti-box=\"dd-menu-contact\" data-resize=\"dd-menu-contact\" aria-labelledby=\"7anhbe-dd-anchor\">\n                                <h4>Contact</h4>\n                                <ul class=\"login-buttons\">\n                                    <li>\n                                        <a class=\"button expanded\" href=\"/personal-banking/contact-us\" title=\"Personal\">Get in Touch<span class=\"show-for-sr\">Get in Touch</span></a>\n                                    </li>\n                                    <li>\n                                        <a class=\"button expanded\" href=\"/personal-banking/contact-us/locator\" title=\"Personal\">Find a Service<span class=\"show-for-sr\">Find a Service</span></a>\n                                    </li>\n                                </ul>\n                            </div>\n                        \n\t</div>\n                        <div class=\"top-login show-for-large\">\n                            <div data-toggle=\"dd-menu-login\" aria-controls=\"dd-menu-login\" data-is-focus=\"false\" data-yeti-box=\"dd-menu-login\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <div class=\"Text\">\n                                    Login\n                                    <i class=\"btl bt-key\"></i>\n                                </div>\n                            </div>\n                            <div class=\"dropdown-pane small\" id=\"dd-menu-login\" data-options=\"hoverPane:true;hoverDelay:0;\" data-dropdown=\"rjw1i6-dropdown\" data-hover=\"true\" aria-hidden=\"true\" data-yeti-box=\"dd-menu-login\" data-resize=\"dd-menu-login\" aria-labelledby=\"fi9i1m-dd-anchor\">\n                                <h4>Internet Banking</h4>\n                                <ul class=\"login-buttons\">\n                                    \n                                        <li>\n                                            \n                                        </li>\n                                    \n                                    \n                                    \n                                        <li>\n                                            <a class=\"button expanded\" href=\"https://omni.ecobank.com/GCPCW/index.jsp\" target=\"_blank\">Omni<span class=\"show-for-sr\">Login to your business Ecobank banking service.</span></a>\n                                        </li>\n                                    \n                                    \n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"top-lang show-for-large\">\n                            \n                            \n<div class=\"Text\" data-toggle=\"dd-menu-lang\" aria-controls=\"dd-menu-lang\" data-is-focus=\"false\" data-yeti-box=\"dd-menu-lang\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    EN\n    <img id=\"top1_countryChoose1_img_current_country\" src=\"/upload/flags/20160902103106042_zGW87s885m.svg\">\n</div>\n<div class=\"dropdown-pane small personal-lang-choose\" id=\"dd-menu-lang\" data-options=\"hoverPane:true;hoverDelay:0;\" data-dropdown=\"abxsri-dropdown\" data-hover=\"true\" aria-hidden=\"true\" data-yeti-box=\"dd-menu-lang\" data-resize=\"dd-menu-lang\" aria-labelledby=\"gq4em9-dd-anchor\">\n    <div class=\"row\">\n        <div class=\"small-12 columns\">\n            <div class=\"buttons\">\n                \n                        <a id=\"top1_countryChoose1_rep_langs_lbtn_langSwitcher_0\" class=\"button\" href=\"javascript:__doPostBack('ctl00$top1$countryChoose1$rep_langs$ctl00$lbtn_langSwitcher','')\">English<i class=\"btl bt-check-circle\"></i></a>\n                    \n                        <a id=\"top1_countryChoose1_rep_langs_lbtn_langSwitcher_1\" class=\"button border-grey\" href=\"javascript:__doPostBack('ctl00$top1$countryChoose1$rep_langs$ctl01$lbtn_langSwitcher','')\">Français</a>\n                    \n            </div>\n        </div>\n    </div>\n    <div class=\"country-list\">\n        <div class=\"row\">\n            \n                    \n                        <div class=\"small-3 columns\">\n                            <ul>\n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl00$bt_country\" value=\"Benin\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl00$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_0\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_0\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519020136572_Q794K6E4JQ.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl01$bt_country\" value=\"Burkina Faso\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl01$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_1\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_1\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519020429807_qh3wh5p2ee.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl02$bt_country\" value=\"Burundi\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl02$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_2\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_2\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519020640697_83pE2r8Nzz.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl03$bt_country\" value=\"C African Republic\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl03$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_3\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_3\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021020025_wcD9s9m8rw.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl04$bt_country\" value=\"Cameroon\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl04$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_4\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_4\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519020741260_1wf7vh1Ets.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl05$bt_country\" value=\"Cape Verde\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl05$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_5\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_5\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519020904291_B5rH5tAQ22.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl06$bt_country\" value=\"Chad\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl06$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_6\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_6\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021144838_vq91pbv7kk.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl07$bt_country\" value=\"Congo\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl07$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_7\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_7\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021328213_6ZJcYM6kVV.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl08$bt_country\" value=\"Cote d'ivoire\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl08$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_8\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_8\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021736010_9QtM5pXn49.svg);\">\n\n\t</div>\n                    </li>\n                    </ul>\n             </div>\n                    \n                \n                    \n                        <div class=\"small-3 columns\">\n                            <ul>\n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl09$bt_country\" value=\"D.R.Congo\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl09$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_9\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_9\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021553541_WRA4QCWbMM.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl10$bt_country\" value=\"Equatorial Guinea\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl10$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_10\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_10\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519022506182_HCyQB0HX98.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl11$bt_country\" value=\"Gabon\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl11$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_11\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_11\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519021920119_60kB0n5Jxw.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl12$bt_country\" value=\"Ghana\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl12$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_12\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_12\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519015911685_ng2uf4n0cc.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl13$bt_country\" value=\"Guinea Conakry\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl13$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_13\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_13\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519022027511_wcC9r9k7qv.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl14$bt_country\" value=\"Guinea-Bissau\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl14$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_14\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_14\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519022406104_jcWqcYhx98.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl15$bt_country\" value=\"Kenya\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl15$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_15\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_15\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519022148822_8rRn3NyK27.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl16$bt_country\" value=\"Liberia\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl16$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_16\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_16\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519022239921_94qF3s9P00.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl17$bt_country\" value=\"Malawi\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl17$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_17\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_17\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519023156603_b6Qh5Sbr22.svg);\">\n\n\t</div>\n                    </li>\n                    </ul>\n             </div>\n                    \n                \n                    \n                        <div class=\"small-3 columns\">\n                            <ul>\n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl18$bt_country\" value=\"Mali\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl18$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_18\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_18\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519023111541_QJ4WH6Q5FE.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl19$bt_country\" value=\"Mozambique\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl19$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_19\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_19\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519023303604_50kBzn5Jww.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl20$bt_country\" value=\"Niger\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl20$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_20\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_20\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519030131260_H2zrEA71Y8.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl21$bt_country\" value=\"Nigeria\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl21$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_21\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_21\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519015506744_2VE8UG2fSR.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl22$bt_country\" value=\"Rwanda\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl22$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_22\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_22\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519024039260_S8b5N7G6MS.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl23$bt_country\" value=\"Sao Tome &amp; Principe\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl23$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_23\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_23\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519024305781_tn7zn9t6jh.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl24$bt_country\" value=\"Senegal\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl24$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_24\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_24\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519023810588_YTC6SEYdPP.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl25$bt_country\" value=\"Sierra Leone\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl25$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_25\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_25\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519024413447_rj4wj6q3fe.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl26$bt_country\" value=\"South Sudan\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl26$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_26\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_26\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519024813150_4JmFXhSgW3.svg);\">\n\n\t</div>\n                    </li>\n                    </ul>\n             </div>\n                    \n                \n                    \n                        <div class=\"small-3 columns\">\n                            <ul>\n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl27$bt_country\" value=\"Tanzania\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl27$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_27\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_27\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519024859041_F9vN9xEU66.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl28$bt_country\" value=\"The Gambia\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl28$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_28\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_28\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519025553588_ZUD7TFZeQQ.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl29$bt_country\" value=\"Togo\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl29$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_29\" data-default-lang=\"FR\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_29\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519025316777_r96XnjD96D.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl30$bt_country\" value=\"Uganda\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl30$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_30\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_30\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519025111557_j22Xez9xdj.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl31$bt_country\" value=\"Zambia\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl31$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_31\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_31\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519025206182_P572H4C2GN.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl32$bt_country\" value=\"Zimbabwe\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl32$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_32\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_32\" class=\"icon\" style=\"background-image:url(/upload/flags/20160519025359463_ytc4seyBqp.svg);\">\n\n\t</div>\n                    </li>\n                    \n                \n                    \n                    <li>\n                        <input type=\"button\" name=\"ctl00$top1$countryChoose1$repCountries$ctl33$bt_country\" value=\"International\" onclick=\"javascript:__doPostBack('ctl00$top1$countryChoose1$repCountries$ctl33$bt_country','')\" id=\"top1_countryChoose1_repCountries_bt_country_33\" class=\"active\" data-default-lang=\"EN\">\n                        <div id=\"top1_countryChoose1_repCountries_panel_country_33\" class=\"icon\" style=\"background-image:url(/upload/flags/20160902103106042_zGW87s885m.svg);\">\n\n\t</div>\n                    </li>\n                    </ul>\n             </div>\n                    \n                \n        </div>\n    </div>\n\n</div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- top-block-3-menu -->\n        <div id=\"top1_panel_main_menu\" class=\"page-main-navigation show-for-large\">\n\t\t\n            <div class=\"row\">\n                <div class=\"large-12 columns\">\n                    <nav class=\"main-navigation\" id=\"main-navigation\">\n                        \n\n<ul class=\"main-navigation-menu dropdown menu\" data-dropdown-menu=\"szc7vj-dropdown-menu\" data-hover-delay=\"0\" data-closing-time=\"0\" role=\"menubar\">\n    <li class=\"home active\" role=\"menuitem\">\n        <a id=\"top1_TOPMENU1_hl_home\" href=\"/\" tabindex=\"0\"><i class=\"home btl bt-home bt-3x\"></i></a>\n    </li>\n    \n            \n                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-down-arrow\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Everyday Banking \">\n            \n            \n            <a id=\"top1_TOPMENU1_rep_parent_menu_hl_header_0\" href=\"/personal-banking/everyday-banking\">Everyday Banking </a>\n            \n                <ul class=\"menu main-navigation-panels personal submenu is-dropdown-submenu first-sub vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\">\n                    \n                    <div class=\"row\">\n                        \n                            <div class=\"small-9 columns\">\n                            <div class=\"panel-content\">\n                                <h2>\n                                    Everyday Banking \n                                </h2>\n                                <p>\n                                    Equipping you with the right account for the life you lead\n                                </p>\n                            </div>\n                        \n                                    <div class=\"child-block1\">\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_0\" href=\"/personal-banking/everyday-banking\">Everyday Banking</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Current Accounts\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_1\" href=\"/personal-banking/everyday-banking/current-accounts\">Current Accounts</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -100%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_0\" href=\"/personal-banking/everyday-banking/current-accounts\">Current Accounts</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_1\" href=\"/personal-banking/everyday-banking/current-accounts/classic\">Classic Current Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_2\" href=\"/personal-banking/everyday-banking/current-accounts/advantage\">Advantage Current Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_3\" href=\"/personal-banking/everyday-banking/current-accounts/premier\">Premier Current Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_4\" href=\"/personal-banking/everyday-banking/current-accounts/diaspora\">Diaspora Current Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_1_hl_header_5\" href=\"/personal-banking/everyday-banking/current-accounts/student\">Student Current Account</a>\n                                                    \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Savings Accounts\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_2\" href=\"/personal-banking/everyday-banking/savings-accounts\">Savings Accounts</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -200%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_0\" href=\"/personal-banking/everyday-banking/savings-accounts\">Savings Accounts</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_1\" href=\"/personal-banking/everyday-banking/savings-accounts/ecobank\">Ecobank Savings Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_2\" href=\"/personal-banking/everyday-banking/savings-accounts/classic\">Classic Savings Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_3\" href=\"/personal-banking/everyday-banking/savings-accounts/advantage\">Advantage Savings Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_4\" href=\"/personal-banking/everyday-banking/savings-accounts/premier\">Premier Savings Account</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-submenu-item is-dropdown-submenu-item is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Student Savings Account\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_hl_header_5\" href=\"/personal-banking/everyday-banking/savings-accounts/student\">Student Savings Account</a>\n                                                    \n                                                            <ul class=\"child-block3 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -500%;\">\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_rep_child_block3_5_hl_header_0\" href=\"/personal-banking/everyday-banking/savings-accounts/student\">Student Savings Account</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_rep_child_block3_5_hl_header_1\" href=\"/personal-banking/everyday-banking/savings-accounts/junior-saver\">Junior Saver Account</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_rep_child_block2_2_rep_child_block3_5_hl_header_2\" href=\"/personal-banking/everyday-banking/savings-accounts/my-first\">MyFirst Account</a>\n                                                            </li>\n                                                        \n                                                            </ul>\n                                                        \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_3\" href=\"/personal-banking/everyday-banking/e-account\">e-Account</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_4\" href=\"/personal-banking/products-services/cards\">Cards</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_5\" href=\"/personal-banking/products-services/loans\">Loans </a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_6\" href=\"/personal-banking/products-services/investment-solutions\">Investment Solutions</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_7\" href=\"/personal-banking/products-services/bancassurance\">Bancassurance</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_0_hl_header_8\" href=\"/personal-banking/everyday-banking/apply\">Apply for an account or service</a>\n                                        \n                                    </li>\n                                \n                                    </div>\n                                \n                        </div>\n                        \n                    <div class=\"small-3 columns\">\n                        <div id=\"top1_TOPMENU1_rep_parent_menu_panel_advert_0\" class=\"panel_advert heading-eco-green\" style=\"background-image: url('/upload/publication/20160605100126766XRA3RCW9NN/Cards_bg.png')\">\n\t\t\t\n                            <h3>\n                                Cards\n                            </h3>\n                            <p>\n                                Feeling in<br>\ncontrol\n                            </p>\n                            <a href=\"/personal-banking/products-services/cards\" class=\"button expanded\">Find out more</a>\n                        \n\t\t</div>\n                        </div>\n                \n                    </div>\n                </ul>\n            \n            </li>\n        \n            \n                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-down-arrow\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Payments &amp; Transfers\">\n            \n            \n            <a id=\"top1_TOPMENU1_rep_parent_menu_hl_header_1\" href=\"/personal-banking/payments-transfers\">Payments &amp; Transfers</a>\n            \n                <ul class=\"menu main-navigation-panels personal submenu is-dropdown-submenu first-sub vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\">\n                    \n                    <div class=\"row\">\n                        \n                            <div class=\"small-9 columns\">\n                            <div class=\"panel-content\">\n                                <h2>\n                                    Payments &amp; Transfers\n                                </h2>\n                                <p>\n                                    Making payments at home and abroad easier and quicker  \n                                </p>\n                            </div>\n                        \n                                    <div class=\"child-block1\">\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_1_hl_header_0\" href=\"/personal-banking/payments-transfers\">Payments &amp; Transfers</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_1_hl_header_1\" href=\"/personal-banking/payments-transfers/rapidtransfer\">Rapidtransfer</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_1_hl_header_2\" href=\"/personal-banking/payments-transfers/foreign-exchange\">Foreign Exchange</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_1_hl_header_3\" href=\"/personal-banking/ways-to-bank/mobile\">Ecobank Mobile</a>\n                                        \n                                    </li>\n                                \n                                    </div>\n                                \n                        </div>\n                        \n                    <div class=\"small-3 columns\">\n                        <div id=\"top1_TOPMENU1_rep_parent_menu_panel_advert_1\" class=\"panel_advert heading-eco-green\" style=\"background-image: url('/upload/publication/20161109035045759E9VM8XEU65/20161109034909709E.jpg')\">\n\t\t\t\n                            <h3>\n                                Rapidtransfer\n                            </h3>\n                            <p>\n                                Send and <br>\nreceive online \n                            </p>\n                            <a class=\"button expanded\" href=\"https://rapidtransferonline.ecobank.com\">Find out more</a>\n                        \n\t\t</div>\n                        </div>\n                \n                    </div>\n                </ul>\n            \n            </li>\n        \n            \n                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-down-arrow\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Ways to Bank\">\n            \n            \n            <a id=\"top1_TOPMENU1_rep_parent_menu_hl_header_2\" href=\"/personal-banking/ways-to-bank\">Ways to Bank</a>\n            \n                <ul class=\"menu main-navigation-panels personal submenu is-dropdown-submenu first-sub vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\">\n                    \n                    <div class=\"row\">\n                        \n                            <div class=\"small-9 columns\">\n                            <div class=\"panel-content\">\n                                <h2>\n                                    Ways to Bank\n                                </h2>\n                                <p>\n                                    Banking designed around you, including on your phone and online \n                                </p>\n                            </div>\n                        \n                                    <div class=\"child-block1\">\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_0\" href=\"/personal-banking/ways-to-bank\">Ways to Bank</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Ecobank Mobile\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_1\" href=\"/personal-banking/ways-to-bank/mobile\">Ecobank Mobile</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -100%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_hl_header_0\" href=\"/personal-banking/ways-to-bank/mobile\">Ecobank Mobile</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_hl_header_1\" href=\"/personal-banking/ways-to-bank/mobilemoney\">MobileMoney</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_hl_header_2\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-ussd\">Mobile Banking via USSD</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-submenu-item is-dropdown-submenu-item is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Mobile Banking via App\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_hl_header_3\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\">Mobile Banking via App</a>\n                                                    \n                                                            <ul class=\"child-block3 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -300%;\">\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_rep_child_block3_3_hl_header_0\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\">Mobile Banking via App</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_rep_child_block2_1_rep_child_block3_3_hl_header_1\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app/xpress-account\">Ecobank Xpress Account</a>\n                                                            </li>\n                                                        \n                                                            </ul>\n                                                        \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_2\" href=\"/personal-banking/ways-to-bank/internet-banking\">Internet Banking</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_3\" href=\"/personal-banking/ways-to-bank/atms\">ATMs</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_4\" href=\"/personal-banking/ways-to-bank/pos\">Cashless Payments (POS)</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_2_hl_header_5\" href=\"/personal-banking/ways-to-bank/branches\">Branches</a>\n                                        \n                                    </li>\n                                \n                                    </div>\n                                \n                        </div>\n                        \n                    <div class=\"small-3 columns\">\n                        <div id=\"top1_TOPMENU1_rep_parent_menu_panel_advert_2\" class=\"panel_advert heading-eco-green\" style=\"background-image: url('/upload/publication/20160605100126766XRA3RCW9NN/Cards_bg.png')\">\n\t\t\t\n                            <h3>\n                                Cards\n                            </h3>\n                            <p>\n                                Feeling in<br>\ncontrol\n                            </p>\n                            <a href=\"/personal-banking/products-services/cards\" class=\"button expanded\">Find out more</a>\n                        \n\t\t</div>\n                        </div>\n                \n                    </div>\n                </ul>\n            \n            </li>\n        \n            \n                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-down-arrow\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Products and Services\">\n            \n            \n            <a id=\"top1_TOPMENU1_rep_parent_menu_hl_header_3\" href=\"/personal-banking/products-services\">Products and Services</a>\n            \n                <ul class=\"menu main-navigation-panels personal submenu is-dropdown-submenu first-sub vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\">\n                    \n                    <div class=\"row\">\n                        \n                            <div class=\"small-9 columns\">\n                            <div class=\"panel-content\">\n                                <h2>\n                                    Products and Services\n                                </h2>\n                                <p>\n                                    A range of products and services to meet your different needs\n                                </p>\n                            </div>\n                        \n                                    <div class=\"child-block1\">\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_0\" href=\"/personal-banking/products-services\">Products and Services</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Cards\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_1\" href=\"/personal-banking/products-services/cards\">Cards</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -100%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_0\" href=\"/personal-banking/products-services/cards\">Cards</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_1\" href=\"/personal-banking/products-services/cards/debit\">Debit Cards</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_2\" href=\"/personal-banking/products-services/cards/credit\">Credit Cards</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-submenu-item is-dropdown-submenu-item is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Prepaid Cards\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_3\" href=\"/personal-banking/products-services/cards/prepaid\">Prepaid Cards</a>\n                                                    \n                                                            <ul class=\"child-block3 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -300%;\">\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_rep_child_block3_3_hl_header_0\" href=\"/personal-banking/products-services/cards/prepaid\">Prepaid Cards</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_rep_child_block3_3_hl_header_1\" href=\"/personal-banking/products-services/cards/prepaid/cashxpress\">CashXpress</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_rep_child_block3_3_hl_header_2\" href=\"/personal-banking/products-services/cards/prepaid/salary-express\">Salary Express</a>\n                                                            </li>\n                                                        \n                                                            </ul>\n                                                        \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_4\" href=\"/personal-banking/products-services/cards/pac\">PAC Cards</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_5\" href=\"/personal-banking/products-services/cards/visa\">Visa</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_1_hl_header_6\" href=\"/personal-banking/products-services/cards/mastercard\">Mastercard</a>\n                                                    \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_2\" href=\"/personal-banking/products-services/loans\">Loans</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_3\" href=\"/personal-banking/payments-transfers\">Payment &amp; Transfers</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_4\" href=\"/personal-banking/products-services/hajj-financial-services\">Hajj Financial Services</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_5\" href=\"/personal-banking/products-services/bancassurance\">Bancassurance</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Investment Solutions\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_6\" href=\"/personal-banking/products-services/investment-solutions\">Investment Solutions</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -600%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_6_hl_header_0\" href=\"/personal-banking/products-services/investment-solutions\">Investment Solutions</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_6_hl_header_1\" href=\"/personal-banking/products-services/investment-solutions/fixed-income-fund\">Fixed Income Fund</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_rep_child_block2_6_hl_header_2\" href=\"/personal-banking/products-services/investment-solutions/money-market-fund\">Money Market Fund</a>\n                                                    \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_7\" href=\"/personal-banking/products-services/e-products\">e-Products</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_8\" href=\"/personal-banking/products-services/microfinance\">Microfinance </a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_3_hl_header_9\" href=\"/personal-banking/products-services/term-deposit\">Term Deposit</a>\n                                        \n                                    </li>\n                                \n                                    </div>\n                                \n                        </div>\n                        \n                    <div class=\"small-3 columns\">\n                        <div id=\"top1_TOPMENU1_rep_parent_menu_panel_advert_3\" class=\"panel_advert heading-eco-green\" style=\"background-image: url('/upload/publication/2016060510021161060KC0N5JXX/Atms.jpg')\">\n\t\t\t\n                            <h3>\n                                ATM\n                            </h3>\n                            <p>\n                                Just in<br>\ncase \n                            </p>\n                            <a href=\"/personal-banking/ways-to-bank/atms\" class=\"button ecogreen expanded\">Find out more</a>\n                        \n\t\t</div>\n                        </div>\n                \n                    </div>\n                </ul>\n            \n            </li>\n        \n            \n                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-down-arrow\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Help and Security\">\n            \n            \n            <a id=\"top1_TOPMENU1_rep_parent_menu_hl_header_4\" href=\"/personal-banking/help-security\">Help and Security</a>\n            \n                <ul class=\"menu main-navigation-panels personal submenu is-dropdown-submenu first-sub vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\">\n                    \n                    <div class=\"row\">\n                        \n                            <div class=\"small-9 columns\">\n                            <div class=\"panel-content\">\n                                <h2>\n                                    Help and Security\n                                </h2>\n                                <p>\n                                    Support to get the most from your banking and protect yourself\n                                </p>\n                            </div>\n                        \n                                    <div class=\"child-block1\">\n                                \n                                    <li role=\"menuitem\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_hl_header_0\" href=\"/personal-banking/help-security\">Help and Security</a>\n                                        \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Help Centre\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_hl_header_1\" href=\"/personal-banking/help-center\">Help Centre</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -100%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_1_hl_header_0\" href=\"/personal-banking/help-center\">Help Centre</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_1_hl_header_1\" href=\"/personal-banking/help-center/faqs\">Help FAQs</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_1_hl_header_2\" href=\"/personal-banking/help-center/tips-advice\">Tips and Advice</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_1_hl_header_3\" href=\"/personal-banking/help-center/downloads\">Form Downloads</a>\n                                                    \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Security Centre\">\n                                        <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_hl_header_2\" href=\"/personal-banking/security-center\">Security Centre</a>\n                                        \n                                                <ul class=\"child-block2 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -200%;\">\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_0\" href=\"/personal-banking/security-center\">Security Centre</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_1\" href=\"/personal-banking/security-center/contact\">Contact Security</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_2\" href=\"/personal-banking/security-center/tips\">Security Tips</a>\n                                                    \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-submenu-item is-dropdown-submenu-item is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Scams\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_3\" href=\"/personal-banking/security-center/scams\">Scams</a>\n                                                    \n                                                            <ul class=\"child-block3 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -300%;\">\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_3_hl_header_0\" href=\"/personal-banking/security-center/scams\">Scams</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_3_hl_header_1\" href=\"/personal-banking/security-center/scams/phishing\">Phishing</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_3_hl_header_2\" href=\"/personal-banking/security-center/scams/spoof-website\">Spoof Website</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_3_hl_header_3\" href=\"/personal-banking/security-center/scams/419\">419 scam</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_3_hl_header_4\" href=\"/personal-banking/security-center/scams/keyloggers\">Keyloggers</a>\n                                                            </li>\n                                                        \n                                                            </ul>\n                                                        \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"has-submenu is-dropdown-submenu-parent is-submenu-item is-dropdown-submenu-item is-right-arrow opens-right\" aria-haspopup=\"true\" aria-selected=\"false\" aria-expanded=\"false\" aria-label=\"Secure Banking\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_4\" href=\"/personal-banking/security-center/banking\">Secure Banking</a>\n                                                    \n                                                            <ul class=\"child-block3 submenu is-dropdown-submenu vertical\" data-submenu=\"\" aria-hidden=\"true\" role=\"menu\" style=\"top: -400%;\">\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_0\" href=\"/personal-banking/security-center/banking\">Secure Banking</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_1\" href=\"/personal-banking/security-center/banking/pc-security\">PC Security</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_2\" href=\"/personal-banking/security-center/banking/internet-public-places\">Internet in public places</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_3\" href=\"/personal-banking/security-center/banking/wi-fi\">Wi-fi </a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_4\" href=\"/personal-banking/security-center/banking/virus-awareness\">Virus awareness</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_5\" href=\"/personal-banking/security-center/banking/identity-theft\">Identity theft</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_6\" href=\"/personal-banking/security-center/banking/internet-banking\">Internet banking</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_7\" href=\"/personal-banking/security-center/banking/atm-fraud\">ATM fraud</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_8\" href=\"/personal-banking/security-center/banking/mobile-phone-banking\">Mobile phone banking</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_9\" href=\"/personal-banking/security-center/banking/security-contact-numbers\">Security Contact Numbers</a>\n                                                            </li>\n                                                        \n                                                            <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                                <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_rep_child_block3_4_hl_header_10\" href=\"/personal-banking/security-center/banking/card-security\">Card Security</a>\n                                                            </li>\n                                                        \n                                                            </ul>\n                                                        \n                                                </li>\n                                            \n                                                <li role=\"menuitem\" class=\"is-submenu-item is-dropdown-submenu-item\">\n                                                    <a id=\"top1_TOPMENU1_rep_parent_menu_rep_child_block1_4_rep_child_block2_2_hl_header_5\" href=\"/personal-banking/security-center/report\">Report a Scam</a>\n                                                    \n                                                </li>\n                                            \n                                                </ul>\n                                            \n                                    </li>\n                                \n                                    </div>\n                                \n                        </div>\n                        \n                    <div class=\"small-3 columns\">\n                        <div id=\"top1_TOPMENU1_rep_parent_menu_panel_advert_4\" class=\"panel_advert heading-eco-green\" style=\"background-image: url('/upload/publication/2016060510021161060KC0N5JXX/Atms.jpg')\">\n\t\t\t\n                            <h3>\n                                ATM\n                            </h3>\n                            <p>\n                                Just in<br>\ncase \n                            </p>\n                            <a href=\"/personal-banking/ways-to-bank/atms\" class=\"button ecogreen expanded\">Find out more</a>\n                        \n\t\t</div>\n                        </div>\n                \n                    </div>\n                </ul>\n            \n            </li>\n        \n</ul>\n<script>\n    $(document).ready(function () {\n        setTimeout(function () {\n            $(\".child-block1\").find(\"li.has-submenu\").each(function () {\n                var top_padding = $(this).index() * (-100);\n                $(this).find(\".child-block2\").css(\"top\", top_padding + \"%\");\n            });\n            $(\".child-block2\").find(\"li.has-submenu\").each(function () {\n                var top_padding = $(this).index() * (-100);\n                $(this).find(\".child-block3\").css(\"top\", top_padding + \"%\");\n            });\n            \n\n            $(\"#main-navigation > ul\").on(\"show.zf.dropdownmenu\", function (ev, $el) {\n                var _$max_height = $(\".main-navigation-panels.js-dropdown-active\").height();\n                $el.find(\"ul\").each(function (index) {\n                    $(this).css(\"height\", \"auto\");\n                    if ($(this).height() > _$max_height) _$max_height = $(this).height();\n                });\n                $(\".main-navigation-menu\").find(\"ul\").height(_$max_height);\n\n                if ($el.hasClass(\"main-navigation-panels\")) {\n                    $(\"#middle_hover_back\").addClass(\"hover-back\");\n                }\n                if ($el.hasClass(\"child-block2\")) {\n                    $(\".main-navigation-panels .child-block1\").parent().addClass(\"back-hover\");\n                    $(\".main-navigation-panels .panel-content\").css(\"display\", \"none\");\n                }\n            });\n            $(\"#main-navigation > ul\").on(\"hide.zf.dropdownmenu\", function (ev, $el) {           \n                if ($el.hasClass(\"is-down-arrow\") || $el.hasClass(\"main-navigation-menu\")) {\n                    $(\"#middle_hover_back\").removeClass(\"hover-back\");\n                    $(\".main-navigation-menu\").find(\"ul\").height(\"\");\n                    $(\".main-navigation-panels .child-block1\").parent().removeClass(\"back-hover\");\n                    $(\".main-navigation-panels .panel-content\").css(\"display\", \"block\");\n                }\n                if ($el.hasClass(\"is-right-arrow\") && !$el.hasClass(\"is-submenu-item\")) {\n                    $(\".main-navigation-panels .child-block1\").parent().removeClass(\"back-hover\");\n                    $(\".main-navigation-panels .panel-content\").css(\"display\", \"block\");\n                }\n            });\n            \n        }, 300)\n    });\n</script>\n\n                    </nav>\n                </div>\n            </div>\n        \n\t</div>\n    \n</div>\n</header>\n\n<script>\n\n    $(window).on('changed.zf.mediaquery', function (event, newSize, oldSize) {\n        if (Foundation.MediaQuery.atLeast('large')) {\n            $(\"html\").removeClass(\"overflow-hidden\");\n        }\n    });\n    $(\"#mobileMenuButton\").on(\"click\", function () {\n        var _$max_height = 0;\n        setTimeout(function () {\n            //$(\".is-drilldown\").find(\"ul\").each(function (index) {\n            //    $(this).css(\"height\", \"auto\");\n            //    if ($(this).outerHeight() > _$max_height) _$max_height = $(this).outerHeight();\n            //    $(this).css(\"height\", \"\");\n            //});\n            _$max_height = $(\"#mobile-menu .is-drilldown\").children(\"ul\").outerHeight();\n            $(\"#mobile-menu .is-drilldown\").height(_$max_height);\n        }, 100);\n\n        if ($(\"html\").toggleClass(\"overflow-hidden\"));\n\n    });\n\n    function open_search(id) {\n        if ($(\"#\" + id).css(\"opacity\") == \"0\") {\n            $(\"#\" + id).css(\"visibility\", \"visible\");\n            $(\"#\" + id).css(\"opacity\", \"1\");\n        } else {\n            $(\"#\" + id).css(\"opacity\", \"0\");\n            $(\"#\" + id).css(\"visibility\", \"hidden\");\n        };\n    }\n    \n    $(document).ready(function () {\n        //ga track clicks  \n        $(\"a[href]\").each(function () {\n            var _$href = $(this).attr(\"href\"),\n                _$externalLink = new RegExp(\"^(http|https)://\", \"i\").test(_$href);\n            if (_$href.indexOf(\"#\") != 0 && _$externalLink) {\n                $(this).click(function () {\n                    trackOutboundLink(_$href);\n                    return false;\n                })\n            }\n        });\n\n        $(\".toggle-mobile\").click(function () {\n            var _$toogle_panel = $(this).attr(\"data-toggle\");\n            $(\"#\" + _$toogle_panel).slideToggle(\"fast\");\n        });\n        $(\"#mobileMenuButton\").click(function () {\n            $(\".top-toogle\").toggleClass(\"padding-right-absolute\");\n        });\n\n        $(\"[data-toggle-top]\").click(function () {\n            var _$this_id=$(this).attr(\"id\");\n            $(\"[data-toggle-top]\").each(function () {\n                if ($(this).attr(\"id\") != _$this_id) {\n                    $(\"#\" + $(this).attr(\"data-toggle-top\")).slideUp();\n                    $(this).removeClass(\"active\");\n                }\n            })\n            $(this).toggleClass(\"active\");\n            $(\"#\" + $(this).attr(\"data-toggle-top\")).slideToggle(\"300\");\n        });\n    });\n\n</script>\n\n            <div id=\"main\" class=\"personal-main\">\n                <div id=\"middle_hover_back\">\n                    \n                    \n\n\n\n\n\n<script type=\"text/javascript\" src=\"https://maps.google.com/maps/api/js?v=3.2&amp;sensor=false\"></script>\n<section class=\"personal-home-page\">\n    <!--personal-home-block-1-banner -->\n    <section class=\"personal-banner-home\">\n        <div class=\"login-container show-for-large\">\n            <div class=\"row\">\n                <!-- <div class=\"columns medium-8\"></div> -->\n                <div class=\"columns medium-4 float-right\">\n                    <div class=\"login\">\n                        <div class=\"top\">\n                            <p>Login to Internet Banking</p>\n                            <div id=\"C1__text_ctl00_panel_banner_logins\">\n\t\n                                <ul class=\"login-button-group button-group personal\">\n                                \n    <li></li>\n\n\n    <li><a href=\"https://omni.ecobank.com/GCPCW/index.jsp\" class=\"button\" target=\"_blank\"><i class=\"btr bt-briefcase\"></i>Omni</a></li>\n\n\n\n\n\n\n\n                            </ul>\n                            \n</div>\n                            \n                        </div>\n                        <div class=\"bottom\">\n                            \n    <ul class=\"menu vertical\">\n    \n        <li><a target=\"_self\" href=\"/personal-banking/everyday-banking/current-accounts\">Open a bank account </a></li><li><a target=\"_self\" href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\">Mobile Banking via App </a></li><li><a target=\"_self\" href=\"/personal-banking/payments-transfers\">Transfer money </a></li><li><a target=\"_self\" href=\"/personal-banking/contact-us\">Talk to us </a></li>\n\n    </ul>\n    \n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n<div id=\"C1__text_ctl00_TEXT10_ctl00_carouselBlock\" class=\"owl-carousel owl-carousel-common owl-theme owl-loaded\">\n\t\n    \n            \n            \n        \n            \n            \n        \n            \n            \n        \n            \n            \n        \n\n<div class=\"owl-stage-outer\"><div class=\"owl-stage\" style=\"transform: translate3d(-792px, 0px, 0px); transition: 0s; width: 4752px;\"><div class=\"owl-item cloned\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_3\" class=\"item\" data-pic=\"/upload/marketing/20170309020831020_9m8rwVDA2S.jpg\" style=\"background-image:url('/upload/marketing/20170309020831020_9m8rwVDA2S.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nWherever,<br> Whenever\n\n                            </h3>\n                            \n<p>With the convenience of banking  <br>online and on your mobile…  <br> it's time to Move On Up.</p>\n\n<a href=\"/personal-banking/ways-to-bank\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div><div class=\"owl-item active\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_0\" class=\"item\" data-pic=\"/upload/marketing/20170411035302948_e9Tm8Veu65.jpg\" style=\"background-image:url('/upload/marketing/20170411035302948_e9Tm8Veu65.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nHappy Easter <br>\nfrom our family <br>\nto yours\n\n\n                            </h3>\n                            \n<p>Whether you’re shopping for the <br>\nEaster feast, sending money home <br>\nor buying airtime you can do it all <br>\nwith the Ecobank Mobile App.\n\n</p>\n\n<a href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_1\" class=\"item\" data-pic=\"/upload/marketing/20170309014424137_HBxQBzHW88.jpg\" style=\"background-image:url('/upload/marketing/20170309014424137_HBxQBzHW88.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nFaster. <br>\nEasier. <br>\nBetter. \n\n\n                            </h3>\n                            \n<p>We’ve made our online banking  <br>\nservice better and simpler to use. <br> \nRegister with just a few clicks <br>\nand get started today.\n</p>\n\n<a href=\"/personal-banking/ways-to-bank/internet-banking\" target=\"_blank\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_2\" class=\"item\" data-pic=\"/upload/marketing/20170309014424183_k23Xfz9yek.jpg\" style=\"background-image:url('/upload/marketing/20170309014424183_k23Xfz9yek.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nBy your<br> side\n\n                            </h3>\n                            \n<p>With relevant banking solutions\n  <br>\n  for every stage of your life… \n  <br>\n  it’s time to Move on UP.\n</p>\n\n<a href=\"/personal-banking/everyday-banking/current-accounts\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_3\" class=\"item\" data-pic=\"/upload/marketing/20170309020831020_9m8rwVDA2S.jpg\" style=\"background-image:url('/upload/marketing/20170309020831020_9m8rwVDA2S.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nWherever,<br> Whenever\n\n                            </h3>\n                            \n<p>With the convenience of banking  <br>online and on your mobile…  <br> it's time to Move On Up.</p>\n\n<a href=\"/personal-banking/ways-to-bank\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div><div class=\"owl-item cloned\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_TEXT10_ctl00_repCarousel_item_panel_0\" class=\"item\" data-pic=\"/upload/marketing/20170411035302948_e9Tm8Veu65.jpg\" style=\"background-image:url('/upload/marketing/20170411035302948_e9Tm8Veu65.jpg');\">\n\t\t\n                <div class=\"row\">\n                    \n                    \n                        <div class=\"columns small-12 xsmall-10 medium-6 large-5\">\n                            <h3>\n                                \nHappy Easter <br>\nfrom our family <br>\nto yours\n\n\n                            </h3>\n                            \n<p>Whether you’re shopping for the <br>\nEaster feast, sending money home <br>\nor buying airtime you can do it all <br>\nwith the Ecobank Mobile App.\n\n</p>\n\n<a href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\" class=\"button expand max-width-for-mobile\">Find out more</a>\n\n                        </div>\n                    \n                </div>\n            \n\t</div></div></div></div><div class=\"owl-controls\"><div class=\"owl-nav\"><div class=\"owl-prev\" style=\"display: none;\">prev</div><div class=\"owl-next\" style=\"display: none;\">next</div></div><div class=\"owl-dots\" style=\"\"><div class=\"owl-dot active\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div></div></div></div>\n<script>\n    $(document).ready(function () {\n        var owl = $(\"#C1__text_ctl00_TEXT10_ctl00_carouselBlock\");\n        owl.owlCarousel({\n            autoplay: true,\n            autoplayTimeout: 5000,\n            autoplaySpeed: 1500,\n            dotsSpeed: 500,\n            autoplayHoverPause: true,\n            dots: true,\n            loop: true,\n            items: 1,\n            transitionStyle: \"fade\"\n        });\n    });\n</script>\n\n\n    </section>\n    \n\n\n<section class=\"tab-slider-widget\">\n    <div class=\"tabs-container\">\n        <div class=\"row\">\n            <ul class=\"tabs columns small-12\" id=\"primary-tabs\" data-tabs=\"wq0uo4-tabs\">\n                <li class=\"tabs-title is-active\" role=\"presentation\"><a href=\"#panel1v\" aria-selected=\"true\" role=\"tab\" aria-controls=\"panel1v\" id=\"panel1v-label\">Everyday Banking</a></li>\n                <li class=\"tabs-title show-for-xsmall\" role=\"presentation\"><a href=\"#panel2v\" role=\"tab\" aria-controls=\"panel2v\" aria-selected=\"false\" id=\"panel2v-label\">Payments &amp; Transfers</a></li>\n                <li class=\"tabs-title show-for-xsmall\" role=\"presentation\"><a href=\"#panel3v\" role=\"tab\" aria-controls=\"panel3v\" aria-selected=\"false\" id=\"panel3v-label\">Ways to Bank</a></li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"tabs-content row\" data-tabs-content=\"primary-tabs\">\n        <div class=\"tabs-panel is-active small-12 columns\" id=\"panel1v\">\n            <div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_carouselBlock\" class=\"owl-carousel owl-carousel-edit owl-theme owl-loaded\">\n\t\n    \n            \n        \n            \n        \n            \n        \n            \n        \n            \n        \n            \n        \n\n<div class=\"owl-stage-outer\"><div class=\"owl-stage\" style=\"transform: translate3d(-792px, 0px, 0px); transition: 0s; width: 6336px;\"><div class=\"owl-item cloned\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_5\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Investment Solutions</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Tap into our pan-African scale to realise a wealth of investment opportunities</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/products-services/investment-solutions\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Fixed Income Fund </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Money Market Fund </li>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item active\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n<div class=\"small-12 xmedium-8 columns slide-strapline\">\n<div class=\"slide-strapline-inner\">\n<h3>Current Accounts</h3>\n\n<p class=\"big\">Whether you want essentials or extras, our current accounts are right for every moment</p>\n<a class=\"button dark-blue max-width-for-mobile\" href=\"/personal-banking/everyday-banking/current-accounts\">Find out more</a></div>\n</div>\n<!-- .columns -->\n\n<div class=\"small-4 show-for-xmedium columns\">\n<ul>\n\t<li><i class=\"icon btr bt-check\"></i>Classic Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Student Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Advantage Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Premier Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Diaspora Current Account</li>\n</ul>\n</div>\n<!-- .columns --></div>\n\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_1\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n  <div class=\"small-12 xmedium-8 columns slide-strapline\">\n    <div class=\"slide-strapline-inner\">\n      <h3>Savings Accounts\n      </h3>\n      <p class=\"big\">Discover a selection of savings accounts to help you and your family grow your money\n      </p>\n      <a href=\"/personal-banking/everyday-banking/savings-accounts\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n    </div>\n  </div><!-- .columns -->\n  <div class=\"small-4 show-for-xmedium columns\">\n    <ul>\n      <li> <i class=\"icon btr bt-check\"></i>Savings Account </li>\n      <li> <i class=\"icon btr bt-check\"></i>Classic Savings Account</li>\n      <li> <i class=\"icon btr bt-check\"></i>Student Savings Account</li>\n      <li> <i class=\"icon btr bt-check\"></i>Advantage Savings Account</li>\n      <li> <i class=\"icon btr bt-check\"></i>Premier Savings Account</li>\n    </ul>\n  </div><!-- .columns -->\n</div>\n\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_2\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Cards</h3>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Our range of debit, credit and pre-paid cards make every transaction fast, easy and safe</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/products-services/cards\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Cards </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Debit Cards </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Credit Cards </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Prepaid Cards </li>\n\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_3\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Loans</h3>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p class=\"big\">From salary advances to mortgages, we have a loan to help you achieve your goals</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/products-services/loans\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Personal Loan </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Auto Loan / Asset Acquisition </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Advance Facility </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Mortgage Loan </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Travel Loan </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Salary Advance </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_4\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Bancassurance</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">A choice of cover designed to give you peace of mind about your future today</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/products-services/bancassurance\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Education policies </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Life policies </li>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Retirement and funeral policies </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_5\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Investment Solutions</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Tap into our pan-African scale to realise a wealth of investment opportunities</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/products-services/investment-solutions\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Fixed Income Fund </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Money Market Fund </li>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item cloned\" style=\"width: 792px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n<div class=\"small-12 xmedium-8 columns slide-strapline\">\n<div class=\"slide-strapline-inner\">\n<h3>Current Accounts</h3>\n\n<p class=\"big\">Whether you want essentials or extras, our current accounts are right for every moment</p>\n<a class=\"button dark-blue max-width-for-mobile\" href=\"/personal-banking/everyday-banking/current-accounts\">Find out more</a></div>\n</div>\n<!-- .columns -->\n\n<div class=\"small-4 show-for-xmedium columns\">\n<ul>\n\t<li><i class=\"icon btr bt-check\"></i>Classic Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Student Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Advantage Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Premier Current Account</li>\n\t<li><i class=\"icon btr bt-check\"></i>Diaspora Current Account</li>\n</ul>\n</div>\n<!-- .columns --></div>\n\n\n\n\n            \n\t</div></div></div></div><div class=\"owl-controls\"><div class=\"owl-nav\"><div class=\"owl-prev\" style=\"\"><button type=\"button\"></button></div><div class=\"owl-next\" style=\"\"><button type=\"button\"></button></div></div><div class=\"owl-dots\" style=\"\"><div class=\"owl-dot active\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div></div></div></div>\n<script>\n    $(document).ready(function () {\n        var owl = $(\"#C1__text_ctl00_section_tab_slider_tab_slider1_owl_edit1_carouselBlock\");\n        owl.owlCarousel({\n            autoplay: false,\n            autoplayTimeout: 0,\n            autoplaySpeed: 1000,\n            dotsSpeed: 1000,\n            navSpeed: 1000,\n            autoplayHoverPause: true,\n            dots: true,\n            loop: true,\n            items: 1,\n            \n            nav: true,\n            navText: ['<button type=\"button\"></button>', '<button type=\"button\"></button>'],\n            \n            transitionStyle: \"fade\"\n        });\n    });\n</script>\n        </div>\n        <div class=\"tabs-panel small-12 columns\" id=\"panel2v\">\n            <div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_carouselBlock\" class=\"owl-carousel owl-carousel-edit owl-theme owl-hidden owl-loaded\">\n\t\n    \n            \n        \n            \n        \n            \n        \n\n<div class=\"owl-stage-outer\"><div class=\"owl-stage\" style=\"transform: translate3d(-100px, 0px, 0px); transition: 0s; width: 500px;\"><div class=\"owl-item cloned\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_repCarousel_item_panel_2\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Foreign Exchange</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">When it comes to foreign currency transactions, we’re market leaders and ideal partners</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/payments-transfers/foreign-exchange\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Flexible</li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Timely </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Competitive rates </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Special advisory services </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item active\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Rapidtransfer</h3>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p class=\"big\">The fast, convenient and reliable way to transfer money across Africa</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/payments-transfers/rapidtransfer\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer in-branch </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer Mobile </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer Online </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_repCarousel_item_panel_1\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Remittance Partners</h3>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Send and receive funds, quickly, safely and easily with Western Union, MoneyGram and more</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/payments-transfers/remittance-partners\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Western Union </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Moneygram </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>MTN </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>PAC – The pan-African Card </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Ria </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_repCarousel_item_panel_2\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Foreign Exchange</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">When it comes to foreign currency transactions, we’re market leaders and ideal partners</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/payments-transfers/foreign-exchange\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Flexible</li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Timely </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Competitive rates </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Special advisory services </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item cloned\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Rapidtransfer</h3>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p class=\"big\">The fast, convenient and reliable way to transfer money across Africa</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/payments-transfers/rapidtransfer\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer in-branch </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer Mobile </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Rapidtransfer Online </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div></div></div><div class=\"owl-controls\"><div class=\"owl-nav\"><div class=\"owl-prev\" style=\"\"><button type=\"button\"></button></div><div class=\"owl-next\" style=\"\"><button type=\"button\"></button></div></div><div class=\"owl-dots\" style=\"\"><div class=\"owl-dot active\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div></div></div></div>\n<script>\n    $(document).ready(function () {\n        var owl = $(\"#C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider1_carouselBlock\");\n        owl.owlCarousel({\n            autoplay: false,\n            autoplayTimeout: 0,\n            autoplaySpeed: 1000,\n            dotsSpeed: 1000,\n            navSpeed: 1000,\n            autoplayHoverPause: true,\n            dots: true,\n            loop: true,\n            items: 1,\n            \n            nav: true,\n            navText: ['<button type=\"button\"></button>', '<button type=\"button\"></button>'],\n            \n            transitionStyle: \"fade\"\n        });\n    });\n</script>\n        </div>\n        <div class=\"tabs-panel small-12 columns\" id=\"panel3v\">\n            <div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_carouselBlock\" class=\"owl-carousel owl-carousel-edit owl-theme owl-hidden owl-loaded\">\n\t\n    \n            \n        \n            \n        \n            \n        \n            \n        \n\n<div class=\"owl-stage-outer\"><div class=\"owl-stage\" style=\"transform: translate3d(-100px, 0px, 0px); transition: 0s; width: 600px;\"><div class=\"owl-item cloned\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_3\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Cashless Payments (POS)</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Pay directly and safely in-store using your card</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/pos\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>No need to carry cash </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Pay directly for goods </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Fast, easy and secure  </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Pay with your card as often as you like  </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item active\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Ecobank Mobile</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Take all your banking, payment and money transfer needs with you</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/mobile\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>MobileMoney </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Mobile Banking </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Mobile App </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_1\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Internet Banking</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">The safe, secure and easy way to do your banking online</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/internet-banking\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Enhanced security </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Real-time transactions </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Online payments </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Transfers, including Rapidtransfer </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>24/7 customer service </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Direct email feedback </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_2\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>ATMs</h3>\n\n\t                                <p class=\"big\">Faster cash withdrawals and check statements with your card</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/atms\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Withdraw money </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Easy to use </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Visit the ATM whenever </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Avoid the banking hall queues </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_3\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Cashless Payments (POS)</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Pay directly and safely in-store using your card</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/pos\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>No need to carry cash </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Pay directly for goods </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Fast, easy and secure  </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Pay with your card as often as you like  </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div><div class=\"owl-item cloned\" style=\"width: 100px; margin-right: 0px;\"><div id=\"C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_repCarousel_item_panel_0\" class=\"item\">\n\t\t\n                \n<div class=\"row\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-12 xmedium-8 columns slide-strapline\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"slide-strapline-inner\">\n\t\t\t\t\t\t\t\t\t<h3>Ecobank Mobile</h3>\n\t\t\t\t\t\t\t\t\t<p class=\"big\">Take all your banking, payment and money transfer needs with you</p>\n\t\t\t\t\t\t\t\t\t<a href=\"/personal-banking/ways-to-bank/mobile\" class=\"button dark-blue max-width-for-mobile\">Find out more</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"small-4 show-for-xmedium columns\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>MobileMoney </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Mobile Banking </li>\n\t\t\t\t\t\t\t\t\t<li> <i class=\"icon btr bt-check\"></i>Mobile App </li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div><!-- .columns -->\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\n            \n\t</div></div></div></div><div class=\"owl-controls\"><div class=\"owl-nav\"><div class=\"owl-prev\" style=\"\"><button type=\"button\"></button></div><div class=\"owl-next\" style=\"\"><button type=\"button\"></button></div></div><div class=\"owl-dots\" style=\"\"><div class=\"owl-dot active\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div><div class=\"owl-dot\"><span></span></div></div></div></div>\n<script>\n    $(document).ready(function () {\n        var owl = $(\"#C1__text_ctl00_section_tab_slider_tab_slider1_Owl_slider2_carouselBlock\");\n        owl.owlCarousel({\n            autoplay: false,\n            autoplayTimeout: 0,\n            autoplaySpeed: 1000,\n            dotsSpeed: 1000,\n            navSpeed: 1000,\n            autoplayHoverPause: true,\n            dots: true,\n            loop: true,\n            items: 1,\n            \n            nav: true,\n            navText: ['<button type=\"button\"></button>', '<button type=\"button\"></button>'],\n            \n            transitionStyle: \"fade\"\n        });\n    });\n</script>\n        </div>\n    </div>\n    <script>\n        $(document).ready(function () {\n            $(\".tabs-title > a\").on(\"click\", function (event) {\n                var _this = $(event.target);\n                if (_this.attr(\"aria-selected\")) {\n                    var _this_target = _this.attr(\"aria-controls\");\n                    setTimeout(function () {\n                        $(\"#\" + _this_target + \" .owl-carousel\").owlCarousel().data('owlCarousel').onResize();\n                    }, 50)\n                }\n            });\n        });\n    </script>\n</section>\n\n    <section>\n        <div id=\"C1__text_ctl00_panel_entertainment\" class=\"entertainment random-block\" style=\"background-image: url('/upload/publication/20160530061025643TB8YQKEA7F/20161203025015446C.jpg')\">\n\t\n            <div class=\"row\">\n                <div class=\"columns xsmall-12 medium-6\">\n                    <h3>\n                        Rapidtransfer</h3>\n                    <p class=\"big\">\n                        Send money the quick and easy way\n                    </p>\n                    <a href=\"/personal-banking/payments-transfers/rapidtransfer\" class=\"button ecogreen max-width-for-mobile\">Read more</a>\n                </div>\n            </div>\n        \n</div>\n    </section>\n    \n<section class=\"entertainment live-chat-advice\">\n  <div class=\"row\">\n    <div class=\"columns small-12 xsmall-6\">\n      <div class=\"live-chat\">\n<h3>Help and Security Centre</h3>\n \n<p class=\"big\">Be safe and secure online\n</p>\n<a href=\"/personal-banking/help-security\" class=\"button max-width-for-mobile\">Find out more</a>\n\n      </div>\n    </div>\n    <div class=\"columns small-12 xsmall-6 text\">\n      <div class=\"advice\">\n<h3>Advice</h3>\n \n<p class=\"big\">Save for tomorrow, today\n</p>\n<p>How saving can make a difference to you\n</p>\n<a class=\"button dark-blue max-width-for-mobile\" href=\"/personal-banking/help-center/tips-advice\">Find out more</a>\n\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n    \n    <section class=\"cards\">\n        <div class=\"row\">\n            <div class=\"columns small-12 xsmall-6 image text-center\">\n                <img src=\"/img/eco/eco_card.jpg\" alt=\"Debit Card\">\n            </div>\n            <div class=\"columns small-12 xsmall-6 text\">\n\n<h3>Cards</h3>\n\n\n <p class=\"big\">Why carry money? Go plastic, go cashless</p>\n\n                \n<a href=\"/personal-banking/products-services/cards\" class=\"button ecogreen max-width-for-mobile\">Find out more</a>\n\n            </div>\n        </div>\n    </section>\n\n\n    \n    <section class=\"loans\">\n        <div class=\"row\">\n            <div class=\"columns small-12 medium-5\">\n\n<h3>Loans</h3>\n\n\n<p class=\"big\">Making your plans a reality</p><a href=\"/personal-banking/products-services/loans\" class=\"button dark-blue\">Find out more</a>\n\n            </div>\n            <div class=\"columns small-7 show-for-medium image text-center\">\n                <img src=\"/img/eco/smiley_guy-3.png\">\n            </div>\n        </div>\n    </section>\n\n\n    \n    <section class=\"mobile\">\n        <div class=\"row\">\n            <div class=\"columns small-12 xsmall-6 image\">\n                <img src=\"/img/eco/eco_mob.png\">\n            </div>\n            <div class=\"columns small-12 xsmall-6 text\">\n                \n<h3>Mobile Banking</h3>\n\n                \n <p class=\"big\">Bank on the go 24/7</p>\n\n                \n<a href=\"/personal-banking/ways-to-bank/mobile/mobile-banking-via-app\" class=\"button dark-blue\">Download the app</a>\n\n\n            </div>\n        </div>\n    </section>\n\n\n    \n    <section class=\"latest-news latest-news-personal\">\n        <div class=\"row\">\n            <div class=\"small-12 columns\">\n                <h2>\n                    \nLatest News\n\n                </h2>\n            </div>\n        </div>\n        <div class=\"row\">\n            \n\n\n<div data-equalizer=\"o0dx5v-equalizer\" data-equalize-on=\"small\" data-resize=\"3x15pv-eq\">\n    \n        \n            <div id=\"C1__text_ctl00_text_last_news_ctl00_repNews_news_item_0\" class=\"columns small-12 xsmall-6 medium-6 xmedium-4 news-item\" data-equalizer-watch=\"\" style=\"height: 260px;\">\n\t\n                <h3>\n                    Ecobank announces pre-tax loss of $131m on revenue of $2.0 billion for FY 2016</h3>\n                <div class=\"date\">\n                    18 April 2017\n                </div>\n                <a id=\"C1__text_ctl00_text_last_news_ctl00_repNews_download_0\" class=\"button dark-blue btn-download btl bt-cloud-download max-width-for-mobile\" href=\"/upload/publication/20170418011919796NF1UF3M2CC/20170418011915350V.pdf\" target=\"_blank\">Download</a>\n            \n</div>\n        \n            <div id=\"C1__text_ctl00_text_last_news_ctl00_repNews_news_item_1\" class=\"columns small-12 xsmall-6 medium-6 xmedium-4 news-item show-for-xsmall\" data-equalizer-watch=\"\" style=\"height: 260px;\">\n\t\n                <h3>\n                    Ecobank Mobile App Launched in Kenya</h3>\n                <div class=\"date\">\n                    21 February 2017\n                </div>\n                <a id=\"C1__text_ctl00_text_last_news_ctl00_repNews_download_1\" class=\"button dark-blue btn-download btl bt-cloud-download max-width-for-mobile\" href=\"/upload/publication/20170221090130044PH3VG5P4DD/201702220257471758.pdf\" target=\"_blank\">Download</a>\n            \n</div>\n        \n            <div id=\"C1__text_ctl00_text_last_news_ctl00_repNews_news_item_2\" class=\"columns small-12 xsmall-6 medium-6 xmedium-4 news-item show-for-xmedium\" data-equalizer-watch=\"\" style=\"height: 260px;\">\n\t\n                <h3>\n                    Afreximbank and Ecobank agree on African trade and investment promotion including US$500 million programme</h3>\n                <div class=\"date\">\n                    14 February 2017\n                </div>\n                <a id=\"C1__text_ctl00_text_last_news_ctl00_repNews_download_2\" class=\"button dark-blue btn-download btl bt-cloud-download max-width-for-mobile\" href=\"/upload/publication/20170214051232356HNA8DJYTC4/20170214051225211T.pdf\" target=\"_blank\">Download</a>\n            \n</div>\n        \n        \n</div>\n\n\n\n        </div>\n    </section>\n    <script>\n        var map = null;\n        var allmarkers = [];\n        var infowindow = null;\n        var bounceMarker = null;\n\n        //AIzaSyCZTm65L-NXxcLwl9H92cPmZ99-ywTY-UI\n        var map_master = {\n            init_map: function () {\n                map = new google.maps.Map(document.getElementById('map'), {\n                    center: { lat: -34.397, lng: 150.644 },\n                    zoom: 8,\n\n                    zoomControl: true,\n                    scrollwheel: false,\n                    disableDoubleClickZoom: true,\n                    zoomControlOptions: {\n                        position: google.maps.ControlPosition.LEFT_TOP\n                    },\n                });\n\n            },\n\n            setMapOnAll: function (map) {\n                for (var i = 0; i < allmarkers.length; i++) {\n\n                    allmarkers[i].setMap(map);\n                }\n            },\n\n            get_all_branches: function () {\n\n                var ccode = \"ZZ\";\n                if (ccode == undefined || ccode == null || ccode.toUpperCase() == \"ZZ\") {\n                    $(\".atms\").remove();\n                    return;\n                }\n                var btype = 3;\n                return $.ajax({\n                    url: \"/source_pages/MapHandler.ashx\",\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { 'method': 'get_branches', 'ccode': ccode, 'btype': btype },\n                    success: function (data) {\n                        var main_sl_cities = document.getElementById('main_sl_cities');\n\n                        $(main_sl_cities).empty();\n\n                        data.forEach(function (option, index) {\n                            main_sl_cities.options[main_sl_cities.options.length] = new Option($.trim(option[\"Branch_area\"]), $.trim(option[\"Branch_area\"]));\n                            if (index == 0) {\n                                $(\"#main_sl_cities\").val(option[\"Branch_area\"]);\n                            }\n                        });\n                        $(main_sl_cities).find(\"option\").eq(0).prop('selected', true);\n                        var currentUserCity = readCookie(\"geoIp_city\");\n                        if (currentUserCity !== undefined && currentUserCity !=null) {\n                            $(main_sl_cities).find(\"option[value='\" + currentUserCity.toUpperCase() + \"']\").prop('selected', true);\n                        }\n                    }\n                });\n            },\n\n            toggleBounce: function () {\n                if (marker.getAnimation() !== null) {\n                    marker.setAnimation(null);\n                } else {\n                    marker.setAnimation(google.maps.Animation.BOUNCE);\n                }\n            },\n\n            clearMarkers: function () {\n                map_master.setMapOnAll(null);\n            },\n\n            showMarkers: function () {\n                map_master.setMapOnAll(map);\n            },\n\n            deleteMarkers: function () {\n                map_master.clearMarkers();\n                allmarkers = [];\n            },\n            get_markers: function () {\n\n                var parameters = { 'method': 'get_markers' };\n                parameters.searchText = \"\";\n\n                var city = $(\"#main_sl_cities\").val() || \"\";\n                var btype = 3;\n                var ccode = \"ZZ\";\n\n                if (ccode == undefined || ccode == null || ccode.toUpperCase() == \"ZZ\") {\n                    $(\".atms\").remove();\n                    return;\n                }\n\n                parameters.city = city;\n                parameters.btype = btype;\n                parameters.ccode = ccode;\n                return $.ajax({\n                    url: \"/source_pages/MapHandler.ashx\",\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: parameters\n                });\n            },\n            get_destignations_by_branches: function () {\n\n                var currentBranch = $(\"#main_sl_cities\").val();\n                var ccode = \"ZZ\";\n\n                if (ccode == undefined || ccode == null || ccode.toUpperCase() == \"ZZ\") {\n                    $(\".atms\").remove();\n                    return;\n                }\n                return $.ajax({\n                    url: \"/source_pages/MapHandler.ashx\",\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { 'method': 'get_destignations', 'currentBranch': currentBranch, 'ccode': ccode },\n                    success: function (data) {\n                        var main_sl_branches = document.getElementById('main_sl_branches');\n                        $(main_sl_branches).empty();\n                        try {\n                            main_sl_branches.options[main_sl_branches.options.length] = new Option(\"\", \"\");\n                            data.forEach(function (option) {\n                                main_sl_branches.options[main_sl_branches.options.length] = new Option(option[\"AgenceDesignation\"], option[\"AgenceDesignation\"]);\n                            });\n                        }\n                        catch (exc) {\n                            console.log(exc);\n                        }\n                    }\n                });\n            },\n            add_markers_on_map: function (get_marker_method, focus_latlng) {\n                map_master.deleteMarkers();\n                var temp_marker = {};\n                var markers = \"\";\n                //icon: iconBase + 'parking_lot_maps.png'\n                $.when(get_marker_method()).then(function (data, textStatus, jqXHR) {\n                    markers = data;\n\n                    if (markers.length != 0) {\n\n                        var latlng = null;\n\n                        markers.forEach(function (marker, index) {\n\n                            if (index == 0 && marker[\"Latitude\"] != null && marker[\"Longitude\"] != null) {\n                                map.setCenter(new google.maps.LatLng(parseFloat(marker[\"Latitude\"]), parseFloat(marker[\"Longitude\"])));\n\n                            }\n                            var pinIcon = new google.maps.MarkerImage(\n                            '/img/PIN.png',\n                            null,\n                            null,\n                            null,\n                            new google.maps.Size(32, 32)\n                            );\n                            var _marker = new google.maps.Marker({\n                                position: { lat: parseFloat(marker[\"Latitude\"]), lng: parseFloat(marker[\"Longitude\"]) },\n                                map: map,\n                                icon: pinIcon,\n                                animation: google.maps.Animation.DROP\n\n                            });\n\n                            _marker.options = {};\n                            _marker.options.id = marker[\"LOCID\"];\n                            _marker.options.latitude = marker[\"Latitude\"];\n                            _marker.options.longitude = marker[\"Longitude\"];\n                            _marker.options.adresse = marker[\"AgenceAdresse\"];\n                            _marker.options.designation = marker[\"AgenceDesignation\"];\n                            _marker.options.branch = marker[\"Branch_area\"];\n                            _marker.options.telephone = marker[\"AgenceTelephone\"];\n                            _marker.options.sun = marker[\"Sun\"];\n                            _marker.options.sat = marker[\"Sat\"];\n                            _marker.options.schedule = marker[\"MotoFri\"];\n                            _marker.options.active = marker[\"IsActive\"];\n                            _marker.options.main = marker[\"IsMainOffice\"];\n\n                            var data = \"Ecobank - \" + _marker.options.branch + \" - \" + _marker.options.adresse;\n                            _marker.tooltipContent = data;\n                            if (infowindow) {\n                                infowindow.close();\n                                infowindow.setContent(data);\n                            }\n                            infowindow = new google.maps.InfoWindow({\n                                content: data\n                            });\n\n                            function toggleBounce(mark) {\n                                if (mark.getAnimation() !== null) {\n                                    mark.setAnimation(null);\n                                } else {\n                                    mark.setAnimation(google.maps.Animation.BOUNCE);\n                                }\n                            }\n                            google.maps.event.addListener(_marker, 'click', function () {\n                                infowindow.setContent(data);\n                                infowindow.open(map, _marker);\n                                if (bounceMarker != null) {\n                                    toggleBounce(bounceMarker);\n                                };\n                                bounceMarker = _marker;\n\n                                toggleBounce(_marker);\n                                var container = $('#locations_wrapper'),\n                                      scrollTo = $('#locationid_' + _marker.options.id);\n                                container.scrollTop(\n                                    scrollTo.offset().top - container.offset().top + container.scrollTop() + 390\n                                );\n                            });\n                            allmarkers.push(_marker);\n                        });\n                    }\n                    else {\n                        $(\".atms\").remove()\n                    }\n                });\n\n            }\n        }\n        function readCookie(name) {\n            var nameEQ = name + \"=\";\n            var ca = document.cookie.split(';');\n            for (var i = 0; i < ca.length; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n            }\n            return null;\n        }\n        $(document).on(\"ready\", function () {\n            $.when(map_master.get_all_branches()).then(function (data) {\n                if (data === undefined) {\n                    $(\".atms\").remove();\n                    return;\n                }\n                map_master.init_map();\n                map_master.add_markers_on_map(map_master.get_markers);\n            });\n        });\n    </script>\n</section>\n\n\n\n\n                    \n\n\n<div class=\"share-bar \">\n    <div id=\"fb-root\"></div>\n    <script>\n        setTimeout(function () {\n            window.fbAsyncInit = function () {\n                FB.init({\n                    appId: '1004553932967992',\n                    xfbml: true,\n                    version: 'v2.6'\n                });\n            };\n            (function (d, s, id) {\n                var js, fjs = d.getElementsByTagName(s)[0];\n                if (d.getElementById(id)) { return; }\n                js = d.createElement(s); js.id = id;\n                js.src = \"//connect.facebook.net/en_US/sdk.js\";\n                fjs.parentNode.insertBefore(js, fjs);\n            }(document, 'script', 'facebook-jssdk'));\n        },2000)\n        \n    </script>\n    \n\n\n   \n    <div class=\"row\">\n        \n        <div class=\"xsmall-8 columns small-text-center medium-text-left\">\n\n            <div class=\"item share collapsed\">\n                <span>Share</span><i class=\"icon btl bt-paper-plane\"></i>\n                <div class=\"facebook-twitter-share\">\n                    <span class=\"fab fab-facebook-alt\" id=\"facebook_share_button\"></span>\n                    <span class=\"fab fab-twitter\" id=\"twitter_share_button\"></span>\n                </div>\n            </div>\n            \n                <div class=\"item email\">\n                    <a id=\"email_button\" data-open=\"pnl_print_page\">\n                        <span>Email\n                        </span>\n                        <i class=\"icon btl bt-envelope\"></i>\n                    </a>\n\n                </div>\n                <div class=\"hidden modal_panel\" id=\"pnl_print_page\" data-modal-panel=\"\">\n                    <div class=\"inner\">\n                        <div class=\"write-to-us\" data-azn-validate=\"\" data-on-blur=\"\">\n                            <button class=\"close-button\" data-close=\"\" aria-label=\"\" type=\"button\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                            <h3>\n                                Share page by E-mail\n                            </h3>\n                            <br>\n                            <input name=\"ctl00$ctl43$tb_email_sender\" type=\"text\" maxlength=\"50\" id=\"ctl43_tb_email_sender\" required=\"\" pattern=\"email\" placeholder=\"E-mail\"><textarea name=\"ctl00$ctl43$tb_message\" rows=\"2\" cols=\"20\" id=\"ctl43_tb_message\" required=\"\" placeholder=\"Your message\">Hi, \nI found this on the Ecobank website and wanted to share it with you: Ecobank - Personal Banking, http://www.ecobank.com/personal-banking</textarea>\n                            <div class=\"row\">\n                                <div class=\"columns xsmall-5 float-right\">\n                                    <a id=\"a-send-message-share\" class=\"button max-width-for-mobile expanded\">Send</a>\n                                    <script>\n                                        $(\"#a-send-message-share\").click(function () {\n                                            if (aznValidation.validate($(this))) {\n                                                var _$mailTo = $(\"#ctl43_tb_email_sender\").val(),\n                                               _$body = $(\"#ctl43_tb_message\").val(),\n                                                _$self = $(this);\n                                                $.ajax({\n                                                    url: \"/PublicationHandler.ashx\",\n                                                    type: \"POST\",\n                                                    dataType: \"json\",\n                                                    data: { \"method\": \"SharePageEmail\", \"mailTo\": _$mailTo, \"body\": _$body }\n                                                }).done(function (data) {\n                                                    aznMsg.msgOk(\"Mail has been sent\");\n                                                    _$self.parents(\"[data-modal-panel]\").addClass(\"hidden\");\n                                                    $(\"html\").removeClass(\"overflow-hidden\");\n                                                })\n                                               .fail(function (jqXHR, textStatus) {\n                                                   aznMsg.msgFail(\"Mail hasn't been sent. Error\");\n                                               });\n                                            }\n                                        })\n                                    </script>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <script>\n                    $(document).ready(function () {\n                        $(\"a[data-open]\").click(function () {\n                            $(\"#\" + $(this).attr(\"data-open\")).removeClass(\"hidden\");\n                            $(\"html\").addClass(\"overflow-hidden\");\n                        })\n                        $(\"[data-close]\").click(function () {\n                            $(this).parents(\"[data-modal-panel]\").addClass(\"hidden\");\n                            $(\"html\").removeClass(\"overflow-hidden\");\n                        })\n                        $(\"[data-modal-panel]\").click(function () {\n                            if ($(event.target).closest(\".inner\").size() == 0) {\n                                $(this).addClass(\"hidden\");\n                                $(\"html\").removeClass(\"overflow-hidden\");\n                            }\n                        })\n                        \n                    });\n\n                </script>\n            \n            <div class=\"item print hidden hide-for-small-only\" id=\"b_print_footer\" onclick=\"window.print();\">\n                <span>Print</span><i class=\"icon btl bt-print\"></i>\n            </div>\n\n        </div>\n\n        <div class=\"xsmall-3 columns back-to-top-container small-text-center medium-text-right\">\n            <div class=\"item back-to-top\" id=\"ToTop\">\n                <i class=\"icon btl bt-circle-arrow-up\"></i>\n                <span>Back to Top</span>\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n   \n    $(document).ready(function () {\n        $(\"#facebook_share_button\").click(function () {\n            FB.ui({\n                method: 'share',\n                href: window.location.href,\n                mobileIframe: true\n            }, function (response) { });\n        });\n        $(\"#twitter_share_button\").click(function () {\n            javascript: window.open(\"http://twitter.com/share?url=\" + window.location.href + \"&\", '_blank');\n        });\n        if ($(\"#dividePanel1\").length > 0 || $(\"#content-with-accordion\").length > 0 || $(\"#content-with-table\").length > 0) {\n            $(\"#b_print_footer\").removeClass(\"hidden\");\n        }\n    });\n</script>\n                </div>\n                <!--footer -->\n            </div>\n            \n\n<footer id=\"footer\">\n    <!--foot-block-2-menu -->\n    <asp:hiddenfield id=\"HOST_MACHINE_NAME\" value=\"442885-WEB1\">\n    <div class=\"footer-menu\">\n        <div class=\"row\">\n            <div class=\"small-12 medium-4 columns\">\n                <h3>Ecobank Banking</h3>\n                \n    <ul class=\"menu vertical\">\n    \n        <li><a target=\"_self\" href=\"/group\"> Group Banking</a></li><li><a target=\"_self\" href=\"/corporate-investment-banking\">Corporate and Investment Banking</a></li><li><a target=\"_self\" href=\"/commercial-banking\">Commercial Banking</a></li>\n\n    </ul>\n    \n\n            </div>\n            <div class=\"small-12 medium-4 columns float-left\">\n                \n                <h3>\n                    \n                </h3>\n                \n    <ul class=\"menu vertical\">\n    \n        <li><a target=\"_self\" href=\"/personal-banking/security-center\">Security</a></li><li><a target=\"_self\" href=\"/personal-banking/help-center\">Help Centre</a></li><li><a target=\"_self\" href=\"/personal-banking/contact-us\">Contact</a></li>\n\n    </ul>\n    \n\n            </div>\n            \n            \n        </div>\n    </div>\n    <!--foot-block-3-search-social -->\n    <div class=\"footer-search-social\">\n        <div class=\"row\">\n            <div class=\"columns medium-7 show-for-medium\">\n                <div id=\"foot1_panel_top_search_id\" class=\"input-group search\" onkeypress=\"javascript:return WebForm_FireDefaultButton(event, 'foot1_b_search')\">\n\t\n                    <label>\n                        <span class=\"show-for-sr\">Search</span>\n                        <input name=\"ctl00$foot1$tb_search\" type=\"text\" id=\"foot1_tb_search\" class=\"input-group-field\" placeholder=\"Search\">\n                        \n                    </label>\n                    <div class=\"input-group-button\">\n                        <input type=\"button\" name=\"ctl00$foot1$b_search\" value=\"\" onclick=\"javascript:__doPostBack('ctl00$foot1$b_search','')\" id=\"foot1_b_search\">\n                        \n                        \n                    </div>\n                \n</div>\n            </div>\n            <div class=\"columns medium-5 small-12 vertical-align small-text-center medium-text-right\">\n                <div class=\"social-links vertical-align-inside\">\n                    <a class=\"social-button has-tip top\" data-open=\"pnl_chat_frame\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"rnyoxo-tooltip\" aria-describedby=\"t3nj5o-tooltip\" data-yeti-box=\"t3nj5o-tooltip\" data-toggle=\"t3nj5o-tooltip\" data-resize=\"t3nj5o-tooltip\">\n                        <span> <i class=\"bts bt-comments\"></i>\n                        </span></a>\n                    \n\n<a href=\"https://www.youtube.com/user/EcobankGroup\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"5rj10h-tooltip\" aria-describedby=\"7umsdo-tooltip\" data-yeti-box=\"7umsdo-tooltip\" data-toggle=\"7umsdo-tooltip\" data-resize=\"7umsdo-tooltip\"><span class=\"fab fab-youtube\"></span></a>\n<a href=\"https://www.facebook.com/EcobankGroup/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"sg0kon-tooltip\" aria-describedby=\"73kvjb-tooltip\" data-yeti-box=\"73kvjb-tooltip\" data-toggle=\"73kvjb-tooltip\" data-resize=\"73kvjb-tooltip\"><span class=\"fab fab-facebook-alt\"></span></a>\n<a href=\"https://twitter.com/GroupEcobank\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"6c32kc-tooltip\" aria-describedby=\"46gg86-tooltip\" data-yeti-box=\"46gg86-tooltip\" data-toggle=\"46gg86-tooltip\" data-resize=\"46gg86-tooltip\"><span class=\"fab fab-twitter\"></span></a>\n<a href=\"https://www.instagram.com/ecobank_group/\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"5myneo-tooltip\" aria-describedby=\"nutqbc-tooltip\" data-yeti-box=\"nutqbc-tooltip\" data-toggle=\"nutqbc-tooltip\" data-resize=\"nutqbc-tooltip\"><span class=\"fab fab-instagram\"></span></a>\n<a href=\"https://www.linkedin.com/in/ecobank-group-26a13447\" class=\"social-button has-tip top\" target=\"_blank\" title=\"\" aria-haspopup=\"true\" data-disable-hover=\"false\" data-tooltip=\"6zq7xg-tooltip\" aria-describedby=\"herqqe-tooltip\" data-yeti-box=\"herqqe-tooltip\" data-toggle=\"herqqe-tooltip\" data-resize=\"herqqe-tooltip\"><span class=\"fab fab-linkedin-alt\"></span></a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!--foot-block-4-copyright -->\n    <div class=\"footer-copyright\">\n        <div class=\"row\">\n            <div class=\"medium-12 large-10 columns small-text-center large-text-left\" id=\"footer-menu-3\">\n                \n    <ul class=\"menu \">\n    \n        <li><a target=\"_self\" href=\"/personal-banking/privacy-policy\">Privacy policy</a></li><li><a target=\"_self\" href=\"/personal-banking/terms-of-use\">Terms of use </a></li><li><a target=\"_self\" href=\"/personal-banking/sitemap\">Sitemap</a></li><li><a target=\"_blank\" href=\"https://remoteaccess.ecobank.com/\">Extranet </a></li>\n\n    </ul>\n    \n\n            </div>\n            <div class=\"medium-12 large-2 columns small-text-center large-text-right\">\n                <div class=\"copyright\">\n                    © Ecobank\n                    2017\n                </div>\n            </div>\n        </div>\n    </div>\n</asp:hiddenfield></footer>\n<script>\n    $(document).ready(function () {\n        $(\"#footer-menu-3\").find(\"li:last-child a\").attr(\"target\", \"_blank\");\n    });\n</script>\n        </div>\n        \n\n        \n        <script type=\"text/javascript\">\n            $(document).foundation();\n            $('input, textarea').placeholder();\n            aznValidation.patterns['names'] = /^[-' a-zA-ZÀ-ÖØ-öø-ſ]+$/;\n            aznValidation.validators['password'] = function ($el) {\n                var password = $el.val();\n                var passwordStrength = checkPassword(password);\n                return (passwordStrength > 80);\n            };\n        \n        </script>\n        \n\n<script type=\"text/javascript\">\n//<![CDATA[\n\ntheForm.oldSubmit = theForm.submit;\ntheForm.submit = WebForm_SaveScrollPositionSubmit;\n\ntheForm.oldOnSubmit = theForm.onsubmit;\ntheForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;\n//]]>\n</script>\n</form><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"vd0psr-tooltip\" style=\"display: none;\">Youtube</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"vx6jr6-tooltip\" style=\"display: none;\">Facebook</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"sfqdqm-tooltip\" style=\"display: none;\">Twitter</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"ccd0jy-tooltip\" style=\"display: none;\">Instagram</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"kbjejx-tooltip\" style=\"display: none;\">LinkedIn</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"es1wn2-tooltip\" style=\"display: none;\">Youtube</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"2gf0m9-tooltip\" style=\"display: none;\">Facebook</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"zh8zrj-tooltip\" style=\"display: none;\">Twitter</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"1zkwbf-tooltip\" style=\"display: none;\">Instagram</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"tudo2a-tooltip\" style=\"display: none;\">LinkedIn</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"t3nj5o-tooltip\" style=\"display: none;\">Live chat with Ecobank</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"7umsdo-tooltip\" style=\"display: none;\">Youtube</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"73kvjb-tooltip\" style=\"display: none;\">Facebook</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"46gg86-tooltip\" style=\"display: none;\">Twitter</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"nutqbc-tooltip\" style=\"display: none;\">Instagram</div><div class=\"tooltip top\" role=\"tooltip\" aria-hidden=\"true\" data-is-active=\"false\" data-is-focus=\"false\" id=\"herqqe-tooltip\" style=\"display: none;\">LinkedIn</div>\n\n\n</body>"}
