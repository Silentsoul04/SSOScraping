{"link":"https://portal.kca.ac.ke/kca/hr login.aspx","html":"<head><link href=\"App_Themes/KCA%20University/Default.css\" type=\"text/css\" rel=\"stylesheet\"><link href=\"App_Themes/KCA%20University/frame.css\" type=\"text/css\" rel=\"stylesheet\"><link id=\"ctl00_Link1\" rel=\"shortcut icon\" href=\"App_Images/app.ico\" type=\"image/x-icon\"><link id=\"ctl00_Link2\" rel=\"icon\" href=\"App_Images/app.ico\" type=\"image/jpg\"><title>\n\tKCA University: Signup and Login\n</title>\n<script language=\"javascript\" type=\"text/javascript\">\n// <!CDATA[\n\nfunction TABLE1_onclick() {\n\n}\n\n// ]]>\n</script>\n</head>\n<body>\n    <form name=\"aspnetForm\" method=\"post\" action=\"hr login.aspx\" id=\"aspnetForm\">\n<div>\n<input type=\"hidden\" name=\"__LASTFOCUS\" id=\"__LASTFOCUS\" value=\"\">\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwUJNTI2Nzc3OTI3D2QWAmYPZBYCAgQPZBYIAgUPDxYCHgRUZXh0BUtTaXRlLUhpdCBDb3VudGVyOiA0ODM2MzE8YnI+ICAgICBUaGlzIHBhZ2Ugd2FzIGxhc3QgcmVmcmVzaGVkIGF0IDY6MDc6NTYgQU1kZAIHDw8WAh8ABR9Ub2RheSBpcyBTdW5kYXksIEFwcmlsIDIzLCAyMDE3ZGQCCw9kFgICAQ8PFgIfAAUtVGhlcmUgYXJlIDIgYWN0aXZlIHVzZXJzIGN1cnJlbnRseSBsb2dnZWQgaW4uZGQCFQ9kFgICAw8PFgIfAGVkZBgBBRVjdGwwMCRNYWluJE11bHRpVmlldzEPD2RmZKr2XmUdBwjJwK9agCPQ7SxlRIBOZVHiMry+K8aXv33S\">\n</div>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nvar theForm = document.forms['aspnetForm'];\nif (!theForm) {\n    theForm = document.aspnetForm;\n}\nfunction __doPostBack(eventTarget, eventArgument) {\n    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {\n        theForm.__EVENTTARGET.value = eventTarget;\n        theForm.__EVENTARGUMENT.value = eventArgument;\n        theForm.submit();\n    }\n}\n//]]>\n</script>\n\n\n<script src=\"/kca/WebResource.axd?d=IUYlWTwEY44xs_RLy4AUJ2WIGVjPfMPZZIQjmICJYFXr4jeW58OExdkhIYFPtIYj5vdk3F8IbYbHGo6lJ4uJnKmRulvnYtetU6iFSZr7NI81&amp;t=635147401110920824\" type=\"text/javascript\"></script>\n\n<script type=\"text/javascript\">\n//<![CDATA[\nvar Anthem_FormID = \"aspnetForm\";\n//]]>\n</script><script type=\"text/javascript\">\n//<![CDATA[\n// Anthem.js\n// Updated Sep 18, 2007\n// Anthem.Manager.GetScripts: false\n\nfunction Anthem_Encode(s){\n\tif (typeof encodeURIComponent == \"function\") {\n\t\t// Use JavaScript built-in function\n\t\t// IE 5.5+ and Netscape 6+ and Mozilla\n\t\treturn encodeURIComponent(s);\n\t} else {\n\t\t// Need to mimic the JavaScript version\n\t\t// Netscape 4 and IE 4 and IE 5.0\n\t\treturn encodeURIComponentNew(s);\n\t}\n}\n\n// Primarily used by Anthem.Manager to add an onsubmit event handler\n// when validators are added to a page during a callback.\nfunction Anthem_AddEvent(control, eventType, functionPrefix) {\n    var ev;\n    eval(\"ev = control.\" + eventType + \";\");\n    if (typeof(ev) == \"function\") {\n        ev = ev.toString();\n        ev = ev.substring(ev.indexOf(\"{\") + 1, ev.lastIndexOf(\"}\"));\n    }\n    else {\n        ev = \"\";\n    }\n    var func;\n    if (navigator.appName.toLowerCase().indexOf('explorer') > -1) {\n        func = new Function(functionPrefix + \" \" + ev);\n    }\n    else {\n        func = new Function(\"event\", functionPrefix + \" \" + ev);\n    }\n    eval(\"control.\" + eventType + \" = func;\");\n}\n\nfunction Anthem_GetXMLHttpRequest() {\n\tif (window.XMLHttpRequest) {\n\t\treturn new XMLHttpRequest();\n\t} else {\n\t\tif (window.Anthem_XMLHttpRequestProgID) {\n\t\t\treturn new ActiveXObject(window.Anthem_XMLHttpRequestProgID);\n\t\t} else {\n\t\t\tvar progIDs = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.5.0\", \"Msxml2.XMLHTTP.4.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n\t\t\tfor (var i = 0; i < progIDs.length; ++i) {\n\t\t\t\tvar progID = progIDs[i];\n\t\t\t\ttry {\n\t\t\t\t\tvar x = new ActiveXObject(progID);\n\t\t\t\t\twindow.Anthem_XMLHttpRequestProgID = progID;\n\t\t\t\t\treturn x;\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\n// This array is used to keep track of clientCallBack functions when using\n// an IOFrame to handle callbacks.\nvar callbackFrames = new Array();\n\n// This function is called by the onload event of the IOFrame after the\n// callback response is received. The function parses the response, updates\n// the page, and invokes the clientCallBack function.\nfunction Anthem_HandleIOFrameResponse(frameid) {\n    var iframe = document.getElementById(frameid);\n    if (iframe != null) {\n        var doc = Anthem_ExtractIFrameDocument(iframe);\n        if (doc.getElementsByTagName(\"textarea\").length > 0) {\n            // Extract the response\n            var response = { responseText: doc.getElementById(\"response\").value.replace(/<\\/anthemarea>/, \"</textarea>\") };\n            if (typeof(Anthem_DebugResponseText) == \"function\") {\n                Anthem_DebugResponseText(response.responseText); \n            }\n            // Parse the response\n            var result = Anthem_GetResult(response); \n            if (result.error) { \n                if (typeof(Anthem_DebugError) == \"function\") {\n                    Anthem_DebugError(result.error); \n                }\n                if (typeof(window.Anthem_Error) == \"function\") { \n                    Anthem_Error(result); \n                } \n            } \n            // Update the page \n            Anthem_UpdatePage(result); \n            // Run the client scripts\n            Anthem_EvalClientSideScript(result); \n            // Run the custom post callback function\n            for (var index in callbackFrames) {\n                var frame = callbackFrames[index];\n                if (frame != null && frame.id == frameid) {\n                    callbackFrames.splice(index, 1);\n                    frame.clientCallBack(result, frame.clientCallBackArg);\n                    break;\n                }\n            }\n            // Run the common post callback function\n            if (typeof(window.Anthem_PostCallBack) == \"function\") { \n                Anthem_PostCallBack(); \n            } \n        }\n        setTimeout(\"document.body.removeChild(document.getElementById(\\\"\" + frameid + \"\\\"))\", 10);\n    }\n}\n\n// Returns the iframe document\nfunction Anthem_ExtractIFrameDocument(iFrameEl) {\n  var doc = null;\n  if (iFrameEl.contentDocument) { // For NS6\n    doc = iFrameEl.contentDocument;\n  } else if (iFrameEl.contentWindow) { // For IE5.5 and IE6\n    doc = iFrameEl.contentWindow.document;\n  } else if (iFrameEl.document) { // For IE5\n    doc = iFrameEl.document;\n  } else {\n    //alert(\"Error: could not find iFrame document\");\n    return null;\n  }\n  return doc;\n}\n\n// Returns the form that is posted back using AJAX\nfunction Anthem_GetForm() {\n    var form = document.getElementById(Anthem_FormID);\n    return form;\n}\n\n// Returns the URL for callbacks\nfunction Anthem_GetCallBackUrl() {\n    var form = Anthem_GetForm();\n    var action = form.action + (form.action.indexOf('?') == -1 ? \"?\" : \"&\") + \"Anthem_CallBack=true\";\n    return action;\n}\n\nfunction Anthem_CallBack(url, target, id, method, args, clientCallBack, clientCallBackArg, includeControlValuesWithCallBack, updatePageAfterCallBack) {\n\tif (typeof(window.Anthem_PreCallBack) == \"function\") {\n\t\tvar preCallBackResult = Anthem_PreCallBack();\n\t\tif (!(typeof preCallBackResult == \"undefined\" || preCallBackResult)) {\n\t\t\tif (typeof(window.Anthem_CallBackCancelled) == \"function\") {\n\t\t\t\tAnthem_CallBackCancelled();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n    var encodedData = \"\";\n    if (target == \"Page\") {\n        encodedData += \"&Anthem_PageMethod=\" + method;\n    } else if (target == \"MasterPage\") {\n        encodedData += \"&Anthem_MasterPageMethod=\" + method;\n    } else if (target == \"Control\") {\n        encodedData += \"&Anthem_ControlID=\" + id.split(\":\").join(\"_\");\n        encodedData += \"&Anthem_ControlMethod=\" + method;\n    }\n\tif (args) {\n\t\tfor (var argsIndex = 0; argsIndex < args.length; ++argsIndex) {\n\t\t\tif (args[argsIndex] instanceof Array) {\n\t\t\t\tfor (var i = 0; i < args[argsIndex].length; ++i) {\n\t\t\t\t\tencodedData += \"&Anthem_CallBackArgument\" + argsIndex + \"=\" + Anthem_Encode(args[argsIndex][i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tencodedData += \"&Anthem_CallBackArgument\" + argsIndex + \"=\" + Anthem_Encode(args[argsIndex]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (updatePageAfterCallBack) {\n\t\tencodedData += \"&Anthem_UpdatePage=true\";\n\t}\n\t\n\t// Anthem will normally use an XmlHttpRequest to communicate with the server. \n\t// But if an Anthem.FileUpload control is discovered on the page, then Anthem\n\t// will use a hidden IFRAME instead. This hidden IFRAME is often called an IOFrame\n\t// by AJAX library authors, so that is the name we use here.\n\tvar useIOFrame = false;\n\t\n\t// Scan the controls on the form and extract their values.\n\tif (includeControlValuesWithCallBack) {\n\t\tvar form = Anthem_GetForm();\n\t\tif (form != null) {\n\t\t\tfor (var elementIndex = 0; elementIndex < form.length; ++elementIndex) {\n\t\t\t\tvar element = form.elements[elementIndex];\n\t\t\t\tif (element.name) {\n\t\t\t\t\tvar elementValue = null;\n\t\t\t\t\tif (element.nodeName.toUpperCase() == \"INPUT\") {\n\t\t\t\t\t\tvar inputType = element.getAttribute(\"type\").toUpperCase();\n\t\t\t\t\t\tif (inputType == \"TEXT\" || inputType == \"PASSWORD\" || inputType == \"HIDDEN\") {\n\t\t\t\t\t\t\telementValue = element.value;\n\t\t\t\t\t\t} else if (inputType == \"CHECKBOX\" || inputType == \"RADIO\") {\n\t\t\t\t\t\t\tif (element.checked) {\n\t\t\t\t\t\t\t\telementValue = element.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (inputType == \"FILE\") {\n\t\t\t\t\t\t    // If the FILE element has a value (the path to the file), then an\n\t\t\t\t\t\t    // IOFrame will be used to handle the callback.\n\t\t\t\t\t\t    useIOFrame = useIOFrame | !(element.value == null || element.value.length == 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (element.nodeName.toUpperCase() == \"SELECT\") {\n\t\t\t\t\t\tif (element.multiple) {\n\t\t\t\t\t\t\telementValue = [];\n\t\t\t\t\t\t\tfor (var i = 0; i < element.length; ++i) {\n\t\t\t\t\t\t\t\tif (element.options[i].selected) {\n\t\t\t\t\t\t\t\t\telementValue.push(element.options[i].value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (element.length == 0) {\n\t\t\t\t\t\t    elementValue = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telementValue = element.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (element.nodeName.toUpperCase() == \"TEXTAREA\") {\n\t\t\t\t\t\telementValue = element.value;\n\t\t\t\t\t}\n\t\t\t\t\tif (elementValue instanceof Array) {\n\t\t\t\t\t\tfor (var i = 0; i < elementValue.length; ++i) {\n\t\t\t\t\t\t\tencodedData += \"&\" + element.name + \"=\" + Anthem_Encode(elementValue[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (elementValue != null) {\n\t\t\t\t\t\tencodedData += \"&\" + element.name + \"=\" + Anthem_Encode(elementValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ASP.NET 1.1 won't fire any events if neither of the following\n\t\t\t// two parameters are not in the request so make sure they're\n\t\t\t// always in the request.\n\t\t\tif (typeof form.__VIEWSTATE == \"undefined\") {\n\t\t\t\tencodedData += \"&__VIEWSTATE=\";\n\t\t\t}\n\t\t\tif (typeof form.__EVENTTARGET == \"undefined\") {\n\t\t\t\tencodedData += \"&__EVENTTARGET=\";\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (encodedData.length > 0) {\n\t    encodedData = encodedData.substring(1);\n\t}\n\tif (typeof(Anthem_DebugRequestText) == \"function\") {\n\t    Anthem_DebugRequestText(encodedData.split(\"&\").join(\"\\n&\"));\n\t}\n\n    // Send the callback request to the server. Use an IOFrame if there is a file upload,\n    // otherwise use an XmlHttpRequest.\n    if (useIOFrame) {\n        // To allow multiple requests at the same time, all of the Anthem parameters are \n        // passed to the server via the querystring\n        var action = Anthem_GetCallBackUrl();\n        action = action + \"&Anthem_IOFrame=true\";\n        if (updatePageAfterCallBack) {\n            action = action + \"&Anthem_UpdatePage=true\";\n        }\n        \n        // We could generate an anonymous function on the fly to handle the clientCallBack\n        // and assign that to the iframe onload event (in fact this is how XmlHttpRequests are\n        // handled). But that makes it very hard to debug the callback response. Instead\n        // we will stuff the clientCallBack function and args into an array and then hard code\n        // the onload event handler. The handler will find the appropriate callback info in\n        // the array and handle the clientCallBack.\n        var id = \"f\" + new String(Math.floor(9999 * Math.random())); // Generate frame number\n        if (typeof(clientCallBack) == \"function\") {\n            var frame = { \"id\":id, \"clientCallBack\":clientCallBack, \"clientCallBackArg\":clientCallBackArg };\n            callbackFrames.push(frame);\n        }\n        \n        // Create a new, invisible iframe to handle the io.\n        var ioframe = null;\n        if (window.ActiveXObject) {\n            ioframe = document.createElement(\"<iframe name=\\\"\" + id + \"\\\" id=\\\"\" + id + \"\\\" onload=\\\"Anthem_HandleIOFrameResponse('\" + id + \"');\\\"/>\");\n        } else {\n            ioframe = document.createElement(\"iframe\");\n            ioframe.id = id;\n            ioframe.name = id;\n            ioframe.onload = function (){ Anthem_HandleIOFrameResponse(id); }\n        }\n        ioframe.style.visibility = \"hidden\";\n        ioframe.style.height = \"1px\";\n        document.body.appendChild(ioframe);\n\n        // Submit this form in the hidden iframe\n        var theForm = Anthem_GetForm(); \n        var tempActionUri = theForm.action; \n        theForm.action = action; \n        theForm.target = id;\n        try { \n            theForm.submit(); \n        } catch (e) {\n            result = { \"value\": null, \"error\": e.message };\n\t\t    if (typeof(Anthem_DebugError) == \"function\") {\n\t\t        Anthem_DebugError(e.name + \": \" + e.message + \" (\" + e.number + \")\");\n\t\t    }\n\t\t    if (typeof(window.Anthem_Error) == \"function\") {\n\t\t\t    Anthem_Error(result);\n\t\t    }            \n        }\n\n        // Restore the form \n        theForm.target = \"\"; \n        theForm.action = tempActionUri;\n        \n    } else {\n    \n\t    var x = Anthem_GetXMLHttpRequest();\n\t    var result = null;\n\t    if (!x) {\n\t\t    result = { \"value\": null, \"error\": \"NOXMLHTTP\" };\n\t\t    if (typeof(Anthem_DebugError) == \"function\") {\n\t\t        Anthem_DebugError(result.error);\n\t\t    }\n\t\t    if (typeof(window.Anthem_Error) == \"function\") {\n\t\t\t    Anthem_Error(result);\n\t\t    }\n\t\t    if (typeof(clientCallBack) == \"function\") {\n\t\t\t    clientCallBack(result, clientCallBackArg);\n\t\t    }\n\t\t    return result;\n\t    }\n\t    var action = Anthem_GetCallBackUrl();\n\t    x.open(\"POST\", url ? url : action, clientCallBack ? true : false);\n\t    x.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n\t    x.setRequestHeader(\"Accept-Encoding\", \"gzip, deflate\");\n\t    if (typeof(clientCallBack) == \"function\") {\n\t\t    x.onreadystatechange = function() {\n\t\t\t    if (x.readyState != 4) {\n\t\t\t\t    return;\n\t\t\t    }\n\t\t\t    if (typeof(Anthem_DebugResponseText) == \"function\") {\n\t\t\t        Anthem_DebugResponseText(x.responseText);\n\t\t\t    }\n\t\t\t    result = Anthem_GetResult(x);\n\t\t\t    if (result.error) {\n\t\t\t        if (typeof(Anthem_DebugError) == \"function\") {\n\t\t\t\t        Anthem_DebugError(result.error);\n\t\t\t\t    }\n\t\t\t\t    if (typeof(window.Anthem_Error) == \"function\") {\n\t\t\t\t\t    Anthem_Error(result);\n\t\t\t\t    }\n\t\t\t    }\n\t\t\t    if (updatePageAfterCallBack) {\n\t\t\t\t    Anthem_UpdatePage(result);\n\t\t\t    }\n\t\t\t    Anthem_EvalClientSideScript(result);\n\t\t\t    clientCallBack(result, clientCallBackArg);\n\t\t\t    x = null;\n\t\t\t    if (typeof(window.Anthem_PostCallBack) == \"function\") {\n\t\t\t\t    Anthem_PostCallBack();\n\t\t\t    }\n\t\t    }\n\t    }\n\t    x.send(encodedData);\n\t    if (typeof(clientCallBack) != \"function\") {\n\t        if (typeof(Anthem_DebugResponseText) == \"function\") {\n\t\t        Anthem_DebugResponseText(x.responseText);\n\t\t    }\n\t\t    result = Anthem_GetResult(x);\n\t\t    if (result.error) {\n\t\t        if (typeof(Anthem_DebugError) == \"function\") {\n\t\t\t        Anthem_DebugError(result.error);\n\t\t\t    }\n\t\t\t    if (typeof(window.Anthem_Error) == \"function\") {\n\t\t\t\t    Anthem_Error(result);\n\t\t\t    }\n\t\t    }\n\t\t    if (updatePageAfterCallBack) {\n\t\t\t    Anthem_UpdatePage(result);\n\t\t    }\n\t\t    Anthem_EvalClientSideScript(result);\n\t\t    if (typeof(window.Anthem_PostCallBack) == \"function\") {\n\t\t\t    Anthem_PostCallBack();\n\t\t    }\n\t    }\n    }\t\n\treturn result;\n}\n\nfunction Anthem_GetResult(x) {\n\tvar result = { \"value\": null, \"error\": null };\n\tvar responseText = x.responseText;\n\ttry {\n\t\tresult = eval(\"(\" + responseText + \")\");\n\t} catch (e) {\n\t\tif (responseText.length == 0) {\n\t\t\tresult.error = \"NORESPONSE\";\n\t\t} else {\n\t\t\tresult.error = \"BADRESPONSE\";\n\t\t\tresult.responseText = responseText;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction Anthem_SetHiddenInputValue(form, name, value) {\n    var input = null;\n    if (form[name]) {\n        input = form[name];\n    } else {\n        input = document.createElement(\"input\");\n        input.setAttribute(\"name\", name);\n        input.setAttribute(\"type\", \"hidden\");\n    }\n    input.setAttribute(\"value\", value);\n    var parentElement = input.parentElement ? input.parentElement : input.parentNode;\n    if (parentElement == null) {\n        form.appendChild(input);\n        form[name] = input;\n    }\n}\n\nfunction Anthem_RemoveHiddenInput(form, name) {\n    var input = form[name];\n    if (input != null && typeof(input) != \"undefined\") {\n      var parentElement = input.parentElement ? input.parentElement : input.parentNode;\n      if (parentElement != null) {\n          form[name] = null;\n          parentElement.removeChild(input);\n      }\n    }\n}\n\nfunction Anthem_FireEvent(eventTarget, eventArgument, clientCallBack, clientCallBackArg, includeControlValuesWithCallBack, updatePageAfterCallBack) {\n\tvar form = Anthem_GetForm();\n\tAnthem_SetHiddenInputValue(form, \"__EVENTTARGET\", eventTarget);\n\tAnthem_SetHiddenInputValue(form, \"__EVENTARGUMENT\", eventArgument);\n\tAnthem_CallBack(null, null, null, null, null, clientCallBack, clientCallBackArg, includeControlValuesWithCallBack, updatePageAfterCallBack);\n\tform.__EVENTTARGET.value = \"\";\n\tform.__EVENTARGUMENT.value = \"\";\n}\n\nfunction Anthem_UpdatePage(result) {\n\tvar form = Anthem_GetForm();\n\tif (result.viewState) {\n\t\tAnthem_SetHiddenInputValue(form, \"__VIEWSTATE\", result.viewState);\n\t}\n\tif (result.viewStateEncrypted) {\n\t\tAnthem_SetHiddenInputValue(form, \"__VIEWSTATEENCRYPTED\", result.viewStateEncrypted);\n\t}\n\tif (result.eventValidation) {\n\t\tAnthem_SetHiddenInputValue(form, \"__EVENTVALIDATION\", result.eventValidation);\n\t}\n\tif (result.controls) {\n\t\tfor (var controlID in result.controls) {\n\t\t\tvar containerID = \"Anthem_\" + controlID.split(\"$\").join(\"_\") + \"__\";\n\t\t\tvar control = document.getElementById(containerID);\n\t\t\tif (control) {\n\t\t\t\tcontrol.innerHTML = result.controls[controlID];\n\t\t\t\tif (result.controls[controlID] == \"\") {\n\t\t\t\t\tcontrol.style.display = \"none\";\n\t\t\t\t} else {\n\t\t\t\t\tcontrol.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (result.pagescript) {\n\t    Anthem_LoadPageScript(result, 0);\n\t}\n}\n\n// Load each script in order and wait for each one to load before proceeding\nfunction Anthem_LoadPageScript(result, index) {\n    if (index < result.pagescript.length) {\n\t\ttry {\n\t\t    var isExternalScript = false;\n\t\t    var script = document.createElement('script');\n\t\t    script.type = 'text/javascript';\n\t\t    if (result.pagescript[index].indexOf('src=') == 0) {\n\t\t        isExternalScript = true;\n\t\t        script.src = result.pagescript[index].substring(4);\n\t\t    } else {\n\t\t        if (script.canHaveChildren ) {\n\t\t            script.appendChild(document.createTextNode(result.pagescript[index]));\n\t\t        } else {\n\t\t            script.text = result.pagescript[index];\n\t\t        }\n\t\t    }\n\t\t    var heads = document.getElementsByTagName('head');\n\t\t    if (heads != null && typeof(heads) != \"undefined\" && heads.length > 0) {\n\t\t        var head = heads[0];\n\n\t\t        // The order that scripts appear is important since later scripts can\n\t\t        // redefine a function. Therefore it is important to add every script\n\t\t        // to the page and in the same order that they were added on the server.\n\t\t        // On the other hand, if we just keep adding scripts the DOM will grow\n\t\t        // unnecessarily. This code scans the <head> element block and removes \n\t\t        // previous instances of the identical script.\n\t\t        var found = false;\n\t\t        for (var child = 0; child < head.childNodes.length; child++) {\n\t\t            var control = head.childNodes[child];\n\t\t            if (typeof(control.tagName) == \"string\") {\n\t\t                if (control.tagName.toUpperCase() == \"SCRIPT\") {\n\t\t                    if (script.src.length > 0) {\n\t\t                        if (script.src == control.src) {\n\t\t                            found = true;\n\t\t                            break;\n\t\t                        }\n\t\t                    } else if (script.innerHTML.length > 0) {\n\t\t                        if (script.innerHTML == control.innerHTML) {\n\t\t                            found = true;\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (found) {\n\t\t            head.removeChild(control);\n\t\t        }\n                \n                var scriptAddedToHead = false;\n                if (typeof script.readyState != \"undefined\" && !window.opera) {\n                    script.onreadystatechange = function() {\n                        if (script.readyState != \"complete\" && script.readyState != \"loaded\") {\n                            return;\n                        } else {\n                            Anthem_LoadPageScript(result, index + 1);\n                        }\n                    }\n                } else {\n                    if (isExternalScript) // if it's an external script, only execute the next script when the previous one is loaded.\n                    {\n                        script.onload = function() {\n                            Anthem_LoadPageScript(result, index + 1);\n                        }\n                    }\n                    else // I didn't find a way for script blocks to fire some onload event. So in this case directly call the Anthem_LoadPageScript for the next script.\n                    {\n                        document.getElementsByTagName('head')[0].appendChild(script);\n                        scriptAddedToHead = true;\n                        Anthem_LoadPageScript(result, index + 1);\n                    }\n                }\n                \n                // Now we append the new script and move on to the next script.\n\t\t        // Note that this is a recursive function. It stops when the\n\t\t        // index grows larger than the number of scripts.\n\t\t        if (!scriptAddedToHead)\n                    document.getElementsByTagName('head')[0].appendChild(script);\n\t        }\n\t\t} catch (e) {\n\t\t    Anthem_DebugError(\"Error adding page script to head. \" + e.name + \": \" + e.message);\n\t\t}\n\t}\n} \n\nfunction Anthem_EvalClientSideScript(result) {\n\tif (result.script) {\n\t\tfor (var i = 0; i < result.script.length; ++i) {\n\t\t\ttry {\n\t\t\t\teval(result.script[i]);\n\t\t\t} catch (e) {\n\t\t\t\talert(\"Error evaluating client-side script!\\n\\nScript: \" + result.script[i] + \"\\n\\nException: \" + e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n//Fix for bug #1429412, \"Reponse callback returns previous response after file push\".\n//see http://sourceforge.net/tracker/index.php?func=detail&aid=1429412&group_id=151897&atid=782464\nfunction Anthem_Clear__EVENTTARGET() {\n\tvar form = Anthem_GetForm();\n\tAnthem_SetHiddenInputValue(form, \"__EVENTTARGET\", \"\");\n}\n\nfunction Anthem_InvokePageMethod(methodName, args, clientCallBack, clientCallBackArg) {\n\tAnthem_Clear__EVENTTARGET(); // fix for bug #1429412\n    return Anthem_CallBack(null, \"Page\", null, methodName, args, clientCallBack, clientCallBackArg, true, true);\n}\n\nfunction Anthem_InvokeMasterPageMethod(methodName, args, clientCallBack, clientCallBackArg) {\n\tAnthem_Clear__EVENTTARGET(); // fix for bug #1429412\n    return Anthem_CallBack(null, \"MasterPage\", null, methodName, args, clientCallBack, clientCallBackArg, true, true);\n}\n\nfunction Anthem_InvokeControlMethod(id, methodName, args, clientCallBack, clientCallBackArg) {\n\tAnthem_Clear__EVENTTARGET(); // fix for bug #1429412\n    return Anthem_CallBack(null, \"Control\", id, methodName, args, clientCallBack, clientCallBackArg, true, true);\n}\n\nfunction Anthem_PreProcessCallBack(\n    control,\n    e,\n    eventTarget,\n    causesValidation, \n    validationGroup, \n    imageUrlDuringCallBack, \n    textDuringCallBack, \n    enabledDuringCallBack,\n    preCallBackFunction,\n    callBackCancelledFunction,\n    preProcessOut\n) {\n\tvar valid = true;\n\tif (causesValidation && typeof(Page_ClientValidate) == \"function\") {\n\t\tvalid = Page_ClientValidate(validationGroup);\n\t}\n\tif (typeof(WebForm_OnSubmit) == \"function\") {\n\t    valid = WebForm_OnSubmit();\n\t}\n\tif (valid) {\n        var preCallBackResult = true;\n        if (typeof(preCallBackFunction) == \"function\") {\n\t        preCallBackResult = preCallBackFunction(control, e);\n        }\n        if (typeof(preCallBackResult) == \"undefined\" || preCallBackResult) {\n\t\t    var inputType = control.getAttribute(\"type\");\n\t\t    inputType = (inputType == null) ? '' : inputType.toUpperCase();\n\t\t    if (inputType == \"IMAGE\" && e != null) {\n                var form = Anthem_GetForm();\n                if (e.offsetX) { // IE\n                    Anthem_SetHiddenInputValue(form, eventTarget + \".x\", e.offsetX);\n                    Anthem_SetHiddenInputValue(form, eventTarget + \".y\", e.offsetY);\n                } else { // FireFox + ???\n                    var offset = GetControlLocation(control);\n                    Anthem_SetHiddenInputValue(form, eventTarget + \".x\", e.clientX - offset.x + 1 + window.pageXOffset);\n                    Anthem_SetHiddenInputValue(form, eventTarget + \".y\", e.clientY - offset.y + 1 + window.pageYOffset);\n                }\n\t\t    }\n\t\t    if (imageUrlDuringCallBack || textDuringCallBack) {\n\t\t        var nodeName = control.nodeName.toUpperCase();\n\t\t        if (nodeName == \"INPUT\") {\n\t\t            if (inputType == \"CHECKBOX\" || inputType == \"RADIO\" || inputType == \"TEXT\") {\n\t\t                preProcessOut.OriginalText = GetLabelText(control.id);\n\t\t                SetLabelText(control.id, textDuringCallBack);\n\t\t            } else if (inputType == \"IMAGE\") {\n\t\t                if (imageUrlDuringCallBack) {\n\t\t                    preProcessOut.OriginalText = control.src;\n\t\t                    control.src = imageUrlDuringCallBack;\n\t\t                } else {\n\t\t                    preProcessOut.ParentElement = control.parentElement ? control.parentElement : control.parentNode;\n\t\t                    if (preProcessOut.ParentElement) {\n\t\t                        preProcessOut.OriginalText = preProcessOut.ParentElement.innerHTML;\n\t\t                        preProcessOut.ParentElement.innerHTML = textDuringCallBack;\n\t\t                    }\n\t\t                }\n\t\t            } else if (inputType == \"SUBMIT\" || inputType == \"BUTTON\") {\n\t\t                preProcessOut.OriginalText = control.value;\n\t\t                control.value = textDuringCallBack;\n\t\t            }\n\t\t        } else if (nodeName == \"SELECT\" || nodeName == \"SPAN\") {\n\t\t            preProcessOut.OriginalText = GetLabelText(control.id);\n\t\t            SetLabelText(control.id, textDuringCallBack);\n\t\t        } else {\n\t\t            preProcessOut.OriginalText = control.innerHTML;\n\t\t\t        control.innerHTML = textDuringCallBack;\n\t\t\t    }\n\t\t    }\n\t\t    // Disable the control during callback if required\n\t\t    control.disabled = (typeof(enabledDuringCallBack) == \"undefined\") ? false : !enabledDuringCallBack;\n\t\t    return true;\n\t\t} else {\n\t\t    // Callback cancelled\n            if (typeof(callBackCancelledFunction) == \"function\") {\n\t            callBackCancelledFunction(control, e);\n\t        }\n\t        return false;\n\t\t}\n    } else {\n        // Validation failed\n        return false;\n    }\n}\n\nfunction Anthem_PreProcessCallBackOut() {\n    // Fields\n    this.ParentElement = null;\n    this.OriginalText = '';\n}\n\nfunction Anthem_PostProcessCallBack(\n    result, \n    control,\n    e,\n    eventTarget, \n    clientCallBack, \n    clientCallBackArg, \n    imageUrlDuringCallBack, \n    textDuringCallBack, \n    postCallBackFunction, \n    preProcessOut\n) {\n    if (typeof(postCallBackFunction) == \"function\") {\n        postCallBackFunction(control, e);\n    }\n    // Re-enable the control if it was disabled during callback\n\tcontrol.disabled = false;\n    var inputType = control.getAttribute(\"type\");\n    inputType = (inputType == null) ? '' : inputType.toUpperCase();\n\tif (inputType == \"IMAGE\") {\n\t    var form = Anthem_GetForm();\n        Anthem_RemoveHiddenInput(form, eventTarget + \".x\");\n        Anthem_RemoveHiddenInput(form, eventTarget + \".y\");\n\t}\n\tif (imageUrlDuringCallBack || textDuringCallBack) {\n\t    var nodeName = control.nodeName.toUpperCase();\n\t    if (nodeName == \"INPUT\") {\n\t        if (inputType == \"CHECKBOX\" || inputType == \"RADIO\" || inputType == \"TEXT\") {\n\t            SetLabelText(control.id, preProcessOut.OriginalText);\n\t        } else if (inputType == \"IMAGE\") {\n\t            if (imageUrlDuringCallBack) {\n\t                control.src = preProcessOut.OriginalText;\n\t            } else {\n\t                preProcessOut.ParentElement.innerHTML = preProcessOut.OriginalText;\n\t            }\n\t        } else if (inputType == \"SUBMIT\" || inputType == \"BUTTON\") {\n\t            control.value = preProcessOut.OriginalText;\n\t        }\n\t    } else if (nodeName == \"SELECT\" || nodeName == \"SPAN\") {\n\t        SetLabelText(control.id, preProcessOut.OriginalText);\n\t    } else {\n\t        control.innerHTML = preProcessOut.OriginalText;\n\t    }\n\t}\n\tif (typeof(clientCallBack) == \"function\") {\n\t    clientCallBack(result, clientCallBackArg);\n\t}\n}\n\nfunction Anthem_FireCallBackEvent(\n\tcontrol,\n\te,\n\teventTarget,\n\teventArgument,\n\tcausesValidation,\n\tvalidationGroup,\n\timageUrlDuringCallBack,\n\ttextDuringCallBack,\n\tenabledDuringCallBack,\n\tpreCallBackFunction,\n\tpostCallBackFunction,\n\tcallBackCancelledFunction,\n\tincludeControlValuesWithCallBack,\n\tupdatePageAfterCallBack\n) {\n    // Cancel the callback if the control is disabled. Although most controls will\n    // not raise their callback event if they are disabled, the LinkButton will.\n    // This check is for the LinkButton. See SourceForge Patch 1639700.\n    if (control.disabled) return;\n\tvar preProcessOut = new Anthem_PreProcessCallBackOut();\n\tvar preProcessResult = Anthem_PreProcessCallBack(\n\t    control, \n\t    e, \n\t    eventTarget,\n\t    causesValidation, \n\t    validationGroup, \n\t    imageUrlDuringCallBack, \n\t    textDuringCallBack, \n\t    enabledDuringCallBack, \n\t    preCallBackFunction, \n\t    callBackCancelledFunction, \n\t    preProcessOut\n\t);\n    if (preProcessResult) {\n        var eventType = e.type;\n\t    Anthem_FireEvent(\n\t\t    eventTarget,\n\t\t    eventArgument,\n\t\t    function(result) {\n                Anthem_PostProcessCallBack(\n                    result, \n                    control, \n                    eventType,\n                    eventTarget,\n                    null, \n                    null, \n                    imageUrlDuringCallBack, \n                    textDuringCallBack, \n                    postCallBackFunction, \n                    preProcessOut\n                );\n\t\t    },\n\t\t    null,\n\t\t    includeControlValuesWithCallBack,\n\t\t    updatePageAfterCallBack\n\t    );\n    }\n}\n\nfunction AnthemListControl_OnClick(\n    e,\n\tcausesValidation,\n\tvalidationGroup,\n\ttextDuringCallBack,\n\tenabledDuringCallBack,\n\tpreCallBackFunction,\n\tpostCallBackFunction,\n\tcallBackCancelledFunction,\n\tincludeControlValuesWithCallBack,\n\tupdatePageAfterCallBack\n) {\n\tvar target = e.target || e.srcElement;\n\tif (target.nodeName.toUpperCase() == \"LABEL\" && target.htmlFor != '')\n\t    return;\n\tvar eventTarget = target.id.split(\"_\").join(\"$\");\n\tAnthem_FireCallBackEvent(\n\t    target, \n\t    e,\n\t    eventTarget, \n\t    '', \n\t    causesValidation, \n\t    validationGroup, \n\t    '',\n\t    textDuringCallBack, \n\t    enabledDuringCallBack, \n\t    preCallBackFunction, \n\t    postCallBackFunction, \n\t    callBackCancelledFunction, \n\t    true, \n\t    true\n\t);\n}\n\n// Returns the top, left control location in FireFox\nfunction GetControlLocation(control) {\n    var offsetX = 0;\n    var offsetY = 0;\n    var parent;\n    \n    for (parent = control; parent; parent = parent.offsetParent) {\n        if (parent.offsetLeft) {\n            offsetX += parent.offsetLeft;\n        }\n        if (parent.offsetTop) {\n            offsetY += parent.offsetTop;\n        }\n    }\n    \n    return { x: offsetX, y: offsetY };\n}\n\nfunction GetLabelText(id) {\n    var labels = document.getElementsByTagName('label');\n    for (var i = 0; i < labels.length; i++) {\n        if (labels[i].htmlFor == id) {\n            return labels[i].innerHTML;\n        }\n    }\n    return null;\n}\n\nfunction SetLabelText(id, text) {\n    var labels = document.getElementsByTagName('label');\n    for (var i = 0; i < labels.length; i++) {\n        if (labels[i].htmlFor == id) {\n            labels[i].innerHTML = text;\n            return;\n        }\n    }\n}\n\n// Used by encodeURIComponentNew to mimic function encodeURIComponent in \n// IE 5.5+, Netscape 6+, and Mozilla\nfunction utf8(wide) {\n  var c, s;\n  var enc = \"\";\n  var i = 0;\n  while(i<wide.length) {\n    c= wide.charCodeAt(i++);\n    // handle UTF-16 surrogates\n    if (c>=0xDC00 && c<0xE000) continue;\n    if (c>=0xD800 && c<0xDC00) {\n      if (i>=wide.length) continue;\n      s= wide.charCodeAt(i++);\n      if (s<0xDC00 || c>=0xDE00) continue;\n      c= ((c-0xD800)<<10)+(s-0xDC00)+0x10000;\n    }\n    // output value\n    if (c<0x80) enc += String.fromCharCode(c);\n    else if (c<0x800) enc += String.fromCharCode(0xC0+(c>>6),0x80+(c&0x3F));\n    else if (c<0x10000) enc += String.fromCharCode(0xE0+(c>>12),0x80+(c>>6&0x3F),0x80+(c&0x3F));\n    else enc += String.fromCharCode(0xF0+(c>>18),0x80+(c>>12&0x3F),0x80+(c>>6&0x3F),0x80+(c&0x3F));\n  }\n  return enc;\n}\n\nvar hexchars = \"0123456789ABCDEF\";\n\nfunction toHex(n) {\n  return hexchars.charAt(n>>4)+hexchars.charAt(n & 0xF);\n}\n\nvar okURIchars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-\";\n\n// Mimics function encodeURIComponent in IE 5.5+, Netscape 6+, and Mozilla\nfunction encodeURIComponentNew(s) {\n  var s = utf8(s);\n  var c;\n  var enc = \"\";\n  for (var i= 0; i<s.length; i++) {\n    if (okURIchars.indexOf(s.charAt(i))==-1)\n      enc += \"%\"+toHex(s.charCodeAt(i));\n    else\n      enc += s.charAt(i);\n  }\n  return enc;\n}\n\n//]]>\n</script>\n<script src=\"/kca/WebResource.axd?d=J66CvUXnqtkf18yC8-cXYSgHBToVhKKqjbuwE7wFwnInFYGF70Uh_LZIHDQArPtZkeCL9vKgz6C0XNJzyOHi_W6a8av5CPgWmQr-ppmPpxQ1&amp;t=635147401110920824\" type=\"text/javascript\"></script>\n<div>\n\n\t<input type=\"hidden\" name=\"__SCROLLPOSITIONX\" id=\"__SCROLLPOSITIONX\" value=\"0\">\n\t<input type=\"hidden\" name=\"__SCROLLPOSITIONY\" id=\"__SCROLLPOSITIONY\" value=\"0\">\n\t<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\">\n\t<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\">\n\t<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEdAAR94/kxrtHKpoTBgJmtputgwocmOXm74xStVph5IU2fp/5t6U+/r0b2hLwxd2HhT+xa3sYcHzXKC+1UgV3opnnKkaxzKjnoSTfvotao/VJhDY8N7rxC3NmnnaojPQ+juG4=\">\n</div>\n    <div style=\"text-align: left\">\n        <table style=\"width: 100%; height: 237px\">\n            <tbody><tr>\n                <td align=\"left\" rowspan=\"2\" style=\"text-align: left; color: gray; height: 2px; background-color: transparent; width: 14px;\" valign=\"top\">\n                    <span style=\"color: purple\">\n                        <span id=\"ctl00_Label1\" style=\"display:inline-block;color:Black;width:200px;\"></span></span></td>\n                <td align=\"center\" colspan=\"2\" rowspan=\"1\" style=\"text-align: left; height: 2px; color: gray; background-color: transparent;\" valign=\"top\">\n                    <br>\n                    &nbsp;\n                    <table style=\"wi&nbsp;\">\n                        <tbody>\n                        </tbody>\n                    </table>\n                    <table style=\"width: 100%\">\n                        <tbody><tr>\n                            <td align=\"center\" colspan=\"2\" rowspan=\"1\" style=\"background-color: #e1eaf1; width: 774px;\" valign=\"top\">\n                                <img id=\"ctl00_Image2\" src=\"App_Images/New%20KCA%20U%20Logo.jpg\" style=\"height:113px;width:247px;border-width:0px;\"></td>\n                        </tr>\n                        <tr>\n                            <td id=\"curved_border\" colspan=\"2\" valign=\"top\" style=\"border: thin ridge #C0C0C0;\">\n                    <span id=\"ctl00_lblSiteInfo2\" style=\"display:inline-block;color:#404040;font-size:Small;width:100%;\">Site-Hit Counter: 483631<br>     This page was last refreshed at 6:07:53 AM</span><br>\n                                <br>\n                                <span id=\"ctl00_lblSiteInfo\" style=\"display:inline-block;color:#404040;font-size:Small;width:100%;\">Today is Sunday, April 23, 2017</span>\n                                \n                    \n                    \n        <div id=\"Anthem_ctl00_pnlUsers__\"><div id=\"ctl00_pnlUsers\">\n\t\n            <span id=\"Anthem_ctl00_lblTotalUsers__\"><span id=\"ctl00_lblTotalUsers\" style=\"display:inline-block;color:Blue;font-weight:bold;width:612px;\">There are 2 active users currently logged in.</span></span>\n    \n</div></div>\n\n                                <a id=\"ctl00_HyperLink1\" title=\"Click here to go to KCA University official website.\" href=\"http://www.kca.ac.ke\" target=\"_blank\" style=\"display:inline-block;color:Red;width:83px;\">Home</a>\n                                <a id=\"ctl00_HyperLink2\" href=\"FAQs.aspx\" style=\"display:inline-block;color:Red;width:83px;\">FAQs</a>\n                                <a id=\"ctl00_HyperLink3\" href=\"Login.aspx\" style=\"display:inline-block;color:Red;width:83px;\">Login</a>\n                                <span id=\"ctl00_SiteMapPath1\" title=\"KCA Online Course Registaration sitemap path\"><a href=\"#ctl00_SiteMapPath1_SkipLink\"><img alt=\"Skip Navigation Links\" src=\"/kca/WebResource.axd?d=UuCuAwuLlrufJgMrJ0ScY-niN7fSSbr9XNZGryXt_TVq3t0YFfiiXQhWD9u_JYQgnsYe4hbob2V9kIHe2HTd9XPKXYsBjEeAl2DLFiB4zMo1&amp;t=635147401110920824\" width=\"0\" height=\"0\" style=\"border-width:0px;\"></a><a id=\"ctl00_SiteMapPath1_SkipLink\"></a></span>\n                                <br>\n                                <br>\n                    \n    Visit us at <a href=\"http://www.kca.ac.ke\">KCA</a>, for more information.<br>\n    <br>\n    <span style=\"color: black\">Please Log in to view your details</span>\n            <br>\n            Enter your payroll number and password, then click the \"<strong><em>Log In</em></strong>\"\n            button<br>\n            <table style=\"width: 267px; height: 154px\">\n                <tbody><tr>\n                    <td colspan=\"2\" style=\"border: thin ridge gray;\">\n                        <span style=\"color: orangered\">\n                                            Log In</span></td>\n                </tr>\n                <tr>\n                    <td style=\"border: thin ridge gray;\">\n                                            <span id=\"ctl00_Main_UserNameLabel\" style=\"display:inline-block;color:Gray;width:150px;\">Payroll Number:</span></td>\n                    <td style=\"border: thin ridge gray;\">\n                        <input name=\"ctl00$Main$txtUserName\" type=\"text\" id=\"ctl00_Main_txtUserName\" style=\"width:150px;\"></td>\n                </tr>\n                <tr>\n                    <td style=\"border: thin ridge gray;\">\n                                            <span id=\"ctl00_Main_PasswordLabel\" style=\"display:inline-block;color:Gray;width:150px;\">Password:</span></td>\n                    <td style=\"border: thin ridge gray;\">\n                        <input name=\"ctl00$Main$txtPassword\" type=\"password\" id=\"ctl00_Main_txtPassword\" style=\"width:150px;\"></td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\" style=\"border: thin ridge gray;\">\n                        <span id=\"ctl00_Main_Label3\" style=\"display:inline-block;color:OrangeRed;width:310px;\"></span></td>\n                </tr>\n                <tr>\n                    <td style=\"border: thin ridge gray;\">\n                    </td>\n                    <td style=\"border: thin ridge gray;\">\n                        <input type=\"submit\" name=\"ctl00$Main$btnLogin\" value=\"Log In\" id=\"ctl00_Main_btnLogin\" style=\"color:Blue;border-color:Black;border-width:2px;border-style:Ridge;width:150px;\"></td>\n                </tr>\n            </tbody></table>\n        \n    <p>\n        <span id=\"ctl00_Main_lblError\" style=\"display:inline-block;color:OrangeRed;width:378px;\"></span>&nbsp;</p>\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"2\" valign=\"top\" style=\"width: 774px\">\n                                <img id=\"ctl00_Image1\" title=\"© KCA University 2009\" src=\"App_Images/footer.jpg\" style=\"height:170px;width:100%;border-width:0px;\">\n                                <br>\n                        <marquee id=\"curved_border\" style=\"font-family: &quot;Book Antiqua&quot;; color: rgb(255, 255, 255); background-color: rgb(0, 0, 128);\" bgcolor=\"#000080\" scrolldelay=\"90\" loop=\"infinite\" behavior=\"alternate\">\n                            <img id=\"Img1\" title=\"Copyright © KCA University ® 2011\" src=\"App_Images/app.ico\" alt=\"Copyright © KCA University ® 2011\" style=\"height:10px;width:10px;\">\n                            Copyright © KCA University ® 2011 \n                            <img id=\"Img2\" title=\"Copyright © KCA University ® 2011\" src=\"App_Images/app.ico\" alt=\"Copyright © KCA University ® 2011\" style=\"height:10px;width:10px;\">\n                            Powered By CoreTEC Systems and Solutions ltd.\n                            <img id=\"Img1X\" title=\"Copyright © KCA University ® 2011\" src=\"App_Images/app.ico\" alt=\"Copyright © KCA University ® 2011\" style=\"height:10px;width:10px;\">\n                        </marquee>\n        </td>\n                        </tr>\n                        </tbody></table>\n                    <br> \n                    \n                    <br>\n                    \n                    </td>\n                <td align=\"left\" colspan=\"1\" rowspan=\"1\" style=\"color: gray; height: 2px;\n                    text-align: left; background-color: transparent;\" valign=\"top\">\n                    </td>\n            </tr>\n            <tr>\n                <td align=\"left\" colspan=\"1\" style=\"color: gray; height: 2px;\n                    text-align: left\" valign=\"top\">\n                    <p class=\"MsoNormal\" style=\"margin: 0in 0in 10pt\">\n                        <span style=\"font-size: 12pt; color: #000000; line-height: 115%; font-family: 'Times New Roman','serif';\n                            mso-fareast-font-family: 'Times New Roman'\"></span><span style=\"font-size: 11pt;\n                                color: #000000; font-family: Calibri\"></span><span style=\"font-size: 12pt; line-height: 115%;\n                                    font-family: 'Times New Roman','serif'; mso-fareast-font-family: 'Times New Roman'\">\n                                    <!--?xml namespace=\"\" ns=\"urn:schemas-microsoft-com:office:office\" prefix=\"o\" ?--><o:p></o:p></span></p>\n                </td>\n            </tr>\n            </tbody></table>\n        </div>\n    \n<script type=\"text/javascript\">var ctl00_timUsers_timer = null;</script><script type=\"text/javascript\">if (typeof(ctl00_timUsers_timer) != 'undefined' && ctl00_timUsers_timer != null) { clearTimeout(ctl00_timUsers_timer); ctl00_timUsers_timer = null; } ctl00_timUsers_timer = setTimeout(function() { Anthem_InvokeControlMethod('ctl00_timUsers', 'DoTick', [], function() { }, null) }, 1000)</script>\n<script type=\"text/javascript\">\n//<![CDATA[\n\ntheForm.oldSubmit = theForm.submit;\ntheForm.submit = WebForm_SaveScrollPositionSubmit;\n\ntheForm.oldOnSubmit = theForm.onsubmit;\ntheForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;\nWebForm_AutoFocus('ctl00_Main_txtUserName');//]]>\n</script>\n</form>\n\n\n</body>"}
